'ADC_GetHWRevLetter' (auto size = 5) calls a non-deterministic function: 'ADC_GetHWRevVoltage'.
'ADC_GetHWRevVoltage' (auto size = 0) calls a non-deterministic function: 'ADC_Get_Ch_Voltage'.
'ADC_Get_4V0_Voltage' (auto size = 4) calls a non-deterministic function: 'ADC_Get_Ch_Voltage'.
'ADC_Get_Ch_Voltage' (auto size = 32) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'ADC_Get_SC_Voltage' (auto size = 0) calls a non-deterministic function: 'ADC_Get_Ch_Voltage'.
'ADC_Get_uP_Temperature' (auto size = 12) calls a non-deterministic function: 'ADC_Get_Ch_Voltage'.
'ADC_ShutDown' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'ADC_init' (auto size = 4) is finite, requires 84 bytes total stack in calling 'OS_MUTEX_Create'.
'AES_128_DecryptData' (auto size = 277) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'AES_128_EncryptData' (auto size = 271) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'AES_128_Init' (auto size = 4) is finite, requires 84 bytes total stack in calling 'OS_MUTEX_Create'.
'AES_128_UnitTest' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'ALRM_AddOpportunisticAlarms' (auto size = 105) calls into a recursive loop, calls 'EVL_GetLog'.
'ALRM_RealTimeTask' (auto size = 388) calls into a recursive loop, calls 'clearEventLogs'.
'ALRM_clearAllAlarms' (auto size = 8) calls into a recursive loop, calls 'BM_Alloc'.
'ALRM_init' (auto size = 12) calls a non-deterministic function: 'FIO_fopen'.
'ALRM_register' (auto size = 28) calls into a recursive loop, calls 'DBG_log'.
'APP_MSG_CheckRegistrationStatus' (auto size = 24) calls into a recursive loop, calls 'APP_MSG_SendRegistrationMetadata'.
'APP_MSG_DTLSSessionStateChanged' (auto size = 4) calls into a recursive loop, calls 'APP_MSG_CheckRegistrationStatus'.
'APP_MSG_HandleMessage' (auto size = 4) calls a non-deterministic function: 'OS_MSGQ_POST'.
'APP_MSG_HandlerReady' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'APP_MSG_HandlerTask' (auto size = 39) calls into a recursive loop, calls 'DBG_log'.
'APP_MSG_ReEnableRegistration' (auto size = 0) calls into a recursive loop, calls 'APP_MSG_setMetadataRegistrationTimer'.
'APP_MSG_SecurityHandler' (auto size = 41) is recursive, loop contains call to 'LED_checkModeStatus'.
'APP_MSG_SendRegistrationMetadata' (auto size = 32) calls into a recursive loop, calls 'HEEP_initHeader'.
'APP_MSG_SetDmdResetDateHandler' (auto size = 20) calls into a recursive loop, calls 'DEMAND_SetResetDay'.
'APP_MSG_UnsecureHandleMessage' (auto size = 25) calls into a recursive loop, calls 'HEEP_UTIL_unpackHeader'.
'APP_MSG_UpdateRegistrationFile' (auto size = 0) calls a non-deterministic function: 'FIO_fwrite'.
'APP_MSG_init' (auto size = 5) calls a non-deterministic function: 'FIO_fwrite'.
'APP_MSG_initRegistrationInfo' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'APP_MSG_initialRegistrationTimeoutHandler' (auto size = 20) calls a non-deterministic function: 'APP_MSG_setInitialRegistrationTimeout'.
'APP_MSG_maxRegistrationTimeoutHandler' (auto size = 20) calls a non-deterministic function: 'APP_MSG_setMaxRegistrationTimeout'.
'APP_MSG_minRegistrationTimeoutHandler' (auto size = 20) calls a non-deterministic function: 'APP_MSG_setMinRegistrationTimeout'.
'APP_MSG_resendRegistrationMetadata' (auto size = 8) calls a non-deterministic function: 'OS_MSGQ_POST'.
'APP_MSG_setInitialRegistrationTimeout' (auto size = 8) calls a non-deterministic function: 'APP_MSG_UpdateRegistrationFile'.
'APP_MSG_setMaxRegistrationTimeout' (auto size = 8) calls a non-deterministic function: 'APP_MSG_UpdateRegistrationFile'.
'APP_MSG_setMetadataRegistrationTimer' (auto size = 40) calls into a recursive loop, calls 'DBG_log'.
'APP_MSG_setMinRegistrationTimeout' (auto size = 8) calls a non-deterministic function: 'APP_MSG_UpdateRegistrationFile'.
'APP_MSG_updateRegistrationTimeout' (auto size = 0) calls into a recursive loop, calls 'DBG_log'.
'ASCII_atoh' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'ASCII_atohByte' (auto size = 13) is finite, requires 29 bytes total stack in calling 'ASCII_atoh'.
'ASCII_atohU16' (auto size = 16) is finite, requires 53 bytes total stack in calling 'ASCII_atohByte'.
'ASCII_atohU32' (auto size = 20) is finite, requires 57 bytes total stack in calling 'ASCII_atohByte'.
'ASCII_htoa' (auto size = 6) is finite, requires 6 bytes total stack in calling 'no function'.
'AckDelayDuration_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'AckWaitDuration_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'AfcEnable_Set' (auto size = 1) calls a non-deterministic function: 'writeConfig'.
'AfcRssiThreshold_Set' (auto size = 2) calls a non-deterministic function: 'writeConfig'.
'AfcTemperatureRange_Set' (auto size = 4) calls a non-deterministic function: 'writeConfig'.
'AssembleCommand' (auto size = 24) calls a non-deterministic function: 'FIO_fread'.
'BCD_2_HEX' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'BM_Alloc' (auto size = 12) calls into a recursive loop, calls 'bufAlloc'.
'BM_AllocDebug' (auto size = 12) is recursive, loop contains call to 'bufAlloc'.
'BM_AllocStack' (auto size = 12) calls into a recursive loop, calls 'bufAlloc'.
'BM_AllocStatic' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'BM_Free' (auto size = 24) calls into a recursive loop, calls 'DBG_log'.
'BM_SpecLibFree' (auto size = 8) calls into a recursive loop, calls 'BM_Free'.
'BM_SpecLibMalloc' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'BM_getStats' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'BM_init' (auto size = 24) calls a non-deterministic function: 'OS_MSGQ_POST'.
'BM_resetStats' (auto size = 0) is finite, requires 20 bytes total stack in calling 'memset'.
'BM_showAlloc' (auto size = 120) is recursive, calls 'DBG_log'.
'BSP_Get_BspRevision' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'BSP_Get_IoRevision' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'BSP_Get_PspRevision' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'BSP_Get_ResetStatus' (auto size = 6) calls into a recursive loop, calls 'DBG_log'.
'BSP_Setup_VREF' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'BUF_Create' (auto size = 32) is finite, requires 32 bytes total stack in calling 'no function'.
'BUF_Get' (auto size = 12) is finite, requires 52 bytes total stack in calling '_int_disable' (external).
'BUF_Put' (auto size = 12) is finite, requires 52 bytes total stack in calling '_int_disable' (external).
'Berlekamp_Massey' (auto size = 27) is finite, requires 46 bytes total stack in calling 'GFMult'.
'Byte_Swap' (auto size = 7) is finite, requires 7 bytes total stack in calling 'no function'.
'COMM_transmit' (auto size = 5) calls into a recursive loop, calls 'APP_MSG_SecurityHandler'.
'CRC16_CalcMtr' (auto size = 3) is finite, requires 3 bytes total stack in calling 'no function'.
'CRC16_InitMtr' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'CRC16_ResultMtr' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'CRC32_calc' (auto size = 22) is finite, requires 22 bytes total stack in calling 'no function'.
'CRC32_init' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'CRC_16_Calculate' (auto size = 10) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'CRC_16_DcuHack' (auto size = 10) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'CRC_16_PhyHeader' (auto size = 10) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'CRC_32_Calculate' (auto size = 12) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'CRC_ecc108_crc' (auto size = 20) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'CRC_initialize' (auto size = 0) is finite, requires 80 bytes total stack in calling 'OS_MUTEX_Create'.
'CachedAttr_Init' (auto size = 1) calls a non-deterministic function: 'FIO_fwrite'.
'CachedAttr_Init' (auto size = 1) calls a non-deterministic function: 'FIO_fwrite'.
'CalculateSleepWindow' (auto size = 36) calls a non-deterministic function: 'ADC_Get_SC_Voltage'.
'CcaAdaptiveThresholdEnable_Set' (auto size = 1) calls a non-deterministic function: 'writeConfig'.
'CcaOffset_Set' (auto size = 1) calls a non-deterministic function: 'writeConfig'.
'CcaThreshold_Set' (auto size = 2) calls a non-deterministic function: 'writeConfig'.
'ChannelSets_Set' (auto size = 24) is finite, requires 44 bytes total stack in calling 'memcpy'.
'Channels_Set' (auto size = 4) calls a non-deterministic function: 'writeConfig'.
'CheckPHYTimeout' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'CheckRange' (auto size = 302) calls into a recursive loop, calls 'DBG_log'.
'CommStatusHandler' (auto size = 8) calls into a recursive loop, calls 'BM_Free'.
'ComputeDSTParams' (auto size = 16) is finite, requires 97 bytes total stack in calling 'getDSTDate'.
'Compute_Noise_Sum' (auto size = 48) is finite, requires 88 bytes total stack in calling 'powf' (external).
'ConfigAttr_Init' (auto size = 1) calls a non-deterministic function: 'FIO_fwrite'.
'ConfigAttr_Init' (auto size = 8) calls a non-deterministic function: 'FIO_fwrite'.
'ConfigurePHYTimeout' (auto size = 8) is finite, requires 60 bytes total stack in calling 'OS_TICK_Get_CurrentElapsedTicks'.
'Configure_LLWU' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'CreateFileBuffer' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'CsmaMaxAttempts_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'CsmaMaxBackOffTime_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'CsmaMinBackOffTime_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'CsmaPValue_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'CsmaQuickAbort_Set' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'DBGC_DemandResetCallBack' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'DBG_CommandLineTask' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_AfcEnable' (auto size = 81) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_AfcRSSIThreshold' (auto size = 82) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_AfcTemperatureRange' (auto size = 82) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_Buffers' (auto size = 365) calls into a recursive loop, calls 'BM_showAlloc'.
'DBG_CommandLine_CCA' (auto size = 82) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_CCAAdaptiveThreshold' (auto size = 88) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_CCAAdaptiveThresholdEnable' (auto size = 81) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_CCAOffset' (auto size = 81) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_Comment' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'DBG_CommandLine_Counters' (auto size = 24) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_CpuLoadDisable' (auto size = 8) is finite, requires 20 bytes total stack in calling 'STRT_CpuLoadPrint'.
'DBG_CommandLine_CpuLoadEnable' (auto size = 8) is finite, requires 20 bytes total stack in calling 'STRT_CpuLoadPrint'.
'DBG_CommandLine_CpuLoadSmart' (auto size = 8) is finite, requires 20 bytes total stack in calling 'STRT_CpuLoadPrint'.
'DBG_CommandLine_DFW_Status' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_DMDDump' (auto size = 8) calls into a recursive loop, calls 'DEMAND_DumpFile'.
'DBG_CommandLine_DMDTO' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_DebugDisable' (auto size = 8) calls a non-deterministic function: 'DBG_PortTimer_Set'.
'DBG_CommandLine_DebugFilter' (auto size = 12) is finite, requires 32 bytes total stack in calling 'strtoul'.
'DBG_CommandLine_DemandReset' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_DfwTimeDv' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_DsTimeDv' (auto size = 13) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_Dtls' (auto size = 75) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_DtlsStats' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_DumpFiles' (auto size = 8) calls into a recursive loop, calls 'FIO_fileDump'.
'DBG_CommandLine_EVLADD' (auto size = 301) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_EVLCMD' (auto size = 308) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_EVLGETLOG' (auto size = 215) calls into a recursive loop, calls 'BM_Free'.
'DBG_CommandLine_EVLQ' (auto size = 46) calls into a recursive loop, calls 'BM_Free'.
'DBG_CommandLine_EVLSEND' (auto size = 196) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_FreeRAM' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_GenDFWkey' (auto size = 77) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_GetFreq' (auto size = 14) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_GetHWInfo' (auto size = 112) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_HMC_time' (auto size = 8) calls into a recursive loop, calls 'HMC_TIME_Set_Time'.
'DBG_CommandLine_Help' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_HmcCmd' (auto size = 327) calls into a recursive loop, calls 'BM_Free'.
'DBG_CommandLine_HmcCurrent' (auto size = 87) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_HmcDemand' (auto size = 106) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_HmcEng' (auto size = 84) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_HmcHist' (auto size = 98) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_HmcwCmd' (auto size = 35) calls into a recursive loop, calls 'BM_Free'.
'DBG_CommandLine_IdParams' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_IdTimeDv' (auto size = 13) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_InsertAppMsg' (auto size = 448) calls into a recursive loop, calls 'BM_AllocStack'.
'DBG_CommandLine_InsertMacMsg' (auto size = 288) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_LED' (auto size = 30) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_MacAddr' (auto size = 21) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_MacConfig' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_MacPingCmd' (auto size = 28) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_MacReset' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_MacStats' (auto size = 8) calls into a recursive loop, calls 'MAC_Stats'.
'DBG_CommandLine_MacTimeCmd' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_MacTxPause' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_MacTxUnPause' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_NetworkId' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_NoiseBand' (auto size = 132) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_NoiseEstimate' (auto size = 84) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_NoiseEstimateCount' (auto size = 81) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_NoiseEstimateRate' (auto size = 81) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_NumMac' (auto size = 88) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_NvRead' (auto size = 300) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_NvTest' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_NwkGet' (auto size = 12) calls into a recursive loop, calls 'NWK_GetRequest'.
'DBG_CommandLine_NwkReset' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_NwkSet' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'DBG_CommandLine_NwkStart' (auto size = 8) calls into a recursive loop, calls 'NWK_StartRequest'.
'DBG_CommandLine_NwkStats' (auto size = 8) calls into a recursive loop, calls 'NWK_Stats'.
'DBG_CommandLine_NwkStop' (auto size = 8) calls into a recursive loop, calls 'NWK_StopRequest'.
'DBG_CommandLine_OnDemandRead' (auto size = 24) calls into a recursive loop, calls 'OR_MR_MsgHandler'.
'DBG_CommandLine_PWR_BoostMode' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_PWR_BoostTest' (auto size = 76) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_PWR_SuperCap' (auto size = 32) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_Partition' (auto size = 8) calls into a recursive loop, calls 'PAR_ValidatePartitionTable'.
'DBG_CommandLine_PhyConfig' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_PhyReset' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_PhyStats' (auto size = 8) calls into a recursive loop, calls 'PHY_Stats'.
'DBG_CommandLine_Power' (auto size = 81) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_PrintFiles' (auto size = 8) calls into a recursive loop, calls 'FIO_printFile'.
'DBG_CommandLine_Process' (auto size = 20) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_RSSI' (auto size = 34) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_RadioStatus' (auto size = 18) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_Reboot' (auto size = 8) calls a non-deterministic function: 'PWR_SafeReset'.
'DBG_CommandLine_RegState' (auto size = 52) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_RegTimeouts' (auto size = 22) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_RelHighCnt' (auto size = 88) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_RelLowCnt' (auto size = 88) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_RelMedCnt' (auto size = 88) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_RxChannels' (auto size = 22) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_RxDetection' (auto size = 24) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_RxFraming' (auto size = 24) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_RxMode' (auto size = 24) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_RxTimeout' (auto size = 88) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_SM_Config' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_SM_NwActiveActTimeout' (auto size = 32) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_SM_NwPassiveActTimeout' (auto size = 32) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_SM_Stats' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_SchDmdRst' (auto size = 38) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_SendAppMsg' (auto size = 344) calls into a recursive loop, calls 'COMM_transmit'.
'DBG_CommandLine_SendHeadEndMsg' (auto size = 352) calls into a recursive loop, calls 'COMM_transmit'.
'DBG_CommandLine_SendHeepMsg' (auto size = 20) calls into a recursive loop, calls 'HEEP_initHeader'.
'DBG_CommandLine_SetFreq' (auto size = 22) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_StackUsage' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_TXMode' (auto size = 30) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_TaskSummary' (auto size = 8) calls into a recursive loop, calls 'OS_TASK_Summary'.
'DBG_CommandLine_TimeSync' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_TxChannels' (auto size = 22) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_Versions' (auto size = 36) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_chksum' (auto size = 6) is finite, requires 46 bytes total stack in calling '_io_sscanf' (external).
'DBG_CommandLine_clocktst' (auto size = 30) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_crc' (auto size = 288) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_crc16m' (auto size = 286) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_getDstEnable' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_getDstHash' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_getDstOffset' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_getDstParams' (auto size = 8) calls into a recursive loop, calls 'DST_PrintDSTParams'.
'DBG_CommandLine_getDstStartRule' (auto size = 13) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_getDstStopRule' (auto size = 13) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_getTimezoneOffset' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_lpstats' (auto size = 119) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_mtlsStats' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_mtrTime' (auto size = 50) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_rtcCap' (auto size = 13) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_rtcTime' (auto size = 18) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_secConfig' (auto size = 11) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_sectest' (auto size = 17) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_setDstEnable' (auto size = 13) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_setDstOffset' (auto size = 14) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_setDstStartRule' (auto size = 17) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_setDstStopRule' (auto size = 17) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_setTimezoneOffset' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_time' (auto size = 80) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_tunnel' (auto size = 313) calls into a recursive loop, calls 'DBG_log'.
'DBG_CommandLine_virgin' (auto size = 8) calls into a recursive loop, calls 'DBG_CommandLine_virginDelay'.
'DBG_CommandLine_virginDelay' (auto size = 20) calls into a recursive loop, calls 'DBG_log'.
'DBG_GetTaskFilter' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DBG_IsPortEnabled' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DBG_LW_printf' (auto size = 8) is non-deterministic, calls through a function pointer.
'DBG_PortEcho_Get' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DBG_PortEcho_Set' (auto size = 1) calls a non-deterministic function: 'FIO_fwrite'.
'DBG_PortTimer_Get' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DBG_PortTimer_Manage' (auto size = 0) calls a non-deterministic function: 'TMR_ResetTimer'.
'DBG_PortTimer_Set' (auto size = 1) calls a non-deterministic function: 'DBG_PortTimer_Manage'.
'DBG_SetTaskFilter' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'DBG_TxTask' (auto size = 8) calls into a recursive loop, calls 'BM_Free'.
'DBG_init' (auto size = 5) calls a non-deterministic function: 'DBG_PortEcho_Set'.
'DBG_log' (auto size = 30) is recursive, loop contains call to 'BM_AllocDebug'.
'DBG_logPrintHex' (auto size = 19) calls into a recursive loop, calls 'DBG_log'.
'DBG_printFloat' (auto size = 25) is finite, requires 65 bytes total stack in calling 'strcpy' (external).
'DEMAND_Current_Daily_Peak' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DEMAND_DrReadListHandler' (auto size = 89) calls a non-deterministic function: 'DEMAND_setReadingTypes'.
'DEMAND_DumpFile' (auto size = 198) calls into a recursive loop, calls 'DBG_log'.
'DEMAND_GetConfig' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DEMAND_GetDmdValue' (auto size = 12) calls into a recursive loop, calls 'INTF_CIM_CMD_getDemandRstCnt'.
'DEMAND_GetFutureConfig' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DEMAND_GetResetDay' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DEMAND_GetSchDmdRst' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DEMAND_GetTimeout' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DEMAND_ResetCallback' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'DEMAND_ResetInMeter' (auto size = 8) calls into a recursive loop, calls 'HMC_DMD_Reset'.
'DEMAND_ResetMsg' (auto size = 206) calls into a recursive loop, calls 'DBG_log'.
'DEMAND_SetResetDay' (auto size = 8) calls into a recursive loop, calls 'setSchDmdReset'.
'DEMAND_SetTimeout' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DEMAND_Shift_Daily_Peak' (auto size = 16) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DEMAND_configValid' (auto size = 3) is finite, requires 3 bytes total stack in calling 'no function'.
'DEMAND_demandFutureConfigurationHandler' (auto size = 20) calls a non-deterministic function: 'DEMAND_GetFutureConfig'.
'DEMAND_demandPresentConfigurationHandler' (auto size = 20) calls a non-deterministic function: 'DEMAND_GetConfig'.
'DEMAND_demandResetLockoutPeriodHandler' (auto size = 20) calls a non-deterministic function: 'DEMAND_SetTimeout'.
'DEMAND_getConfig' (auto size = 4) calls a non-deterministic function: 'DEMAND_GetConfig'.
'DEMAND_getReadingTypes' (auto size = 5) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DEMAND_init' (auto size = 8) calls a non-deterministic function: 'FIO_fread'.
'DEMAND_isModuleBusy' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DEMAND_setReadingTypes' (auto size = 5) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DEMAND_task' (auto size = 108) calls into a recursive loop, calls 'BM_Free'.
'DFWA_CancelPending' (auto size = 1) calls into a recursive loop, calls 'BM_Free'.
'DFWA_CopyPgmToPgmImagePartition' (auto size = 22) calls into a recursive loop, calls 'DBG_log'.
'DFWA_CounterInc' (auto size = 5) calls a non-deterministic function: 'FIO_fwrite'.
'DFWA_DecrementMeterFwRetryCounter' (auto size = 0) calls a non-deterministic function: 'FIO_fwrite'.
'DFWA_DownloadComplete' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'DFWA_DownloadCompleteTimerExpired' (auto size = 8) calls a non-deterministic function: 'OS_MSGQ_POST'.
'DFWA_GetPatchParititonName' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'DFWA_GetPatchParititonSize' (auto size = 8) is finite, requires 24 bytes total stack in calling 'DFWA_GetPatchParititonName'.
'DFWA_GetSwapState' (auto size = 16) is non-deterministic, calls through a function pointer.
'DFWA_OR_PM_Handler' (auto size = 20) calls a non-deterministic function: 'DFW_SetStreamId'.
'DFWA_PatchComplete' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'DFWA_PatchCompleteTimerExpired' (auto size = 8) calls a non-deterministic function: 'OS_MSGQ_POST'.
'DFWA_SetDownloadCompleteTimer' (auto size = 40) calls into a recursive loop, calls 'DBG_log'.
'DFWA_SetPatchCompleteTimer' (auto size = 40) calls into a recursive loop, calls 'DBG_log'.
'DFWA_SetPatchParititon' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'DFWA_SetSwapState' (auto size = 28) calls into a recursive loop, calls 'DBG_log'.
'DFWA_SupportedCiphers' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'DFWA_UnlockSysIdleMutex' (auto size = 0) calls a non-deterministic function: 'SYSBUSY_unlock'.
'DFWA_WaitForSysIdle' (auto size = 12) calls a non-deterministic function: 'SYSBUSY_lockIfIdle'.
'DFWA_getCapableOfEpBootloaderDFW' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DFWA_getCapableOfEpPatchDFW' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DFWA_getCapableOfMeterBasecodeDFW' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DFWA_getCapableOfMeterPatchDFW' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DFWA_getCapableOfMeterReprogrammingOTA' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DFWA_getDfwAuditTestStatus' (auto size = 120) calls a non-deterministic function: 'DFWA_getFileVars'.
'DFWA_getDfwCompatibilityTestStatus' (auto size = 120) calls a non-deterministic function: 'DFWA_getFileVars'.
'DFWA_getDfwProgramScriptStatus' (auto size = 120) calls a non-deterministic function: 'DFWA_getFileVars'.
'DFWA_getDuplicateDiscardedPacketQty' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DFWA_getFileVars' (auto size = 8) calls a non-deterministic function: 'FIO_fread'.
'DFWA_init' (auto size = 136) calls into a recursive loop, calls 'DBG_log'.
'DFWA_setDerivedKey' (auto size = 52) calls into a recursive loop, calls 'DBG_log'.
'DFWA_setFileVars' (auto size = 4) calls a non-deterministic function: 'FIO_fwrite'.
'DFWA_task' (auto size = 192) calls into a recursive loop, calls 'BM_Free'.
'DFWA_verifyPatchFormat' (auto size = 3) is finite, requires 3 bytes total stack in calling 'no function'.
'DFWI_Apply_MsgHandler' (auto size = 290) calls into a recursive loop, calls 'BM_Free'.
'DFWI_DisplayStatus' (auto size = 176) calls into a recursive loop, calls 'DBG_log'.
'DFWI_DnlComplete' (auto size = 196) calls into a recursive loop, calls 'DBG_log'.
'DFWI_DownloadApply' (auto size = 152) calls into a recursive loop, calls 'DBG_log'.
'DFWI_DownloadCancel' (auto size = 136) calls into a recursive loop, calls 'DBG_log'.
'DFWI_DownloadInit' (auto size = 175) calls into a recursive loop, calls 'DBG_log'.
'DFWI_DownloadPacket' (auto size = 139) calls into a recursive loop, calls 'DBG_log'.
'DFWI_DownloadVerify' (auto size = 132) calls a non-deterministic function: 'DFWP_getMissingPackets'.
'DFWI_Init_MsgHandler' (auto size = 300) calls into a recursive loop, calls 'DBG_log'.
'DFWI_Packet_MsgHandler' (auto size = 41) calls into a recursive loop, calls 'DFWI_DownloadPacket'.
'DFWI_PatchComplete' (auto size = 216) calls into a recursive loop, calls 'DBG_log'.
'DFWI_Verify_MsgHandler' (auto size = 288) calls into a recursive loop, calls 'BM_Free'.
'DFWP_ClearBitMap' (auto size = 1) is non-deterministic, calls through a function pointer.
'DFWP_getBitStatus' (auto size = 13) is non-deterministic, calls through a function pointer.
'DFWP_getMaxPackets' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DFWP_getMissingPackets' (auto size = 27) is non-deterministic, calls through a function pointer.
'DFWP_getMissingPacketsRange' (auto size = 29) is non-deterministic, calls through a function pointer.
'DFWP_init' (auto size = 0) is non-deterministic, calls through a function pointer.
'DFWP_modifyBit' (auto size = 16) is non-deterministic, calls through a function pointer.
'DFWTDCFG_GetTimeDiversity' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DFWTDCFG_OR_PM_Handler' (auto size = 20) calls into a recursive loop, calls 'DFWTDCFG_set_apply_confirm'.
'DFWTDCFG_SetTimeDiversity' (auto size = 8) calls into a recursive loop, calls 'DFWTDCFG_write'.
'DFWTDCFG_get_apply_confirm' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DFWTDCFG_get_download_confirm' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DFWTDCFG_init' (auto size = 8) calls a non-deterministic function: 'FIO_fread'.
'DFWTDCFG_set_apply_confirm' (auto size = 8) calls into a recursive loop, calls 'DFWTDCFG_write'.
'DFWTDCFG_set_download_confirm' (auto size = 8) calls into a recursive loop, calls 'DFWTDCFG_write'.
'DFWTDCFG_write' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'DFW_GetFileType' (auto size = 120) calls a non-deterministic function: 'DFWA_getFileVars'.
'DFW_SetStatus' (auto size = 128) calls a non-deterministic function: 'DFWA_setFileVars'.
'DFW_SetStreamId' (auto size = 128) calls a non-deterministic function: 'DFWA_setFileVars'.
'DFW_Status' (auto size = 120) calls a non-deterministic function: 'DFWA_getFileVars'.
'DFW_StreamId' (auto size = 120) calls a non-deterministic function: 'DFWA_getFileVars'.
'DMA_Complete_IRQ_ISR' (auto size = 44) is finite, requires 220 bytes total stack in calling 'RADIO_TCXO_Get'.
'DR_Logout_Timeout' (auto size = 25) calls into a recursive loop, calls 'DBG_log'.
'DST_ComputeDSTParams' (auto size = 12) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DST_ConvertLocaltoUTC' (auto size = 4) calls a non-deterministic function: 'DST_ConvertTime'.
'DST_ConvertTime' (auto size = 12) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DST_ConvertUTCtoLocal' (auto size = 4) calls a non-deterministic function: 'DST_ConvertTime'.
'DST_GetLocalOffset' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DST_Init' (auto size = 5) calls a non-deterministic function: 'FIO_fread'.
'DST_IsActive' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DST_IsEnable' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DST_OR_PM_timeZoneDstHashHander' (auto size = 20) calls a non-deterministic function: 'DST_getTimeZoneDSTHash'.
'DST_PrintDSTParams' (auto size = 28) calls into a recursive loop, calls 'DBG_log'.
'DST_dstEnabledHandler' (auto size = 21) calls a non-deterministic function: 'DST_setDstEnable'.
'DST_dstEndRuleHandler' (auto size = 25) calls a non-deterministic function: 'DST_setDstStopRule'.
'DST_dstOffsetHandler' (auto size = 22) calls a non-deterministic function: 'DST_setDstOffset'.
'DST_dstStartRuleHandler' (auto size = 25) calls a non-deterministic function: 'DST_setDstStartRule'.
'DST_getDstEnable' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DST_getDstOffset' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DST_getDstStartRule' (auto size = 20) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DST_getDstStopRule' (auto size = 20) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DST_getLocalTime' (auto size = 5) calls a non-deterministic function: 'DST_ConvertUTCtoLocal'.
'DST_getTimeZoneDSTHash' (auto size = 176) calls a non-deterministic function: 'DST_getDstStopRule'.
'DST_getTimeZoneOffset' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DST_setDstEnable' (auto size = 25) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DST_setDstOffset' (auto size = 25) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DST_setDstStartRule' (auto size = 29) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DST_setDstStopRule' (auto size = 29) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DST_setTimeZoneOffset' (auto size = 25) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DST_timeZoneOffsetHandler' (auto size = 24) calls a non-deterministic function: 'DST_setTimeZoneOffset'.
'DTLS_AppSecurityAuthModeChanged' (auto size = 0) calls into a recursive loop, calls 'DtlsSendCommand'.
'DTLS_CounterInc' (auto size = 5) calls a non-deterministic function: 'FIO_fwrite'.
'DTLS_DataRequest' (auto size = 36) calls into a recursive loop, calls 'BM_AllocStack'.
'DTLS_GetCounters' (auto size = 4) is finite, requires 24 bytes total stack in calling 'memcpy'.
'DTLS_GetPublicKey' (auto size = 6) calls into a recursive loop, calls 'ecc108e_ReadKey'.
'DTLS_GetServerCertificateSerialNumber' (auto size = 4) is finite, requires 24 bytes total stack in calling 'memcpy'.
'DTLS_GetSessionState' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DTLS_IsSessionEstablished' (auto size = 5) is finite, requires 57 bytes total stack in calling 'OS_TASK_Sleep'.
'DTLS_OR_PM_Handler' (auto size = 24) calls into a recursive loop, calls 'ecc108e_GetDeviceCert'.
'DTLS_PrintSessionStateInformation' (auto size = 32) calls into a recursive loop, calls 'DBG_log'.
'DTLS_ProcessDataConfirm' (auto size = 4) calls into a recursive loop, calls 'BM_Free'.
'DTLS_ReconnectRf' (auto size = 0) calls into a recursive loop, calls 'DtlsSendCommand'.
'DTLS_RegisterIndicationHandler' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'DTLS_RegisterSessionStateChangedCallback' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'DTLS_Reset' (auto size = 4) calls a non-deterministic function: 'DtlsInitCachedAttr'.
'DTLS_RfTransportIndication' (auto size = 4) calls into a recursive loop, calls 'BM_Free'.
'DTLS_Shutdown' (auto size = 4) calls into a recursive loop, calls 'DtlsSendCommand'.
'DTLS_Stats' (auto size = 1) calls into a recursive loop, calls 'DBG_log'.
'DTLS_Task' (auto size = 20) calls into a recursive loop, calls 'DBG_log'.
'DTLS_UartConnect' (auto size = 8) calls into a recursive loop, calls 'DtlsSendCommand'.
'DTLS_UartDisconnect' (auto size = 0) calls into a recursive loop, calls 'DtlsSendCommand'.
'DTLS_UartTransportIndication' (auto size = 4) calls into a recursive loop, calls 'BM_Free'.
'DTLS_getDtlsValue' (auto size = 16) is non-deterministic, calls through a function pointer.
'DTLS_getInitialAuthenticationTimeout' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DTLS_getMaxAuthenticationTimeout' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DTLS_getMinAuthenticationTimeout' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DTLS_init' (auto size = 12) calls into a recursive loop, calls 'DtlsInitializeSessionCache'.
'DTLS_setInitialAuthenticationTimeout' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DTLS_setMaxAuthenticationTimeout' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DTLS_setMinAuthenticationTimeout' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DVR_BANKED_unitTest' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DVR_CACHE_unitTest' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DVR_EFL_UnitTest' (auto size = 285) calls into a recursive loop, calls 'DBG_log'.
'DataIndication_Create' (auto size = 20) calls into a recursive loop, calls 'BM_AllocStack'.
'DecodeResponse' (auto size = 40) calls a non-deterministic function: 'FIO_fwrite'.
'Demodulator_Set' (auto size = 8) calls into a recursive loop, calls 'PHY_StartRequest'.
'DfwCached_Init' (auto size = 0) calls a non-deterministic function: 'FIO_fwrite'.
'Disable_DMA_Reset_Filter' (auto size = 4) is finite, requires 24 bytes total stack in calling 'memset'.
'Do_CCA' (auto size = 16) calls into a recursive loop, calls 'PHY_Attribute_Get'.
'DtlsApplicationRx' (auto size = 13) calls into a recursive loop, calls 'DBG_log'.
'DtlsApplicationTx' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'DtlsBackoffTimerExpired' (auto size = 8) calls into a recursive loop, calls 'DtlsSendCommand'.
'DtlsBlockOnAppSecurityAuthModeOff' (auto size = 8) calls into a recursive loop, calls 'DtlsSendCommand'.
'DtlsCanConnectRf' (auto size = 12) calls into a recursive loop, calls 'DtlsSendCommand'.
'DtlsCheckIfServerCertificateHasExpired' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'DtlsCheckIfSessionIsStale' (auto size = 28) calls into a recursive loop, calls 'DtlsSendCommand'.
'DtlsConnectResultCallback' (auto size = 4) is non-deterministic, calls through a function pointer.
'DtlsConnectRf' (auto size = 1) calls into a recursive loop, calls 'DtlsCanConnectRf'.
'DtlsConnectSerial' (auto size = 0) calls into a recursive loop, calls 'DtlsSerialConnect'.
'DtlsConvertASN1SubjectToString' (auto size = 32) is finite, requires 72 bytes total stack in calling 'strcat' (external).
'DtlsConvertAsn1TimeStringToSysTime' (auto size = 28) is finite, requires 73 bytes total stack in calling 'TIME_UTIL_ConvertDateFormatToSysFormat'.
'DtlsCreateSession' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'DtlsDisconnectRf' (auto size = 1) calls into a recursive loop, calls 'DBG_log'.
'DtlsDisconnectSerial' (auto size = 0) calls into a recursive loop, calls 'MFGP_DtlsConnectionClosed'.
'DtlsFree' (auto size = 0) is finite, requires 40 bytes total stack in calling 'wolfSSL_shutdown' (external).
'DtlsFreeCommand' (auto size = 8) calls into a recursive loop, calls 'BM_Free'.
'DtlsGenerateSeed' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'DtlsGetAppSecurityAuthMode' (auto size = 1) calls into a recursive loop, calls 'APP_MSG_SecurityHandler'.
'DtlsGetCertificate' (auto size = 16) is non-deterministic, calls through a function pointer.
'DtlsGetOidPrefix' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'DtlsGetSessionCache' (auto size = 16) calls into a recursive loop, calls 'BM_SpecLibFree'.
'DtlsGetTransportString' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'DtlsImportSessionCache_from_wolfSSL36' (auto size = 17) calls into a recursive loop, calls 'BM_SpecLibFree'.
'DtlsInitCachedAttr' (auto size = 1) calls a non-deterministic function: 'FIO_fwrite'.
'DtlsInitConfigAttr' (auto size = 0) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'DtlsInitializeSessionCache' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'DtlsInvalidateSessionCache' (auto size = 4) calls into a recursive loop, calls 'BM_SpecLibFree'.
'DtlsLoadRfCerts' (auto size = 528) calls into a recursive loop, calls 'DBG_log'.
'DtlsLogEvent' (auto size = 60) calls into a recursive loop, calls 'EVL_LogEvent'.
'DtlsPrintMessage' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'DtlsRcvCallback' (auto size = 20) calls into a recursive loop, calls 'DBG_log'.
'DtlsRfConnectNonBlocking' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'DtlsRfCreateContext' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DtlsRfWrite' (auto size = 68) calls into a recursive loop, calls 'NWK_GetRequest'.
'DtlsSaveSessionCache' (auto size = 12) calls into a recursive loop, calls 'BM_SpecLibFree'.
'DtlsSendCallback' (auto size = 16) calls into a recursive loop, calls 'DtlsTransportTx'.
'DtlsSendCommand' (auto size = 4) calls into a recursive loop, calls 'DtlsSendTransportCommand'.
'DtlsSendTransportCommand' (auto size = 28) calls into a recursive loop, calls 'BM_AllocStack'.
'DtlsSerialConnect' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DtlsSerialContextCreate' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DtlsSerialLoadCerts' (auto size = 16) calls into a recursive loop, calls 'BM_AllocStack'.
'DtlsSessionStateChange' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'DtlsSessionStateChangedCallback' (auto size = 4) is non-deterministic, calls through a function pointer.
'DtlsSignature64ToAsn' (auto size = 20) is finite, requires 40 bytes total stack in calling 'memcpy'.
'DtlsSslRealloc' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'DtlsStartBackoff' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'DtlsSubjectsAreEqual' (auto size = 208) is finite, requires 288 bytes total stack in calling 'DtlsConvertASN1SubjectToString'.
'DtlsTransportRx' (auto size = 47) calls into a recursive loop, calls 'BM_AllocStack'.
'DtlsTransportTx' (auto size = 12) calls into a recursive loop, calls 'DtlsRfWrite'.
'DtlsU32CounterInc' (auto size = 6) is finite, requires 6 bytes total stack in calling 'no function'.
'DtlsUpdateLastSessionSuccessSysTime' (auto size = 20) is finite, requires 96 bytes total stack in calling 'TIME_SYS_GetSysDateTime'.
'DtlsUpdateSessionCache' (auto size = 16) calls into a recursive loop, calls 'BM_SpecLibFree'.
'DtlsVerifyCallback' (auto size = 445) calls into a recursive loop, calls 'BM_AllocStack'.
'DumpEventData' (auto size = 180) calls into a recursive loop, calls 'DBG_log'.
'DumpHeadEndData' (auto size = 170) calls into a recursive loop, calls 'DBG_log'.
'EDCFG_OR_PM_Handler' (auto size = 128) calls into a recursive loop, calls 'EDCFG_get_info'.
'EDCFG_getAvgIndPowerFactor' (auto size = 40) calls into a recursive loop, calls 'INTF_CIM_CMD_ansiRead'.
'EDCFG_getEdProgrammedDateTime' (auto size = 40) calls into a recursive loop, calls 'INTF_CIM_CMD_ansiRead'.
'EDCFG_getFwVerNum' (auto size = 24) calls into a recursive loop, calls 'INTF_CIM_CMD_ansiRead'.
'EDCFG_getHwVerNum' (auto size = 20) is finite, requires 60 bytes total stack in calling 'snprintf' (external).
'EDCFG_getMeterDateTime' (auto size = 40) calls into a recursive loop, calls 'INTF_CIM_CMD_ansiRead'.
'EDCFG_get_info' (auto size = 33) calls into a recursive loop, calls 'DBG_log'.
'EDCFG_get_mfg_serial_number' (auto size = 80) calls into a recursive loop, calls 'INTF_CIM_CMD_getMeterReading'.
'EDCFG_get_util_serial_number' (auto size = 6) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'EDCFG_init' (auto size = 8) calls a non-deterministic function: 'FIO_fread'.
'EDCFG_set_info' (auto size = 10) calls into a recursive loop, calls 'EDCFG_write'.
'EDCFG_set_util_serial_number' (auto size = 10) calls into a recursive loop, calls 'EDCFG_util_write'.
'EDCFG_util_write' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'EDCFG_write' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'EL_doList' (auto size = 16) is non-deterministic, calls through a function pointer.
'ENDPT_CIM_CMD_OR_PM_Handler' (auto size = 53) calls into a recursive loop, calls 'APP_MSG_updateRegistrationTimeout'.
'ENDPT_CIM_CMD_getBoolValue' (auto size = 12) is finite, requires 36 bytes total stack in calling 'ENDPT_CIM_CMD_getCapableOfEpPatchDFW'.
'ENDPT_CIM_CMD_getBubbleUpSchedule' (auto size = 4) is finite, requires 14 bytes total stack in calling 'ID_getLpBuSchedule'.
'ENDPT_CIM_CMD_getCapableOfEpBootloaderDFW' (auto size = 8) is finite, requires 16 bytes total stack in calling 'DFWA_getCapableOfEpBootloaderDFW'.
'ENDPT_CIM_CMD_getCapableOfEpPatchDFW' (auto size = 8) is finite, requires 16 bytes total stack in calling 'DFWA_getCapableOfEpPatchDFW'.
'ENDPT_CIM_CMD_getCapableOfMeterBasecodeDFW' (auto size = 8) is finite, requires 16 bytes total stack in calling 'DFWA_getCapableOfMeterBasecodeDFW'.
'ENDPT_CIM_CMD_getCapableOfMeterPatchDFW' (auto size = 8) is finite, requires 16 bytes total stack in calling 'DFWA_getCapableOfMeterPatchDFW'.
'ENDPT_CIM_CMD_getCapableOfMeterReprogrammingOTA' (auto size = 8) is finite, requires 16 bytes total stack in calling 'DFWA_getCapableOfMeterReprogrammingOTA'.
'ENDPT_CIM_CMD_getComDeviceType' (auto size = 16) is finite, requires 56 bytes total stack in calling 'strncpy' (external).
'ENDPT_CIM_CMD_getCommBLVerNum' (auto size = 4) is finite, requires 20 bytes total stack in calling 'VER_getFirmwareVersion'.
'ENDPT_CIM_CMD_getCommFWVerNum' (auto size = 4) is finite, requires 20 bytes total stack in calling 'VER_getFirmwareVersion'.
'ENDPT_CIM_CMD_getCommHWVerNum' (auto size = 12) calls a non-deterministic function: 'VER_getHardwareVersion'.
'ENDPT_CIM_CMD_getCommMACID' (auto size = 16) is finite, requires 48 bytes total stack in calling 'MAC_EUI_Address_Get'.
'ENDPT_CIM_CMD_getDataType' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'ENDPT_CIM_CMD_getDateTimeValue' (auto size = 12) is finite, requires 32 bytes total stack in calling 'ENDPT_CIM_CMD_getInstallationDateTime'.
'ENDPT_CIM_CMD_getDemandPresentConfig' (auto size = 4) calls a non-deterministic function: 'DEMAND_getConfig'.
'ENDPT_CIM_CMD_getInstallationDateTime' (auto size = 4) is finite, requires 12 bytes total stack in calling 'TIME_SYS_GetInstallationDateTime'.
'ENDPT_CIM_CMD_getIntValueAndMetadata' (auto size = 16) calls a non-deterministic function: 'ENDPT_CIM_CMD_getTimeZoneDstHash'.
'ENDPT_CIM_CMD_getNewRegistrationRequired' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'ENDPT_CIM_CMD_getOpportunisticAlarmIndexID' (auto size = 4) is finite, requires 12 bytes total stack in calling 'EVL_GetNormalIndex'.
'ENDPT_CIM_CMD_getRealTimeAlarmIndexID' (auto size = 4) is finite, requires 12 bytes total stack in calling 'EVL_GetRealTimeIndex'.
'ENDPT_CIM_CMD_getStrValue' (auto size = 24) calls a non-deterministic function: 'ENDPT_CIM_CMD_getCommHWVerNum'.
'ENDPT_CIM_CMD_getTimeZoneDstHash' (auto size = 8) calls a non-deterministic function: 'DST_getTimeZoneDSTHash'.
'ENG_RES_rssiLinkReading' (auto size = 4) is finite, requires 110 bytes total stack in calling 'add_rssiLinkReading'.
'ENG_RES_statsReading' (auto size = 8) calls into a recursive loop, calls 'add_statsReading'.
'EVL_AlarmHandlerTask' (auto size = 262) calls into a recursive loop, calls 'BM_AllocDebug'.
'EVL_FirmwareError' (auto size = 12) calls a non-deterministic function: 'DBG_LW_printf'.
'EVL_GetLGSimState' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'EVL_GetLog' (auto size = 48) calls into a recursive loop, calls 'DBG_log'.
'EVL_GetNormalIndex' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'EVL_GetRealTimeIndex' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'EVL_GetThresholds' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'EVL_Initalize' (auto size = 4) is non-deterministic, calls through a function pointer.
'EVL_LGSimActive' (auto size = 4) calls a non-deterministic function: 'PWRCFG_get_SimulateLastGaspTraffic'.
'EVL_LGSimAllowMsg' (auto size = 12) calls into a recursive loop, calls 'BM_Free'.
'EVL_LGSimCancel' (auto size = 0) calls into a recursive loop, calls 'DBG_log'.
'EVL_LGSimStart' (auto size = 8) calls into a recursive loop, calls 'EVL_LGSimCancel'.
'EVL_LGSimTxDoneSignal' (auto size = 0) calls a non-deterministic function: 'OS_SEM_POST'.
'EVL_LogEvent' (auto size = 88) calls into a recursive loop, calls 'BM_Free'.
'EVL_MarkSent' (auto size = 52) calls into a recursive loop, calls 'DBG_log'.
'EVL_OR_PM_Handler' (auto size = 22) calls a non-deterministic function: 'EVL_setAmBuMaxTimeDiversity'.
'EVL_QueryBy' (auto size = 44) calls into a recursive loop, calls 'DBG_log'.
'EVL_SetThresholds' (auto size = 8) calls a non-deterministic function: 'FIO_fwrite'.
'EVL_clearEventLog' (auto size = 0) is non-deterministic, calls through a function pointer.
'EVL_getAmBuMaxTimeDiversity' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'EVL_getRealTimeAlarm' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'EVL_setAmBuMaxTimeDiversity' (auto size = 8) calls a non-deterministic function: 'FIO_fwrite'.
'EccSignCallback' (auto size = 104) calls into a recursive loop, calls 'DBG_log'.
'EncodeSymbol' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'EnterLLS' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'EnterVLLS' (auto size = 16) is finite, requires 45 bytes total stack in calling 'LptmrStart'.
'EstimateCarrierFrequencyOffset' (auto size = 352) is finite, requires 372 bytes total stack in calling 'memset'.
'EventInitializeMetaData' (auto size = 4) is non-deterministic, calls through a function pointer.
'EventLogCallbackTest' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'EventLogDeleteMetaData' (auto size = 2) calls into a recursive loop, calls 'DBG_log'.
'EventLogDumpBuffers' (auto size = 0) calls into a recursive loop, calls 'DBG_log'.
'EventLogDumpOneBuffer' (auto size = 56) calls into a recursive loop, calls 'BM_Free'.
'EventLogEraseFlash' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'EventLogLoadBuffer' (auto size = 145) calls into a recursive loop, calls 'BM_Free'.
'EventLogMakeRoom' (auto size = 40) calls into a recursive loop, calls 'EventLogRead'.
'EventLogRead' (auto size = 40) calls into a recursive loop, calls 'DBG_log'.
'EventLogWrite' (auto size = 40) calls into a recursive loop, calls 'DBG_log'.
'FEClength' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'FIO_CalcFileCrc' (auto size = 36) is non-deterministic, calls through a function pointer.
'FIO_ConfigGet' (auto size = 244) calls into a recursive loop, calls 'DBG_log'.
'FIO_fIntegrityCheck' (auto size = 46) calls into a recursive loop, calls 'EVL_LogEvent'.
'FIO_fclose' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'FIO_ferase' (auto size = 8) is non-deterministic, calls through a function pointer.
'FIO_fflush' (auto size = 4) is non-deterministic, calls through a function pointer.
'FIO_fileDump' (auto size = 98) calls into a recursive loop, calls 'DBG_log'.
'FIO_finit' (auto size = 4) is non-deterministic, calls through a function pointer.
'FIO_fopen' (auto size = 49) is non-deterministic, calls through a function pointer.
'FIO_fread' (auto size = 20) is non-deterministic, calls through a function pointer.
'FIO_fwrite' (auto size = 20) is non-deterministic, calls through a function pointer.
'FIO_init' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'FIO_ioctl' (auto size = 12) is non-deterministic, calls through a function pointer.
'FIO_printFile' (auto size = 106) calls into a recursive loop, calls 'DBG_log'.
'FIO_printFileInfo' (auto size = 28) calls into a recursive loop, calls 'DBG_log'.
'FIO_timeToRunFileIntegrityCheck' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'FTM1_Channel_Disable' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'FTM1_Channel_Enable' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'FTM1_INT_Handler' (auto size = 4) is non-deterministic, calls through a function pointer.
'FTM1_Init' (auto size = 8) is finite, requires 48 bytes total stack in calling '_nvic_int_disable' (external).
'FTM3_Channel_Disable' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'FTM3_Channel_Enable' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'FTM3_INT_Handler' (auto size = 4) is non-deterministic, calls through a function pointer.
'FTM3_Init' (auto size = 8) is finite, requires 48 bytes total stack in calling '_nvic_int_disable' (external).
'FetchAndExecuteCommands' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'FileChecksum' (auto size = 10) is finite, requires 10 bytes total stack in calling 'no function'.
'FindPacketIdPair' (auto size = 10) is finite, requires 50 bytes total stack in calling 'memcmp' (external).
'FindRxBuffer' (auto size = 10) is finite, requires 50 bytes total stack in calling 'memcmp' (external).
'FindUnusedPacketIdPair' (auto size = 6) is finite, requires 6 bytes total stack in calling 'no function'.
'FindUnusedRxBuffer' (auto size = 6) is finite, requires 6 bytes total stack in calling 'no function'.
'Find_Roots' (auto size = 3) is finite, requires 22 bytes total stack in calling 'GFMult'.
'FrameLength_Get' (auto size = 24) is finite, requires 41 bytes total stack in calling 'HeaderLength_Get'.
'FrameParityCheck_Calc' (auto size = 52) is finite, requires 128 bytes total stack in calling 'RS_Encode'.
'FrameParityCheck_Validate' (auto size = 52) is finite, requires 1040 bytes total stack in calling 'RS_Decode'.
'Frame_Encode' (auto size = 22) calls into a recursive loop, calls 'DBG_log'.
'FreqDomMlseP4GfskStruct2' (auto size = 4410) is finite, requires 4450 bytes total stack in calling 'fabsf' (external).
'FrontEndGain_Set' (auto size = 1) calls a non-deterministic function: 'writeConfig'.
'GFMod' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'GFMult' (auto size = 2) is finite, requires 11 bytes total stack in calling 'GFMod'.
'GFRec' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'GPIO_init' (auto size = 8) is finite, requires 72 bytes total stack in calling 'register_gpio_file'.
'GenDigTempKey' (auto size = 49) calls into a recursive loop, calls 'BM_Free'.
'GenerateFailedConfirm' (auto size = 16) calls into a recursive loop, calls 'BM_AllocStack'.
'GetNextByte' (auto size = 5) calls into a recursive loop, calls 'DBG_log'.
'GetTransportRxBuffer' (auto size = 12) is finite, requires 32 bytes total stack in calling 'memcpy'.
'HD_DailyShiftTask' (auto size = 184) calls into a recursive loop, calls 'BM_Free'.
'HD_MsgHandler' (auto size = 56) calls into a recursive loop, calls 'BM_Free'.
'HD_SetBubbleUpTimer' (auto size = 40) calls into a recursive loop, calls 'DBG_log'.
'HD_bubbleUpTimerExpired' (auto size = 8) calls a non-deterministic function: 'OS_MSGQ_POST'.
'HD_checkMeterProgInfo' (auto size = 64) calls into a recursive loop, calls 'EVL_LogEvent'.
'HD_clearHistoricalData' (auto size = 0) is non-deterministic, calls through a function pointer.
'HD_dailySelfReadTimeHandler' (auto size = 20) calls a non-deterministic function: 'HD_setDailySelfReadTime'.
'HD_dsBuDataRedundancyHandler' (auto size = 20) calls a non-deterministic function: 'HD_setDsBuDataRedundancy'.
'HD_dsBuEnabledHandler' (auto size = 20) calls a non-deterministic function: 'HD_setDsBuEnabled'.
'HD_dsBuMaxTimeDiversityHandler' (auto size = 20) calls a non-deterministic function: 'HD_setDsBuMaxTimeDiversity'.
'HD_dsBuReadingTypesHandler' (auto size = 20) calls a non-deterministic function: 'HD_setDsBuReadingTypes'.
'HD_dsBuTrafficClassHandler' (auto size = 20) calls a non-deterministic function: 'HD_setDsBuTrafficClass'.
'HD_getDailySelfReadTime' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'HD_getDsBuDataRedundancy' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'HD_getDsBuEnabled' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'HD_getDsBuMaxTimeDiversity' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'HD_getDsBuReadingTypes' (auto size = 5) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'HD_getDsBuTrafficClass' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'HD_getHistoricalRecovery' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HD_historicalRecoveryHandler' (auto size = 20) is finite, requires 20 bytes total stack in calling 'no function'.
'HD_init' (auto size = 12) is non-deterministic, calls through a function pointer.
'HD_setDailySelfReadTime' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'HD_setDsBuDataRedundancy' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'HD_setDsBuEnabled' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'HD_setDsBuMaxTimeDiversity' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'HD_setDsBuReadingTypes' (auto size = 5) is non-deterministic, calls through a function pointer.
'HD_setDsBuTrafficClass' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'HEEP_Add_ReadingType' (auto size = 8) is finite, requires 36 bytes total stack in calling 'ReadingHeader_Set'.
'HEEP_MSG_Tx' (auto size = 275) calls into a recursive loop, calls 'BM_AllocStack'.
'HEEP_MSG_TxHeepHdrOnly' (auto size = 72) calls into a recursive loop, calls 'DBG_log'.
'HEEP_Put_Boolean' (auto size = 9) is finite, requires 37 bytes total stack in calling 'ReadingHeader_Set'.
'HEEP_Put_DateTimeValue' (auto size = 20) is finite, requires 60 bytes total stack in calling '__REV' (external).
'HEEP_Put_HexBinary' (auto size = 14) is finite, requires 42 bytes total stack in calling 'ReadingHeader_Set'.
'HEEP_Put_I16' (auto size = 17) is finite, requires 57 bytes total stack in calling '__REVSH' (external).
'HEEP_Put_U16' (auto size = 17) is finite, requires 57 bytes total stack in calling '__REVSH' (external).
'HEEP_Put_U32' (auto size = 17) is finite, requires 57 bytes total stack in calling '__REV' (external).
'HEEP_Put_U64' (auto size = 21) is finite, requires 85 bytes total stack in calling 'htonll'.
'HEEP_Put_U8' (auto size = 9) is finite, requires 37 bytes total stack in calling 'ReadingHeader_Set'.
'HEEP_ReadingsInit' (auto size = 28) is finite, requires 144 bytes total stack in calling 'TIME_UTIL_GetTimeInSecondsFormat'.
'HEEP_UTIL_unpackHeader' (auto size = 14) calls into a recursive loop, calls 'DBG_log'.
'HEEP_getMinByteNeeded' (auto size = 24) is finite, requires 44 bytes total stack in calling 'memcpy'.
'HEEP_getPowerOf10Code' (auto size = 24) is finite, requires 24 bytes total stack in calling 'no function'.
'HEEP_initHeader' (auto size = 5) calls into a recursive loop, calls 'APP_MSG_SecurityHandler'.
'HEEP_setEnableOTATest' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'HEEP_util_OR_PM_Handler' (auto size = 20) is finite, requires 28 bytes total stack in calling 'DBG_PortTimer_Get'.
'HEEP_util_passordPort0Master_Handler' (auto size = 20) calls into a recursive loop, calls 'HMC_STRT_SetMasterPassword'.
'HEEP_util_passordPort0_Handler' (auto size = 20) calls into a recursive loop, calls 'HMC_STRT_SetPassword'.
'HEX_2_BCD' (auto size = 3) is finite, requires 3 bytes total stack in calling 'no function'.
'HMC_APP_RTOS_Init' (auto size = 4) calls into a recursive loop, calls 'HMC_APP_main'.
'HMC_APP_ResetAppletTimeout' (auto size = 4) calls a non-deterministic function: 'TMR_ResetTimer'.
'HMC_APP_Task' (auto size = 16) calls into a recursive loop, calls 'BM_Free'.
'HMC_APP_TaskPowerDown' (auto size = 0) is finite, requires 52 bytes total stack in calling 'OS_TASK_ExitId'.
'HMC_APP_main' (auto size = 85) calls into a recursive loop, calls 'HMC_ENG_Execute'.
'HMC_APP_status' (auto size = 1) calls into a recursive loop, calls 'HMC_APP_main'.
'HMC_DIAGS_DoDiags' (auto size = 283) calls into a recursive loop, calls 'BM_Free'.
'HMC_DISP_Init' (auto size = 0) is finite, requires 20 bytes total stack in calling 'memset'.
'HMC_DISP_UpdateDisplayBuffer' (auto size = 11) calls into a recursive loop, calls 'HMC_DISP_applet'.
'HMC_DISP_applet' (auto size = 9) calls into a recursive loop, calls 'HMC_STRT_GetMasterPassword'.
'HMC_DMD_RegisterCallBack' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'HMC_DMD_Reset' (auto size = 29) calls into a recursive loop, calls 'DBG_log'.
'HMC_DMD_ResetBusy' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_DS_ExecuteSD' (auto size = 10) calls into a recursive loop, calls 'HEEP_MSG_TxHeepHdrOnly'.
'HMC_ENG_Execute' (auto size = 122) is recursive, calls 'DBG_log'.
'HMC_ENG_getHmgEngStats' (auto size = 12) calls a non-deterministic function: 'FIO_fread'.
'HMC_ENG_getMeterCommunicationLockoutCount' (auto size = 76) calls a non-deterministic function: 'FIO_fread'.
'HMC_ENG_getMeterSessionFailureCount' (auto size = 76) calls a non-deterministic function: 'FIO_fread'.
'HMC_ENG_init' (auto size = 1) calls a non-deterministic function: 'FIO_fopen'.
'HMC_ENG_setMeterCommunicationLockoutCount' (auto size = 76) calls a non-deterministic function: 'FIO_fwrite'.
'HMC_ENG_setMeterSessionFailureCount' (auto size = 76) calls a non-deterministic function: 'FIO_fwrite'.
'HMC_FINISH_LogOff' (auto size = 8) is recursive, calls 'DBG_log'.
'HMC_MSG_Processor' (auto size = 46) calls into a recursive loop, calls 'HMC_ENG_Execute'.
'HMC_MTRINFO_GetDemandMode' (auto size = 5) calls into a recursive loop, calls 'INTF_CIM_CMD_ansiRead'.
'HMC_MTRINFO_Ready' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_MTRINFO_app' (auto size = 13) calls into a recursive loop, calls 'DBG_log'.
'HMC_MTRINFO_coinCfgOffset' (auto size = 0) is finite, requires 40 bytes total stack in calling '__INTADDR__' (external).
'HMC_MTRINFO_convertDataToSI' (auto size = 34) is finite, requires 54 bytes total stack in calling 'memcpy'.
'HMC_MTRINFO_demandRstCnt' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'HMC_MTRINFO_demandRstDate' (auto size = 12) is finite, requires 52 bytes total stack in calling '__INTADDR__' (external).
'HMC_MTRINFO_endian' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'HMC_MTRINFO_getFileHandle' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_MTRINFO_getLPReadingType' (auto size = 32) is finite, requires 52 bytes total stack in calling 'memcpy'.
'HMC_MTRINFO_getMeterMode' (auto size = 0) is finite, requires 52 bytes total stack in calling 'OS_TASK_Sleep'.
'HMC_MTRINFO_getMeterReadingPowerOfTen' (auto size = 5) calls a non-deterministic function: 'searchHmcUomPowerOfTen'.
'HMC_MTRINFO_getSizeOfDemands' (auto size = 25) is finite, requires 45 bytes total stack in calling 'HMC_MTRINFO_niFormat1'.
'HMC_MTRINFO_getSoftswitches' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'HMC_MTRINFO_getStdTable0' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'HMC_MTRINFO_getStdTable1' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'HMC_MTRINFO_getStdTable11' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'HMC_MTRINFO_getStdTable13' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'HMC_MTRINFO_getStdTable21' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'HMC_MTRINFO_getStdTable22' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'HMC_MTRINFO_niFormat1' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'HMC_MTRINFO_niFormat2' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'HMC_MTRINFO_searchCoinUom' (auto size = 44) calls a non-deterministic function: 'FIO_fread'.
'HMC_MTRINFO_searchDirectRead' (auto size = 16) is finite, requires 84 bytes total stack in calling 'OL_Search'.
'HMC_MTRINFO_searchUom' (auto size = 40) calls a non-deterministic function: 'FIO_fread'.
'HMC_MTRINFO_searchUomReadingType' (auto size = 20) is finite, requires 20 bytes total stack in calling 'no function'.
'HMC_MTRINFO_st15Offset' (auto size = 0) is finite, requires 40 bytes total stack in calling '__INTADDR__' (external).
'HMC_MTRINFO_tableExits' (auto size = 26) is finite, requires 46 bytes total stack in calling 'memset'.
'HMC_OR_PM_Handler' (auto size = 20) calls a non-deterministic function: 'HMC_ENG_setMeterSessionFailureCount'.
'HMC_PRG_MTR_ClearNotTestable' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_PRG_MTR_ClearSync' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_PRG_MTR_GetProcedureTimeout' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_PRG_MTR_IsHoldOff' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_PRG_MTR_IsNotTestable' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_PRG_MTR_IsStarted' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_PRG_MTR_IsSynced' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_PRG_MTR_PrepareToProgMeter' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'HMC_PRG_MTR_ReturnTableAccessFunctions' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_PRG_MTR_RunProgramMeter' (auto size = 8) calls into a recursive loop, calls 'BM_Free'.
'HMC_PRG_MTR_SetNotTestable' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_PRG_MTR_SetSync' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_PRG_MTR_SwitchTableAccessFunctions' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_PRG_MTR_SyncQueue' (auto size = 0) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'HMC_PRG_MTR_ansiProcedure' (auto size = 17) calls into a recursive loop, calls 'DBG_log'.
'HMC_PRG_MTR_ansiRead' (auto size = 20) calls into a recursive loop, calls 'DBG_log'.
'HMC_PRG_MTR_ansiWrite' (auto size = 20) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'HMC_PRG_MTR_init' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_PROTO_Protocol' (auto size = 30) calls into a recursive loop, calls 'HMC_ENG_Execute'.
'HMC_REQ_applet' (auto size = 29) calls into a recursive loop, calls 'BM_Free'.
'HMC_SS_applet' (auto size = 9) is recursive, calls 'DBG_log'.
'HMC_SS_isSnapped' (auto size = 0) is finite, requires 8 bytes total stack in calling 'HMC_PRG_MTR_IsSynced'.
'HMC_STRT_GetMasterPassword' (auto size = 8) calls into a recursive loop, calls 'HMC_STRT_UpdatePasswords'.
'HMC_STRT_GetPassword' (auto size = 8) calls into a recursive loop, calls 'HMC_STRT_UpdatePasswords'.
'HMC_STRT_ISC' (auto size = 0) is recursive, calls 'DBG_log'.
'HMC_STRT_ISR' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'HMC_STRT_LogOn' (auto size = 17) is recursive, calls 'DBG_log'.
'HMC_STRT_RestartDelay' (auto size = 0) calls a non-deterministic function: 'startTimer'.
'HMC_STRT_SetMasterPassword' (auto size = 12) calls into a recursive loop, calls 'HMC_STRT_UpdatePasswords'.
'HMC_STRT_SetPassword' (auto size = 12) calls into a recursive loop, calls 'HMC_STRT_UpdatePasswords'.
'HMC_STRT_UpdatePasswords' (auto size = 20) calls into a recursive loop, calls 'BM_Free'.
'HMC_STRT_init' (auto size = 37) calls a non-deterministic function: 'TMR_AddTimer'.
'HMC_STRT_logInStatus' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_STRT_loggedOff' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HMC_SYNC_applet' (auto size = 65) calls into a recursive loop, calls 'DBG_log'.
'HMC_TIME_Set_Time' (auto size = 62) calls into a recursive loop, calls 'BM_Free'.
'HMC_TIME_getMfgPrc70TimeParameters' (auto size = 32) calls a non-deterministic function: 'TIME_UTIL_ConvertMtrHighFormatToSysFormat'.
'HMC_getSequenceId' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'HardwareShutdown' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'HeaderCheckSequence_Calc' (auto size = 4) calls a non-deterministic function: 'CRC_16_PhyHeader'.
'HeaderCheckSequence_Get' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'HeaderCheckSequence_Set' (auto size = 6) is finite, requires 6 bytes total stack in calling 'no function'.
'HeaderCheckSequence_Validate' (auto size = 4) calls a non-deterministic function: 'CRC_16_PhyHeader'.
'HeaderLength_Get' (auto size = 9) is finite, requires 9 bytes total stack in calling 'no function'.
'HeaderLength_Set' (auto size = 5) is finite, requires 5 bytes total stack in calling 'no function'.
'HeaderModeParameters_Get' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'HeaderModeParameters_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'HeaderMode_Get' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'HeaderMode_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'HeaderParityCheck_Calc' (auto size = 4) is finite, requires 80 bytes total stack in calling 'RS_Encode'.
'HeaderParityCheck_Validate' (auto size = 4) is finite, requires 992 bytes total stack in calling 'RS_Decode'.
'HeaderVersion_Get' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'HeaderVersion_Set' (auto size = 5) is finite, requires 5 bytes total stack in calling 'no function'.
'IDL_Get_IdleCounter' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'IDL_IdleTask' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'ID_LpBuDataRedundancyHandler' (auto size = 20) calls into a recursive loop, calls 'ID_setLpBuDataRedundancy'.
'ID_LpBuEnabledHandler' (auto size = 20) calls a non-deterministic function: 'ID_setLpBuEnabled'.
'ID_LpBuMaxTimeDiversityHandler' (auto size = 20) calls into a recursive loop, calls 'ID_setLpBuMaxTimeDiversity'.
'ID_LpBuScheduleHandler' (auto size = 20) calls into a recursive loop, calls 'ID_setLpBuSchedule'.
'ID_LpBuTrafficClassHandler' (auto size = 20) calls into a recursive loop, calls 'ID_setQos'.
'ID_MsgHandler' (auto size = 72) calls into a recursive loop, calls 'BM_Free'.
'ID_SetBubbleUpTimer' (auto size = 40) calls into a recursive loop, calls 'DBG_log'.
'ID_bubbleUpTimerExpired' (auto size = 8) calls a non-deterministic function: 'OS_MSGQ_POST'.
'ID_getLpBuDataRedundancy' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'ID_getLpBuEnabled' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'ID_getLpBuMaxTimeDiversity' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'ID_getLpBuSchedule' (auto size = 2) is finite, requires 2 bytes total stack in calling 'no function'.
'ID_getQos' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'ID_init' (auto size = 8) calls a non-deterministic function: 'FIO_fread'.
'ID_isModuleBusy' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'ID_setLpBuDataRedundancy' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'ID_setLpBuEnabled' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'ID_setLpBuMaxTimeDiversity' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'ID_setLpBuSchedule' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'ID_setQos' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'ID_task' (auto size = 80) calls into a recursive loop, calls 'BM_Free'.
'INTF_CIM_CMD_ansiProcedure' (auto size = 12) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'INTF_CIM_CMD_ansiRead' (auto size = 20) calls into a recursive loop, calls 'DBG_log'.
'INTF_CIM_CMD_ansiReadBitField' (auto size = 32) calls into a recursive loop, calls 'INTF_CIM_CMD_ansiRead'.
'INTF_CIM_CMD_ansiWrite' (auto size = 20) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'INTF_CIM_CMD_errorCodeQCRequired' (auto size = 17) is finite, requires 17 bytes total stack in calling 'no function'.
'INTF_CIM_CMD_getConfigMfr' (auto size = 12) is finite, requires 32 bytes total stack in calling 'memcpy'.
'INTF_CIM_CMD_getDemandCfg' (auto size = 12) is finite, requires 32 bytes total stack in calling 'memcpy'.
'INTF_CIM_CMD_getDemandCoinc' (auto size = 88) calls into a recursive loop, calls 'INTF_CIM_CMD_ansiRead'.
'INTF_CIM_CMD_getDemandRstCnt' (auto size = 81) calls into a recursive loop, calls 'INTF_CIM_CMD_ansiRead'.
'INTF_CIM_CMD_getEdModel' (auto size = 12) is finite, requires 32 bytes total stack in calling 'memcpy'.
'INTF_CIM_CMD_getManufacturer' (auto size = 12) is finite, requires 28 bytes total stack in calling 'HMC_MTRINFO_getStdTable1'.
'INTF_CIM_CMD_getMeterProgramCount' (auto size = 44) calls into a recursive loop, calls 'INTF_CIM_CMD_ansiRead'.
'INTF_CIM_CMD_getMeterReading' (auto size = 14) calls into a recursive loop, calls 'searchDirectRead'.
'INTF_CIM_CMD_getPowerQualityCount' (auto size = 12) is finite, requires 24 bytes total stack in calling 'PWR_getPowerAnomalyCount'.
'INTF_CIM_CMD_getRCDCSwitchPresent' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'INVB_invertBits' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'INVB_memcpy' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'ISR_InternalFlash' (auto size = 0) calls a non-deterministic function: 'OS_SEM_POST'.
'IdNvMemory' (auto size = 14) calls a non-deterministic function: 'SPI_MutexUnlock'.
'IndicationCreate' (auto size = 4) is finite, requires 84 bytes total stack in calling 'OS_MUTEX_Create'.
'IndicationHandlerRegistered' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'IndicationRegisterHandler' (auto size = 9) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'IndicationSend' (auto size = 16) calls into a recursive loop, calls 'BM_AllocStack'.
'Indication_Send' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Init' (auto size = 4) calls into a recursive loop, calls 'vRadio_Init'.
'InitGetNextByte' (auto size = 4) calls into a recursive loop, calls 'GetNextByte'.
'IntervalBubbleUp' (auto size = 64) calls into a recursive loop, calls 'BM_Free'.
'IsAckPending' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'LED_checkModeStatus' (auto size = 5) is recursive, loop contains call to 'APP_MSG_SecurityHandler'.
'LED_enableManualControl' (auto size = 0) is finite, requires 24 bytes total stack in calling 'LED_setBlueLedStatus'.
'LED_getLedTimerId' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'LED_init' (auto size = 28) calls into a recursive loop, calls 'LED_checkModeStatus'.
'LED_lcdModeDisplay' (auto size = 4) calls into a recursive loop, calls 'HMC_DISP_UpdateDisplayBuffer'.
'LED_off' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'LED_on' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'LED_setBlueLedStatus' (auto size = 4) is finite, requires 16 bytes total stack in calling 'LED_off'.
'LED_setGreenLedStatus' (auto size = 4) is finite, requires 16 bytes total stack in calling 'LED_off'.
'LED_setRedLedStatus' (auto size = 4) is finite, requires 16 bytes total stack in calling 'LED_on'.
'LED_toggle' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'LED_vApplicationTickHook' (auto size = 8) is non-deterministic, calls through a function pointer.
'LoadLPTables' (auto size = 74) calls into a recursive loop, calls 'BM_Free'.
'LptmrEnable' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'LptmrStart' (auto size = 12) is finite, requires 21 bytes total stack in calling 'LptmrEnable'.
'MACResponse' (auto size = 69) calls into a recursive loop, calls 'BM_Free'.
'MAC_Attribute_Get' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MAC_Attribute_Set' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MAC_CalcNumSegments' (auto size = 10) is finite, requires 10 bytes total stack in calling 'no function'.
'MAC_Codec_Decode' (auto size = 19) calls into a recursive loop, calls 'print_header'.
'MAC_Codec_Encode' (auto size = 56) calls into a recursive loop, calls 'print_header'.
'MAC_Codec_SetDefault' (auto size = 10) calls into a recursive loop, calls 'NetworkId_Get'.
'MAC_ConfigPrint' (auto size = 20) calls into a recursive loop, calls 'DBG_log'.
'MAC_CounterInc' (auto size = 5) calls a non-deterministic function: 'FIO_fwrite'.
'MAC_CsmaParameters_Print' (auto size = 20) calls into a recursive loop, calls 'DBG_log'.
'MAC_DataRequest_Srfn' (auto size = 40) calls into a recursive loop, calls 'DBG_log'.
'MAC_DataRequest_Star' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'MAC_DataStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'MAC_EUI_Address_Get' (auto size = 4) is finite, requires 24 bytes total stack in calling 'memcpy'.
'MAC_EUI_Address_Set' (auto size = 4) is finite, requires 24 bytes total stack in calling 'memcpy'.
'MAC_FlushRequest' (auto size = 12) calls into a recursive loop, calls 'ReqBuffer_Alloc'.
'MAC_FlushStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'MAC_FrameManag_Add_Tx' (auto size = 4) calls a non-deterministic function: 'OS_QUEUE_ENQUEUE'.
'MAC_FrameManag_AllocRxData' (auto size = 13) calls into a recursive loop, calls 'MAC_FrameManag_EmptyRxBuffer'.
'MAC_FrameManag_AllocTxData' (auto size = 5) is finite, requires 65 bytes total stack in calling 'BUF_Get'.
'MAC_FrameManag_AssemblePacket' (auto size = 40) calls into a recursive loop, calls 'BM_AllocStack'.
'MAC_FrameManag_CheckTimeouts' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'MAC_FrameManag_DataIndHandler' (auto size = 49) calls into a recursive loop, calls 'DBG_log'.
'MAC_FrameManag_EmptyRxBuffer' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'MAC_FrameManag_GetNextTxMsg' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'MAC_FrameManag_GetTxQueueSize' (auto size = 0) is finite, requires 56 bytes total stack in calling 'OS_QUEUE_NumElements'.
'MAC_FrameManag_Get_NextReqNum' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'MAC_FrameManag_IsDuplicate' (auto size = 13) calls into a recursive loop, calls 'DBG_log'.
'MAC_FrameManag_IsPacketInReassembly' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'MAC_FrameManag_IsUnicastPacketInReassembly' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'MAC_FrameManag_IsUnitTransmitting' (auto size = 7) is finite, requires 47 bytes total stack in calling 'memcmp' (external).
'MAC_FrameManag_PhyDataConfirm' (auto size = 13) calls into a recursive loop, calls 'DBG_log'.
'MAC_FrameManag_init' (auto size = 6) is finite, requires 76 bytes total stack in calling 'OS_MSGQ_Create'.
'MAC_FrameManagement_PacketTrackingExpired' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'MAC_FrameManagement_RxAssemblyExpired' (auto size = 12) calls a non-deterministic function: 'OS_MSGQ_POST'.
'MAC_GetDataReqFromBuffer' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'MAC_GetMsgQueue' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'MAC_GetRequest' (auto size = 88) calls into a recursive loop, calls 'DBG_log'.
'MAC_GetSetRequest_CB' (auto size = 4) calls a non-deterministic function: 'OS_SEM_POST'.
'MAC_GetStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'MAC_Indication' (auto size = 4) calls a non-deterministic function: 'OS_MSGQ_POST'.
'MAC_IsTxPaused' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'MAC_MacAddress_Get' (auto size = 4) is finite, requires 24 bytes total stack in calling 'memcpy'.
'MAC_NetworkId_Get' (auto size = 72) calls into a recursive loop, calls 'MAC_GetRequest'.
'MAC_NetworkId_Set' (auto size = 1) calls into a recursive loop, calls 'MAC_SetRequest'.
'MAC_NextPacketId' (auto size = 0) calls a non-deterministic function: 'FIO_fwrite'.
'MAC_OR_PM_Handler' (auto size = 104) calls into a recursive loop, calls 'MAC_GetRequest'.
'MAC_PHY_CheckForFailure' (auto size = 17) calls into a recursive loop, calls 'DBG_log'.
'MAC_PacketManag_AckPending' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'MAC_PacketManag_Acknowledge' (auto size = 104) calls into a recursive loop, calls 'BM_Free'.
'MAC_PacketManag_Flush' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'MAC_PacketManag_GetNextTxMsg' (auto size = 20) calls into a recursive loop, calls 'DBG_log'.
'MAC_PacketManag_IsTxMessagePending' (auto size = 8) is finite, requires 64 bytes total stack in calling 'OS_QUEUE_Head'.
'MAC_PacketManag_Purge' (auto size = 20) calls into a recursive loop, calls 'DBG_log'.
'MAC_PacketManag_init' (auto size = 4) is finite, requires 57 bytes total stack in calling 'OS_QUEUE_Create'.
'MAC_PauseTx' (auto size = 1) calls into a recursive loop, calls 'HMC_DISP_UpdateDisplayBuffer'.
'MAC_PingRequest' (auto size = 41) calls into a recursive loop, calls 'ReqBuffer_Alloc'.
'MAC_PingStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'MAC_ProcessRxPacket' (auto size = 9) calls into a recursive loop, calls 'BM_Free'.
'MAC_PurgeRequest' (auto size = 16) calls into a recursive loop, calls 'ReqBuffer_Alloc'.
'MAC_PurgeStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'MAC_RandomChannel_Get' (auto size = 12) calls into a recursive loop, calls 'TxChannels_init'.
'MAC_RegisterCommStatusIndicationHandler' (auto size = 4) calls a non-deterministic function: 'IndicationRegisterHandler'.
'MAC_RegisterIndicationHandler' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'MAC_ReliabilityRetryCount_Get' (auto size = 5) is finite, requires 5 bytes total stack in calling 'no function'.
'MAC_Request' (auto size = 4) calls a non-deterministic function: 'OS_MSGQ_POST'.
'MAC_Reset' (auto size = 4) calls a non-deterministic function: 'CachedAttr_Init'.
'MAC_ResetRequest' (auto size = 16) calls into a recursive loop, calls 'ReqBuffer_Alloc'.
'MAC_ResetStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'MAC_RestoreConfig_From_BkupRAM' (auto size = 8) is non-deterministic, calls through a function pointer.
'MAC_STATS_GetRecord' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'MAC_SaveConfig_To_BkupRAM' (auto size = 4) is finite, requires 12 bytes total stack in calling 'PWRLG_MacConfigHandle'.
'MAC_SendConfirm' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'MAC_SetRequest' (auto size = 24) calls into a recursive loop, calls 'DBG_log'.
'MAC_SetStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'MAC_StartRequest' (auto size = 12) calls into a recursive loop, calls 'ReqBuffer_Alloc'.
'MAC_StartStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'MAC_StateMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'MAC_Stats' (auto size = 32) calls into a recursive loop, calls 'DBG_log'.
'MAC_StopRequest' (auto size = 12) calls into a recursive loop, calls 'ReqBuffer_Alloc'.
'MAC_StopStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'MAC_Task' (auto size = 64) calls into a recursive loop, calls 'BM_Free'.
'MAC_TimePush_Request' (auto size = 26) calls into a recursive loop, calls 'BM_Free'.
'MAC_TimeQueryReq' (auto size = 8) calls into a recursive loop, calls 'BM_Free'.
'MAC_TimeQueryRequest' (auto size = 12) calls into a recursive loop, calls 'ReqBuffer_Alloc'.
'MAC_TimeQueryStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'MAC_Transaction_Create' (auto size = 24) calls into a recursive loop, calls 'DBG_log'.
'MAC_XID_Address_Set' (auto size = 4) is finite, requires 24 bytes total stack in calling 'memcpy'.
'MAC_getMacOffset' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'MAC_getNextMacAddr' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'MAC_init' (auto size = 18) calls a non-deterministic function: 'MAC_RestoreConfig_From_BkupRAM'.
'MEMC_Check' (auto size = 18) calls into a recursive loop, calls 'CheckRange'.
'MEMC_testPowerDown' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFGP_AllowDtlsConnect' (auto size = 4) is finite, requires 120 bytes total stack in calling 'TIME_UTIL_GetTimeInSecondsFormat'.
'MFGP_AnsiTblOID' (auto size = 12) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_CommandLine_Help' (auto size = 16) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_ConfigGet' (auto size = 12) calls into a recursive loop, calls 'FIO_ConfigGet'.
'MFGP_DeviceType' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_DtlsConnectionClosed' (auto size = 7) calls into a recursive loop, calls 'DBG_log'.
'MFGP_DtlsInit' (auto size = 8) is finite, requires 48 bytes total stack in calling '_int_get_isr_data' (external).
'MFGP_DtlsResultsCallback' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'MFGP_EncryptBuffer' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'MFGP_EpTempHysteresis' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_EpTempMinThreshold' (auto size = 12) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_FlashSecurity' (auto size = 26) calls into a recursive loop, calls 'DBG_log'.
'MFGP_GetEventHandle' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'MFGP_HighTempThreshold' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_MacChannelSets' (auto size = 168) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFGP_MacChannelSetsSRFN' (auto size = 8) calls into a recursive loop, calls 'MFGP_MacChannelSets'.
'MFGP_NwActiveActTimeout' (auto size = 32) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_NwPassActTimeout' (auto size = 32) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_PhyAfcEnable' (auto size = 81) calls into a recursive loop, calls 'DBG_log'.
'MFGP_PhyAfcRSSIThreshold' (auto size = 82) calls into a recursive loop, calls 'DBG_log'.
'MFGP_PhyAfcTemperatureRange' (auto size = 96) calls into a recursive loop, calls 'DBG_log'.
'MFGP_ProcessCommand' (auto size = 30) calls into a recursive loop, calls 'APP_MSG_SecurityHandler'.
'MFGP_ProcessDecryptedCommand' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'MFGP_SimulateLastGaspTraffic' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_SpuriousResetCount' (auto size = 16) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_UartRead' (auto size = 9) calls into a recursive loop, calls 'BM_Free'.
'MFGP_UartWrite' (auto size = 20) calls into a recursive loop, calls 'BM_Free'.
'MFGP_amBuMaxTimeDiversity' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_capableOfEpBootloaderDFW' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_capableOfEpPatchDFW' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_capableOfMeterBasecodeDFW' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_capableOfMeterPatchDFW' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_capableOfMeterReprogrammingOTA' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_cmdInit' (auto size = 4) is finite, requires 74 bytes total stack in calling 'OS_MSGQ_Create'.
'MFGP_dailySelfReadTime' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFGP_dataConfigurationDocumentVersion' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'MFGP_dateTimeLostCount' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'MFGP_demandFutureConfiguration' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'MFGP_demandPresentConfiguration' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'MFGP_demandResetLockoutPeriod' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFGP_dfwApplyConfirmTimeDiversity' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_dfwAuditTestStatus' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_dfwCompatibilityTestStatus' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_dfwDownloadConfirmTimeDiversity' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_dfwDupDiscardPacketQty' (auto size = 10) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_dfwFileType' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_dfwProgramScriptStatus' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_dfwStatus' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_dfwStreamId' (auto size = 9) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_drReadList' (auto size = 72) calls into a recursive loop, calls 'DBG_log'.
'MFGP_dsBuDataRedundancy' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_dsBuEnabled' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_dsBuMaxTimeDiversity' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_dsBuReadingTypes' (auto size = 136) calls into a recursive loop, calls 'DBG_log'.
'MFGP_dsBuTrafficClass' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_dstEnabled' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_dstEndRule' (auto size = 21) calls into a recursive loop, calls 'DBG_log'.
'MFGP_dstOffset' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFGP_dstStartRule' (auto size = 21) calls into a recursive loop, calls 'DBG_log'.
'MFGP_dtlsDeviceCertificate' (auto size = 524) calls into a recursive loop, calls 'ecc108e_GetDeviceCert'.
'MFGP_dtlsHelper' (auto size = 540) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_dtlsMfgSubject1' (auto size = 8) calls into a recursive loop, calls 'printCert'.
'MFGP_dtlsMfgSubject2' (auto size = 8) calls into a recursive loop, calls 'MFGP_dtlsHelper'.
'MFGP_dtlsNetworkHESubject' (auto size = 8) calls into a recursive loop, calls 'MFGP_dtlsHelper'.
'MFGP_dtlsNetworkMSSubject' (auto size = 8) calls into a recursive loop, calls 'MFGP_dtlsHelper'.
'MFGP_dtlsNetworkRootCA' (auto size = 8) calls into a recursive loop, calls 'MFGP_dtlsHelper'.
'MFGP_dtlsServerCertificateSN' (auto size = 42) calls into a recursive loop, calls 'DBG_log'.
'MFGP_edFwVersion' (auto size = 80) calls into a recursive loop, calls 'INTF_CIM_CMD_getMeterReading'.
'MFGP_edHwVersion' (auto size = 80) calls into a recursive loop, calls 'INTF_CIM_CMD_getMeterReading'.
'MFGP_edInfo' (auto size = 44) calls into a recursive loop, calls 'EDCFG_get_info'.
'MFGP_edManufacturer' (auto size = 80) calls into a recursive loop, calls 'INTF_CIM_CMD_getMeterReading'.
'MFGP_edMfgSerialNumber' (auto size = 25) calls into a recursive loop, calls 'DBG_log'.
'MFGP_edModel' (auto size = 80) calls into a recursive loop, calls 'INTF_CIM_CMD_getMeterReading'.
'MFGP_edProgramId' (auto size = 80) calls into a recursive loop, calls 'INTF_CIM_CMD_getMeterReading'.
'MFGP_edProgrammedDateTime' (auto size = 80) calls into a recursive loop, calls 'INTF_CIM_CMD_getMeterReading'.
'MFGP_edProgrammerName' (auto size = 80) calls into a recursive loop, calls 'INTF_CIM_CMD_getMeterReading'.
'MFGP_edUtilitySerialNumber' (auto size = 35) calls into a recursive loop, calls 'DBG_log'.
'MFGP_enableOTATest' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_engBuEnabled' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_engBuTrafficClass' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_engData1' (auto size = 14) calls into a recursive loop, calls 'BM_AllocStack'.
'MFGP_engData2' (auto size = 14) calls into a recursive loop, calls 'BM_AllocStack'.
'MFGP_epMaxTemperature' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_epMinTemperature' (auto size = 12) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_eventThreshold' (auto size = 11) calls into a recursive loop, calls 'DBG_log'.
'MFGP_fctEnclosureDatabaseVersion' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFGP_fctEnclosureProgramVersion' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFGP_fctEnclosureTestDate' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'MFGP_fctModuleDatabaseVersion' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFGP_fctModuleProgramVersion' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFGP_fctModuleTestDate' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'MFGP_firmwareVersion' (auto size = 12) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_getRealTimeAlarm' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_hardwareVersion' (auto size = 26) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_historicalRecovery' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_inboundFrameCount' (auto size = 80) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFGP_init' (auto size = 36) calls a non-deterministic function: 'MODECFG_get_rfTest_mode'.
'MFGP_initialAuthenticationTimeout' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'MFGP_initialRegistrationTimemout' (auto size = 10) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_installationDateTime' (auto size = 12) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_integrationDatabaseVersion' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFGP_integrationProgramVersion' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFGP_integrationSetupDate' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'MFGP_invalidAddressModeCount' (auto size = 32) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_ipHEContext' (auto size = 37) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_lastGaspMaxNumAttempts' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_lpBuDataRedundancy' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_lpBuEnabled' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_lpBuMaxTimeDiversity' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_lpBuSchedule' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'MFGP_lpBuTrafficClass' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_macCsmaMaxAttempts' (auto size = 88) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFGP_macCsmaMaxBackOffTime' (auto size = 88) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFGP_macCsmaMinBackOffTime' (auto size = 88) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFGP_macCsmaPValue' (auto size = 108) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFGP_macCsmaQuickAbort' (auto size = 88) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFGP_macNetworkId' (auto size = 13) calls into a recursive loop, calls 'MAC_NetworkId_Get'.
'MFGP_macPacketTimeout' (auto size = 88) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFGP_macPingCount' (auto size = 80) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFGP_macRSSI' (auto size = 34) calls into a recursive loop, calls 'DBG_log'.
'MFGP_macReassemblyTimeout' (auto size = 88) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFGP_macReliabilityHighCount' (auto size = 88) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFGP_macReliabilityLowCount' (auto size = 88) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFGP_macReliabilityMedCount' (auto size = 88) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFGP_manufacturerNumber' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'MFGP_maxAuthenticationTimeout' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFGP_maxRegistrationTimemout' (auto size = 12) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_meterCommunicationLockoutCount' (auto size = 14) calls into a recursive loop, calls 'DBG_log'.
'MFGP_meterDateTime' (auto size = 80) calls into a recursive loop, calls 'INTF_CIM_CMD_getMeterReading'.
'MFGP_meterSessionFailureCount' (auto size = 10) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_meterShopMode' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_minAuthenticationTimeout' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'MFGP_minRegistrationTimemout' (auto size = 10) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_mtlsAuthenticationWindow' (auto size = 12) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_mtlsNetworkTimeVariation' (auto size = 10) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_newRegistrationRequired' (auto size = 9) calls into a recursive loop, calls 'APP_MSG_updateRegistrationTimeout'.
'MFGP_nvFailCount' (auto size = 20) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_nvtest' (auto size = 30) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_opportunisticAlarmIndexId' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_optoTask' (auto size = 128) calls a non-deterministic function: 'processOptoBuf'.
'MFGP_orReadList' (auto size = 72) calls into a recursive loop, calls 'DBG_log'.
'MFGP_outageDeclarationDelay' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'MFGP_passwordPort0Master' (auto size = 82) calls into a recursive loop, calls 'HMC_STRT_GetMasterPassword'.
'MFGP_powerQuality' (auto size = 80) calls into a recursive loop, calls 'INTF_CIM_CMD_getMeterReading'.
'MFGP_powerQualityEventDuration' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'MFGP_quietMode' (auto size = 12) calls into a recursive loop, calls 'APP_MSG_SecurityHandler'.
'MFGP_realTimeAlarmIndexId' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_repairInformation' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFGP_restorationDelay' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'MFGP_rfTestMode' (auto size = 12) calls into a recursive loop, calls 'APP_MSG_SecurityHandler'.
'MFGP_rfTestTimerReset' (auto size = 0) calls a non-deterministic function: 'TMR_ResetTimer'.
'MFGP_rtcDateTime' (auto size = 44) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_shipMode' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_simulateLastGaspDuration' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'MFGP_simulateLastGaspMaxNumAttempts' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_simulateLastGaspStart' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFGP_simulateLastGaspStatCcaAttempts' (auto size = 13) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_simulateLastGaspStatMsgsSent' (auto size = 13) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_simulateLastGaspStatPPersistAttempts' (auto size = 13) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_smLogTimeDiversity' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'MFGP_stP0LoopbackFailCount' (auto size = 12) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_stP0LoopbackFailTest' (auto size = 23) calls into a recursive loop, calls 'HMC_APP_main'.
'MFGP_stSecurityFailCount' (auto size = 16) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_stSecurityFailTest' (auto size = 28) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_temperature' (auto size = 80) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_timeAcceptanceDelay' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'MFGP_timeLastUpdated' (auto size = 40) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_timeRequestMaxTimeout' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'MFGP_timeSigOffset' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'MFGP_timeState' (auto size = 9) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_timeZoneDSTHash' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFGP_timeZoneOffset' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFGP_uartCmdTask' (auto size = 12) calls into a recursive loop, calls 'BM_Free'.
'MFGP_uartRecvTask' (auto size = 12) calls into a recursive loop, calls 'MFGP_UartRead'.
'MFGP_virgin' (auto size = 8) calls into a recursive loop, calls 'DBG_CommandLine_virgin'.
'MFGP_virginDelay' (auto size = 20) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFGP_watchDogResetCount' (auto size = 10) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_CommandLine_MacAddr' (auto size = 20) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_DateTime' (auto size = 28) calls into a recursive loop, calls 'DBG_log'.
'MFG_GetSetConfig' (auto size = 40) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_GetSetFrequencies' (auto size = 170) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_PhyAvailableChannels' (auto size = 8) calls into a recursive loop, calls 'MFG_GetSetFrequencies'.
'MFG_PhyAvailableFrequencies' (auto size = 8) calls into a recursive loop, calls 'MFG_GetSetFrequencies'.
'MFG_PhyCcaAdaptiveThresholdEnable' (auto size = 88) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_PhyCcaOffset' (auto size = 88) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_PhyCcaThreshold' (auto size = 88) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_PhyDemodulator' (auto size = 88) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_PhyFailedFrameDecodeCount' (auto size = 81) calls into a recursive loop, calls 'DBG_log'.
'MFG_PhyFailedHcsCount' (auto size = 81) calls into a recursive loop, calls 'DBG_log'.
'MFG_PhyFailedHeaderDecodeCount' (auto size = 81) calls into a recursive loop, calls 'DBG_log'.
'MFG_PhyFramesReceivedCount' (auto size = 81) calls into a recursive loop, calls 'DBG_log'.
'MFG_PhyFramesTransmittedCount' (auto size = 80) calls into a recursive loop, calls 'DBG_log'.
'MFG_PhyFrontEndGain' (auto size = 88) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_PhyMaxTxPayload' (auto size = 88) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_PhyNoiseEstimate' (auto size = 88) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_PhyNoiseEstimateRate' (auto size = 88) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_PhyNumchannels' (auto size = 80) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_PhyRcvrCount' (auto size = 80) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_PhyRxChannels' (auto size = 8) calls into a recursive loop, calls 'MFG_GetSetFrequencies'.
'MFG_PhyRxDetection' (auto size = 8) calls into a recursive loop, calls 'MFG_GetSetConfig'.
'MFG_PhyRxFraming' (auto size = 8) calls into a recursive loop, calls 'MFG_GetSetConfig'.
'MFG_PhyRxFrequencies' (auto size = 8) calls into a recursive loop, calls 'MFG_GetSetFrequencies'.
'MFG_PhyRxMode' (auto size = 8) calls into a recursive loop, calls 'MFG_GetSetConfig'.
'MFG_PhyStRx4GFSK' (auto size = 3) calls into a recursive loop, calls 'RADIO_Mode_Set'.
'MFG_PhyStTxCwTest' (auto size = 40) calls into a recursive loop, calls 'RADIO_Mode_Set'.
'MFG_PhySyncDetectCount' (auto size = 81) calls into a recursive loop, calls 'DBG_log'.
'MFG_PhyThermalControlEnable' (auto size = 88) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_PhyThermalProtectionCount' (auto size = 84) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_PhyThermalProtectionEnable' (auto size = 88) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_PhyThermalProtectionEngaged' (auto size = 84) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_PhyTxChannels' (auto size = 8) calls into a recursive loop, calls 'MFG_GetSetFrequencies'.
'MFG_PhyTxFrequencies' (auto size = 8) calls into a recursive loop, calls 'MFG_GetSetFrequencies'.
'MFG_StRx4GFSK' (auto size = 18) calls into a recursive loop, calls 'MFG_PhyStRx4GFSK'.
'MFG_StTxBlurtTest' (auto size = 8) calls into a recursive loop, calls 'MFG_StTxBlurtTest_Srfn'.
'MFG_StTxBlurtTest_Srfn' (auto size = 44) calls into a recursive loop, calls 'COMM_transmit'.
'MFG_StTxCwTest' (auto size = 18) calls into a recursive loop, calls 'MFG_PhyStTxCwTest'.
'MFG_TimeDefaultAccuracy' (auto size = 9) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_TimePrecision' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_TimeQueryResponseMode' (auto size = 9) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_TimeSetMaxOffset' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFG_TimeSetPeriod' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFG_TimeSetStart' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFG_TimeSource' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFG_TransactionTimeout' (auto size = 88) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFG_TransactionTimeoutCount' (auto size = 84) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFG_appSecAuthMode' (auto size = 13) calls into a recursive loop, calls 'APP_MSG_SecurityHandler'.
'MFG_bulkQuantity' (auto size = 137) calls into a recursive loop, calls 'INTF_CIM_CMD_getMeterReading'.
'MFG_disconnectDtls' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MFG_enableDebug' (auto size = 17) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_logoff' (auto size = 12) is finite, requires 96 bytes total stack in calling 'UART_write'.
'MFG_macTxLinkDelayCount' (auto size = 84) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFG_macTxLinkDelayTime' (auto size = 84) calls into a recursive loop, calls 'MAC_GetRequest'.
'MFG_meterPassword' (auto size = 82) calls into a recursive loop, calls 'HMC_STRT_GetPassword'.
'MFG_printHex' (auto size = 10) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_reboot' (auto size = 8) calls a non-deterministic function: 'PWR_SafeReset'.
'MFG_stRTCFailCount' (auto size = 16) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'MFG_stRTCFailTest' (auto size = 19) calls into a recursive loop, calls 'DBG_log'.
'MFG_startDTLSsession' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'MIMTINFO_OR_PM_Handler' (auto size = 20) calls a non-deterministic function: 'MIMTINFO_getRepairInformation'.
'MIMTINFO_getDataConfigurationDocumentVersion' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_getFctEnclosureDatabaseVersion' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_getFctEnclosureProgramVersion' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_getFctEnclosureTestDate' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_getFctModuleDatabaseVersion' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_getFctModuleProgramVersion' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_getFctModuleTestDate' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_getIntegrationDatabaseVersion' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_getIntegrationProgramVersion' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_getIntegrationSetupDate' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_getManufacturerNumber' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_getRepairInformation' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_init' (auto size = 8) calls a non-deterministic function: 'FIO_fread'.
'MIMTINFO_setDataConfigurationDocumentVersion' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_setFctEnclosureDatabaseVersion' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_setFctEnclosureProgramVersion' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_setFctEnclosureTestDate' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_setFctModuleDatabaseVersion' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_setFctModuleProgramVersion' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_setFctModuleTestDate' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_setIntegrationDatabaseVersion' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_setIntegrationProgramVersion' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_setIntegrationSetupDate' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_setManufacturerNumber' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MIMTINFO_setRepairInformation' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MODECFG_decommissionModeHandler' (auto size = 20) calls into a recursive loop, calls 'MODECFG_set_decommission_mode'.
'MODECFG_get_decommission_mode' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MODECFG_get_initialCFGMode' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'MODECFG_get_quiet_mode' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MODECFG_get_rfTest_mode' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MODECFG_get_ship_mode' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'MODECFG_init' (auto size = 8) calls a non-deterministic function: 'FIO_fread'.
'MODECFG_set_decommission_mode' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'MODECFG_set_quiet_mode' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'MODECFG_set_rfTest_mode' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'MODECFG_set_ship_mode' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'MTLS_IndicationHandler' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'MTLS_OR_PM_Handler' (auto size = 24) calls a non-deterministic function: 'MTLS_setMTLSnetworkTimeVariation'.
'MTLS_RegisterIndicationHandler' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'MTLS_Reset' (auto size = 0) calls a non-deterministic function: 'FIO_fwrite'.
'MTLS_Stats' (auto size = 28) calls into a recursive loop, calls 'DBG_log'.
'MTLS_Task' (auto size = 26) calls into a recursive loop, calls 'BM_AllocStack'.
'MTLS_dumpReplayBuffer' (auto size = 40) calls into a recursive loop, calls 'DBG_log'.
'MTLS_init' (auto size = 10) calls a non-deterministic function: 'FIO_fread'.
'MTLS_setMTLSauthenticationWindow' (auto size = 4) calls a non-deterministic function: 'FIO_fwrite'.
'MTLS_setMTLSnetworkTimeVariation' (auto size = 4) calls a non-deterministic function: 'FIO_fwrite'.
'MTLS_transmit' (auto size = 4) calls into a recursive loop, calls 'NWK_DataRequest'.
'MapTheFile' (auto size = 28) calls into a recursive loop, calls 'DBG_log'.
'MaxTxPayload_Set' (auto size = 2) calls a non-deterministic function: 'writeConfig'.
'MaximizeEyeOpening' (auto size = 52) is finite, requires 92 bytes total stack in calling 'floorf' (external).
'MinRxBytes_Set' (auto size = 2) calls a non-deterministic function: 'writeConfig'.
'NWK_Attribute_Get' (auto size = 20) calls into a recursive loop, calls 'DBG_log'.
'NWK_Attribute_Set' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'NWK_Confirm' (auto size = 12) calls into a recursive loop, calls 'BM_AllocStack'.
'NWK_CounterInc' (auto size = 10) calls a non-deterministic function: 'FIO_fwrite'.
'NWK_DataRequest' (auto size = 32) calls into a recursive loop, calls 'ReqBuffer_Alloc'.
'NWK_DataStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'NWK_ElideAndSend' (auto size = 45) calls into a recursive loop, calls 'DBG_log'.
'NWK_FindNextHop' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'NWK_GetRequest' (auto size = 40) calls into a recursive loop, calls 'DBG_log'.
'NWK_GetSetRequest_CB' (auto size = 4) calls a non-deterministic function: 'OS_SEM_POST'.
'NWK_GetStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'NWK_IsQosValueValid' (auto size = 2) is finite, requires 2 bytes total stack in calling 'no function'.
'NWK_OR_PM_Handler' (auto size = 52) calls into a recursive loop, calls 'NWK_GetRequest'.
'NWK_ProcessDataIndication' (auto size = 169) calls into a recursive loop, calls 'BM_AllocStack'.
'NWK_ProcessNextHeader' (auto size = 43) calls into a recursive loop, calls 'DBG_log'.
'NWK_QosToParams' (auto size = 21) is finite, requires 21 bytes total stack in calling 'no function'.
'NWK_RegisterIndicationHandler' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'NWK_Request' (auto size = 4) calls a non-deterministic function: 'OS_MSGQ_POST'.
'NWK_Reset' (auto size = 4) calls a non-deterministic function: 'CachedAttr_Init'.
'NWK_ResetRequest' (auto size = 16) calls into a recursive loop, calls 'ReqBuffer_Alloc'.
'NWK_ResetStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'NWK_SendDataIndication' (auto size = 20) calls into a recursive loop, calls 'BM_Free'.
'NWK_SetRequest' (auto size = 24) calls into a recursive loop, calls 'DBG_log'.
'NWK_SetStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'NWK_StartRequest' (auto size = 12) calls into a recursive loop, calls 'ReqBuffer_Alloc'.
'NWK_StartStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'NWK_StateMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'NWK_Stats' (auto size = 30) calls into a recursive loop, calls 'DBG_log'.
'NWK_StopRequest' (auto size = 12) calls into a recursive loop, calls 'ReqBuffer_Alloc'.
'NWK_StopStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'NWK_Task' (auto size = 41) calls into a recursive loop, calls 'BM_Free'.
'NWK_UdpPortIdToNum' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'NWK_UdpPortNumToId' (auto size = 2) is finite, requires 2 bytes total stack in calling 'no function'.
'NWK_decode_frame' (auto size = 30) is finite, requires 103 bytes total stack in calling 'UNPACK_addr'.
'NWK_init' (auto size = 12) calls a non-deterministic function: 'FIO_fread'.
'NetworkId_Get' (auto size = 68) calls into a recursive loop, calls 'MAC_Attribute_Get'.
'NetworkId_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'NextRequestHandle' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'NextRequestHandle' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'NextSleep' (auto size = 71) calls a non-deterministic function: 'FIO_fwrite'.
'NoiseEstimateBoostOn_Set' (auto size = 4) calls a non-deterministic function: 'writeCache'.
'NoiseEstimateCount_Set' (auto size = 1) calls a non-deterministic function: 'writeConfig'.
'NoiseEstimateRate_Set' (auto size = 1) calls a non-deterministic function: 'writeConfig'.
'NoiseEstimate_Set' (auto size = 4) calls a non-deterministic function: 'writeCache'.
'NonceTempKey' (auto size = 41) calls into a recursive loop, calls 'BM_Free'.
'NumChannelSetsSRFN_Get' (auto size = 5) is finite, requires 5 bytes total stack in calling 'no function'.
'NumChannelSetsSTAR_Get' (auto size = 5) is finite, requires 5 bytes total stack in calling 'no function'.
'NumChannels_Get' (auto size = 5) is finite, requires 5 bytes total stack in calling 'no function'.
'NumMacSet' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'OL_Add' (auto size = 24) is finite, requires 64 bytes total stack in calling 'malloc' (external).
'OL_Search' (auto size = 36) is finite, requires 60 bytes total stack in calling 'SearchForType'.
'OR_AM_MsgHandler' (auto size = 114) calls into a recursive loop, calls 'BM_Free'.
'OR_HA_MsgHandler' (auto size = 106) calls into a recursive loop, calls 'BM_Free'.
'OR_MR_MsgHandler' (auto size = 169) calls into a recursive loop, calls 'BM_Free'.
'OR_MR_OrReadListHandler' (auto size = 89) calls a non-deterministic function: 'OR_MR_setReadingTypes'.
'OR_MR_getReadingTypes' (auto size = 5) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'OR_MR_init' (auto size = 8) calls a non-deterministic function: 'FIO_fread'.
'OR_MR_setReadingTypes' (auto size = 5) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'OR_PM_MsgHandler' (auto size = 100) calls into a recursive loop, calls 'APP_MSG_SecurityHandler'.
'OS_EVNT_Create' (auto size = 9) is finite, requires 49 bytes total stack in calling '_lwevent_create' (external).
'OS_EVNT_SET' (auto size = 16) calls a non-deterministic function: 'EVL_FirmwareError'.
'OS_EVNT_WAIT' (auto size = 36) calls a non-deterministic function: 'EVL_FirmwareError'.
'OS_MSGQ_Create' (auto size = 5) is finite, requires 62 bytes total stack in calling 'OS_SEM_Create'.
'OS_MSGQ_PEND' (auto size = 32) calls a non-deterministic function: 'DBG_LW_printf'.
'OS_MSGQ_POST' (auto size = 24) calls a non-deterministic function: 'OS_SEM_POST'.
'OS_MUTEX_Create' (auto size = 32) is finite, requires 72 bytes total stack in calling '_mutatr_init' (external).
'OS_MUTEX_LOCK' (auto size = 16) calls a non-deterministic function: 'EVL_FirmwareError'.
'OS_MUTEX_UNLOCK' (auto size = 12) calls a non-deterministic function: 'EVL_FirmwareError'.
'OS_QUEUE_Create' (auto size = 5) is finite, requires 45 bytes total stack in calling '_queue_init' (external).
'OS_QUEUE_Dequeue' (auto size = 8) is finite, requires 48 bytes total stack in calling '_queue_dequeue' (external).
'OS_QUEUE_ENQUEUE' (auto size = 16) calls a non-deterministic function: 'EVL_FirmwareError'.
'OS_QUEUE_Head' (auto size = 8) is finite, requires 48 bytes total stack in calling '_queue_head' (external).
'OS_QUEUE_Insert' (auto size = 13) is finite, requires 53 bytes total stack in calling '_queue_insert' (external).
'OS_QUEUE_Next' (auto size = 12) is finite, requires 52 bytes total stack in calling '_queue_next' (external).
'OS_QUEUE_NumElements' (auto size = 8) is finite, requires 48 bytes total stack in calling '_queue_is_empty' (external).
'OS_QUEUE_Remove' (auto size = 8) is finite, requires 48 bytes total stack in calling '_queue_unlink' (external).
'OS_SEM_Create' (auto size = 9) is finite, requires 49 bytes total stack in calling '_lwsem_create' (external).
'OS_SEM_PEND' (auto size = 28) calls a non-deterministic function: 'EVL_FirmwareError'.
'OS_SEM_POST' (auto size = 12) calls a non-deterministic function: 'EVL_FirmwareError'.
'OS_SEM_Reset' (auto size = 8) is finite, requires 48 bytes total stack in calling '_lwsem_poll' (external).
'OS_TASK_Create_All' (auto size = 14) calls a non-deterministic function: 'MODECFG_get_rfTest_mode'.
'OS_TASK_Exit' (auto size = 0) is finite, requires 40 bytes total stack in calling '_task_destroy' (external).
'OS_TASK_ExitId' (auto size = 4) is finite, requires 44 bytes total stack in calling '_task_get_id_from_name' (external).
'OS_TASK_GetCpuLoad' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'OS_TASK_GetId' (auto size = 0) is finite, requires 40 bytes total stack in calling '_task_get_id' (external).
'OS_TASK_Get_Priority' (auto size = 12) is finite, requires 52 bytes total stack in calling '_task_get_id_from_name' (external).
'OS_TASK_IsCurrentTask' (auto size = 5) is finite, requires 53 bytes total stack in calling 'OS_TASK_GetId'.
'OS_TASK_Set_Priority' (auto size = 16) is finite, requires 56 bytes total stack in calling '_task_get_id_from_name' (external).
'OS_TASK_Sleep' (auto size = 4) is finite, requires 44 bytes total stack in calling '_time_delay' (external).
'OS_TASK_Summary' (auto size = 268) calls into a recursive loop, calls 'DBG_log'.
'OS_TASK_UpdateCpuLoad' (auto size = 8) is finite, requires 56 bytes total stack in calling 'getCoreClock'.
'OS_TICK_Get_CurrentElapsedTicks' (auto size = 4) is finite, requires 44 bytes total stack in calling '_time_get_elapsed_ticks' (external).
'OS_TICK_Get_Diff_InMicroseconds' (auto size = 13) is finite, requires 53 bytes total stack in calling '_time_diff_microseconds' (external).
'OS_TICK_Get_Diff_InNanoseconds' (auto size = 13) is finite, requires 53 bytes total stack in calling '_time_diff_nanoseconds' (external).
'OS_TICK_Get_ElapsedMilliseconds' (auto size = 12) is finite, requires 52 bytes total stack in calling '_time_get_elapsed' (external).
'OS_TICK_Is_FutureTime_Greater' (auto size = 10) is finite, requires 50 bytes total stack in calling '_time_diff_microseconds' (external).
'OS_TICK_Sleep' (auto size = 25) is finite, requires 65 bytes total stack in calling '_time_add_msec_to_ticks' (external).
'OptoPortTimerReset' (auto size = 0) calls a non-deterministic function: 'TMR_ResetTimer'.
'OptoTimerCallBack' (auto size = 8) is finite, requires 112 bytes total stack in calling 'MFG_logoff'.
'OptoTimer_Init' (auto size = 0) calls a non-deterministic function: 'TMR_AddTimer'.
'PACK_Buffer' (auto size = 20) is finite, requires 35 bytes total stack in calling 'Byte_Swap'.
'PACK_Byte' (auto size = 8) is finite, requires 51 bytes total stack in calling 'PACK_Buffer'.
'PACK_addr' (auto size = 20) is finite, requires 70 bytes total stack in calling 'PACK_uint8_2bits'.
'PACK_hton' (auto size = 59) is finite, requires 102 bytes total stack in calling 'PACK_Buffer'.
'PACK_init' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'PACK_ntoh' (auto size = 77) is finite, requires 187 bytes total stack in calling 'PACK_hton'.
'PACK_uint16_2bits' (auto size = 14) is finite, requires 42 bytes total stack in calling 'pack_bits'.
'PACK_uint32_2bits' (auto size = 14) is finite, requires 42 bytes total stack in calling 'pack_bits'.
'PACK_uint64_2bits' (auto size = 14) is finite, requires 42 bytes total stack in calling 'pack_bits'.
'PACK_uint8_2bits' (auto size = 14) is finite, requires 42 bytes total stack in calling 'pack_bits'.
'PAR_GetFirstPartition' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'PAR_GetNextPartition' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'PAR_ValidatePartitionTable' (auto size = 37) calls into a recursive loop, calls 'DBG_log'.
'PAR_appTask' (auto size = 36) calls a non-deterministic function: 'PAR_timeSlice'.
'PAR_flushPartitions' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'PAR_init' (auto size = 0) calls a non-deterministic function: 'init'.
'PAR_initRtos' (auto size = 12) is non-deterministic, calls through a function pointer.
'PAR_timeSlice' (auto size = 8) is non-deterministic, calls through a function pointer.
'PHY_AfcAdjustment_Set_By_Radio' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'PHY_Attribute_Get' (auto size = 25) calls into a recursive loop, calls 'DBG_log'.
'PHY_Attribute_Set' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'PHY_CcaRequest' (auto size = 20) calls into a recursive loop, calls 'RequestBuffer_Get'.
'PHY_CcaStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'PHY_Channel_Get' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'PHY_Channel_Set' (auto size = 4) calls a non-deterministic function: 'writeConfig'.
'PHY_ConfigPrint' (auto size = 0) calls into a recursive loop, calls 'DBG_log'.
'PHY_CounterInc' (auto size = 9) calls a non-deterministic function: 'writeCache'.
'PHY_DataRequest' (auto size = 52) calls into a recursive loop, calls 'RequestBuffer_Get'.
'PHY_DataStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'PHY_Demodulator_Get' (auto size = 81) calls into a recursive loop, calls 'PHY_GetRequest'.
'PHY_Demodulator_Set' (auto size = 13) calls into a recursive loop, calls 'PHY_SetRequest'.
'PHY_FailedHcsCount_Inc' (auto size = 1) calls a non-deterministic function: 'PHY_CounterInc'.
'PHY_FailedHeaderDecodeCount_Inc' (auto size = 1) calls a non-deterministic function: 'PHY_CounterInc'.
'PHY_FlushShadowAttr' (auto size = 5) calls a non-deterministic function: 'writeConfig'.
'PHY_GetMaxTxPayload' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'PHY_GetRequest' (auto size = 92) calls into a recursive loop, calls 'BM_Free'.
'PHY_GetSetRequest_CB' (auto size = 16) calls a non-deterministic function: 'OS_SEM_POST'.
'PHY_GetStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'PHY_InsertTestMsg' (auto size = 320) calls into a recursive loop, calls 'DataIndication_Create'.
'PHY_IsChannelValid' (auto size = 9) is finite, requires 9 bytes total stack in calling 'no function'.
'PHY_IsRXChannelValid' (auto size = 9) is finite, requires 26 bytes total stack in calling 'PHY_IsChannelValid'.
'PHY_IsTXChannelValid' (auto size = 9) is finite, requires 26 bytes total stack in calling 'PHY_IsChannelValid'.
'PHY_Lock' (auto size = 0) calls a non-deterministic function: 'OS_MUTEX_LOCK'.
'PHY_MalformedHeaderCount_Inc' (auto size = 1) calls a non-deterministic function: 'PHY_CounterInc'.
'PHY_OR_PM_Handler' (auto size = 232) calls into a recursive loop, calls 'MFG_PhyStRx4GFSK'.
'PHY_RegisterIndicationHandler' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'PHY_Request' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'PHY_ResetRequest' (auto size = 20) calls into a recursive loop, calls 'PHY_Request'.
'PHY_ResetStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'PHY_RssiHistory_Print' (auto size = 0) calls into a recursive loop, calls 'DBG_log'.
'PHY_RxChannel_Get' (auto size = 81) calls into a recursive loop, calls 'PHY_GetRequest'.
'PHY_RxChannel_Set' (auto size = 89) calls into a recursive loop, calls 'PHY_GetRequest'.
'PHY_RxDetectionConfig_Get' (auto size = 81) calls into a recursive loop, calls 'PHY_GetRequest'.
'PHY_RxDetectionConfig_Set' (auto size = 13) calls into a recursive loop, calls 'PHY_SetRequest'.
'PHY_RxFramingConfig_Get' (auto size = 81) calls into a recursive loop, calls 'PHY_GetRequest'.
'PHY_RxFramingConfig_Set' (auto size = 13) calls into a recursive loop, calls 'PHY_SetRequest'.
'PHY_RxMode_Get' (auto size = 81) calls into a recursive loop, calls 'PHY_GetRequest'.
'PHY_RxMode_Set' (auto size = 13) calls into a recursive loop, calls 'PHY_SetRequest'.
'PHY_SetRequest' (auto size = 28) calls into a recursive loop, calls 'BM_Free'.
'PHY_SetStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'PHY_StartRequest' (auto size = 20) calls into a recursive loop, calls 'RequestBuffer_Get'.
'PHY_StartStateMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'PHY_StartStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'PHY_StateMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'PHY_Stats' (auto size = 26) calls into a recursive loop, calls 'DBG_log'.
'PHY_StopRequest' (auto size = 16) calls into a recursive loop, calls 'PHY_Request'.
'PHY_StopStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'PHY_SyncHistory' (auto size = 4) is finite, requires 24 bytes total stack in calling 'memcpy'.
'PHY_Task' (auto size = 57) calls into a recursive loop, calls 'BM_Free'.
'PHY_TestMode' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'PHY_TestMode_Enable' (auto size = 24) calls into a recursive loop, calls 'MAC_StartRequest'.
'PHY_TxChannel_Get' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'PHY_TxChannel_Set' (auto size = 77) calls into a recursive loop, calls 'PHY_SetRequest'.
'PHY_Unlock' (auto size = 0) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'PHY_VirtualTemp_Get' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'PHY_configRead' (auto size = 0) calls a non-deterministic function: 'FIO_fread'.
'PHY_init' (auto size = 12) calls a non-deterministic function: 'FIO_fread'.
'PWRCFG_LastGaspMaxNumAttemptsHandler' (auto size = 20) calls into a recursive loop, calls 'PWRCFG_set_LastGaspMaxNumAttempts'.
'PWRCFG_OutageDeclarationDelayHandler' (auto size = 20) calls into a recursive loop, calls 'PWRCFG_set_outage_delay_seconds'.
'PWRCFG_PowerQualityEventDurationHandler' (auto size = 20) calls into a recursive loop, calls 'PWRCFG_set_PowerQualityEventDuration'.
'PWRCFG_RestorationDeclarationDelayHandler' (auto size = 20) calls into a recursive loop, calls 'PWRCFG_set_restoration_delay_seconds'.
'PWRCFG_SIMLG_OR_PM_Handler' (auto size = 33) calls into a recursive loop, calls 'PWRCFG_set_SimulateLastGaspDuration'.
'PWRCFG_get_LastGaspMaxNumAttempts' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'PWRCFG_get_PowerQualityEventDuration' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'PWRCFG_get_SimulateLastGaspDuration' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'PWRCFG_get_SimulateLastGaspMaxNumAttempts' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'PWRCFG_get_SimulateLastGaspStart' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'PWRCFG_get_SimulateLastGaspStats' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'PWRCFG_get_SimulateLastGaspTraffic' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'PWRCFG_get_outage_delay_seconds' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'PWRCFG_get_restoration_delay_seconds' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'PWRCFG_init' (auto size = 8) calls a non-deterministic function: 'FIO_fread'.
'PWRCFG_set_LastGaspMaxNumAttempts' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'PWRCFG_set_PowerQualityEventDuration' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'PWRCFG_set_SimulateLastGaspDuration' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'PWRCFG_set_SimulateLastGaspMaxNumAttempts' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'PWRCFG_set_SimulateLastGaspStart' (auto size = 42) calls into a recursive loop, calls 'DBG_log'.
'PWRCFG_set_SimulateLastGaspTraffic' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'PWRCFG_set_outage_delay_seconds' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'PWRCFG_set_restoration_delay_seconds' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'PWRLG_BSP_Setup' (auto size = 0) is finite, requires 9 bytes total stack in calling 'PWRLG_LastGasp'.
'PWRLG_Begin' (auto size = 92) calls into a recursive loop, calls 'DBG_log'.
'PWRLG_CalculateMessages' (auto size = 20) calls a non-deterministic function: 'ADC_Get_SC_Voltage'.
'PWRLG_CalculateSleep' (auto size = 20) calls a non-deterministic function: 'aclara_randu'.
'PWRLG_GetLGTxMsgSentStatus' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'PWRLG_Idle_Task' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'PWRLG_LLWU_ISR' (auto size = 2) is finite, requires 2 bytes total stack in calling 'no function'.
'PWRLG_LastGasp' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'PWRLG_MacConfigHandle' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'PWRLG_RestLastGaspFlags' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'PWRLG_Restoration' (auto size = 10) calls a non-deterministic function: 'MODECFG_get_decommission_mode'.
'PWRLG_SetCsmaParameters' (auto size = 73) calls into a recursive loop, calls 'MAC_GetRequest'.
'PWRLG_SetupLastGasp' (auto size = 0) calls a non-deterministic function: 'PWRLG_CalculateSleep'.
'PWRLG_Startup' (auto size = 6) calls a non-deterministic function: 'NextSleep'.
'PWRLG_Task' (auto size = 84) calls into a recursive loop, calls 'DBG_log'.
'PWRLG_TxFailure' (auto size = 4) calls into a recursive loop, calls 'EnterLLS'.
'PWRLG_TxMessage' (auto size = 56) calls into a recursive loop, calls 'HEEP_MSG_Tx'.
'PWROR_HMC_signal' (auto size = 0) calls a non-deterministic function: 'OS_SEM_POST'.
'PWROR_PWR_signal' (auto size = 0) calls a non-deterministic function: 'OS_SEM_POST'.
'PWROR_Task' (auto size = 170) calls into a recursive loop, calls 'DBG_log'.
'PWROR_init' (auto size = 4) is finite, requires 61 bytes total stack in calling 'OS_SEM_Create'.
'PWROR_printOutageStats' (auto size = 42) calls into a recursive loop, calls 'DBG_log'.
'PWROR_tx_message' (auto size = 194) calls into a recursive loop, calls 'DBG_log'.
'PWR_OR_PM_Handler' (auto size = 20) calls a non-deterministic function: 'PWR_setPowerFailCount'.
'PWR_SafeReset' (auto size = 0) is non-deterministic, calls through a function pointer.
'PWR_TSK_init' (auto size = 53) calls into a recursive loop, calls 'DBG_log'.
'PWR_getOutageTime' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'PWR_getPowerAnomalyCount' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'PWR_getPowerFailCount' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'PWR_getResetCause' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'PWR_getSpuriousResetCnt' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'PWR_getWatchDogResetCnt' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'PWR_getpwrFileData' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'PWR_lockMutex' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_LOCK'.
'PWR_powerUp' (auto size = 0) calls into a recursive loop, calls 'BSP_Get_ResetStatus'.
'PWR_printResetCause' (auto size = 0) calls into a recursive loop, calls 'DBG_log'.
'PWR_resetCounters' (auto size = 0) is finite, requires 20 bytes total stack in calling 'memset'.
'PWR_setOutageTime' (auto size = 8) calls a non-deterministic function: 'FIO_fwrite'.
'PWR_setPowerAnomalyCount' (auto size = 2) is finite, requires 2 bytes total stack in calling 'no function'.
'PWR_setPowerFailCount' (auto size = 4) calls a non-deterministic function: 'FIO_fwrite'.
'PWR_setSpuriousResetCnt' (auto size = 4) calls a non-deterministic function: 'FIO_fwrite'.
'PWR_setWatchDogResetCnt' (auto size = 2) is finite, requires 2 bytes total stack in calling 'no function'.
'PWR_task' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'PWR_unlockMutex' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_LOCK'.
'PWR_waitForStablePower' (auto size = 0) is finite, requires 91 bytes total stack in calling 'PowerGoodDebounce'.
'P_Persistence_Get' (auto size = 48) calls into a recursive loop, calls 'DBG_log'.
'PackQC' (auto size = 14) is finite, requires 57 bytes total stack in calling 'PACK_Buffer'.
'PacketTimeout_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'PerformCFOCompensation' (auto size = 36) is finite, requires 36 bytes total stack in calling 'no function'.
'PerformDY' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'PerformPR' (auto size = 61) calls into a recursive loop, calls 'DBG_log'.
'PerformRBM' (auto size = 24) calls into a recursive loop, calls 'BM_Free'.
'PerformRBS' (auto size = 24) calls into a recursive loop, calls 'BM_Free'.
'PerformRD' (auto size = 22) calls into a recursive loop, calls 'BM_Free'.
'PerformRR' (auto size = 30) calls into a recursive loop, calls 'BM_Free'.
'PerformRW' (auto size = 20) calls into a recursive loop, calls 'BM_Free'.
'PerformWBM' (auto size = 24) calls into a recursive loop, calls 'BM_Free'.
'PerformWBS' (auto size = 24) calls into a recursive loop, calls 'BM_Free'.
'PerformWD' (auto size = 22) calls into a recursive loop, calls 'BM_Free'.
'PingRsp_Create' (auto size = 32) calls into a recursive loop, calls 'ReqBuffer_Alloc'.
'PortTimer_CallBack' (auto size = 8) calls a non-deterministic function: 'FIO_fwrite'.
'PowerFailDebounce' (auto size = 6) is finite, requires 87 bytes total stack in calling 'delay_10us'.
'PowerGoodDebounce' (auto size = 2) is finite, requires 83 bytes total stack in calling 'delay_10us'.
'PowerSetting_Set' (auto size = 1) calls a non-deterministic function: 'RADIO_Power_Level_Set'.
'PrepGFMatLog' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'PrintECC_error' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'PrioritizeAndInsert' (auto size = 28) calls into a recursive loop, calls 'DBG_log'.
'ProcessSRFNHeaderPBytes' (auto size = 9) calls into a recursive loop, calls 'validateSrfnHeader'.
'ProcessSRFNPayloadPBytes' (auto size = 6) calls into a recursive loop, calls 'validatePhyPayload'.
'Process_CCAReq' (auto size = 22) calls into a recursive loop, calls 'DBG_log'.
'Process_CcaConfirm' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_CmdFrame' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_DataConfirm' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_DataConfirm' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_DataIndication' (auto size = 312) calls into a recursive loop, calls 'BM_AllocStack'.
'Process_DataReq' (auto size = 30) calls into a recursive loop, calls 'BM_Free'.
'Process_DataReq' (auto size = 14) calls into a recursive loop, calls 'DBG_log'.
'Process_DataRequest' (auto size = 50) calls into a recursive loop, calls 'BM_AllocStack'.
'Process_FlushConfirm' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_FlushReq' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_GetConfirm' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_GetConfirm' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_GetReq' (auto size = 4) calls into a recursive loop, calls 'MAC_Attribute_Get'.
'Process_GetReq' (auto size = 8) calls into a recursive loop, calls 'SM_Attribute_Get'.
'Process_GetReq' (auto size = 4) calls into a recursive loop, calls 'PHY_Attribute_Get'.
'Process_GetRequest' (auto size = 4) calls into a recursive loop, calls 'NWK_Attribute_Get'.
'Process_PingConfirm' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_PingReq' (auto size = 20) calls into a recursive loop, calls 'DBG_log'.
'Process_PingReqFrame' (auto size = 100) calls into a recursive loop, calls 'BM_Free'.
'Process_PurgeConfirm' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_PurgeReq' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_RefreshReq' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'Process_ResetConfirm' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_ResetConfirm' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_ResetReq' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_ResetReq' (auto size = 134) calls into a recursive loop, calls 'DBG_log'.
'Process_ResetRequest' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_SetConfirm' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_SetConfirm' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_SetReq' (auto size = 8) calls into a recursive loop, calls 'SM_Attribute_Set'.
'Process_SetReq' (auto size = 4) calls into a recursive loop, calls 'MAC_Attribute_Set'.
'Process_SetReq' (auto size = 4) calls into a recursive loop, calls 'PHY_Attribute_Set'.
'Process_SetRequest' (auto size = 4) calls into a recursive loop, calls 'NWK_Attribute_Set'.
'Process_StartReq' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_StartReq' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_StartReq' (auto size = 12) calls into a recursive loop, calls 'UpdateMode'.
'Process_StartRequest' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_StopReq' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_StopReq' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'Process_StopReq' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_StopRequest' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_TimeQueryConfirm' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'Process_TimeQueryReq' (auto size = 12) calls into a recursive loop, calls 'BM_Free'.
'RADIO_Build_Noise_Floor' (auto size = 204) calls into a recursive loop, calls 'DBG_log'.
'RADIO_CaptureRSSI' (auto size = 2) calls into a recursive loop, calls 'Radio_Get_CurrentRSSI'.
'RADIO_Clear_RxStartOccured' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'RADIO_Do_CCA' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'RADIO_Event_Set' (auto size = 5) is non-deterministic, calls through a function pointer.
'RADIO_Filter_CCA' (auto size = 130) calls into a recursive loop, calls 'PHY_Attribute_Get'.
'RADIO_Find_RX_Radio' (auto size = 21) calls into a recursive loop, calls 'PHY_Attribute_Get'.
'RADIO_Get_IntFIFOCYCCNTTimeStamp' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'RADIO_Get_RSSI' (auto size = 52) calls into a recursive loop, calls 'DBG_log'.
'RADIO_Get_RxStartCYCCNTTimeStamp' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'RADIO_Get_RxStartOccured' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'RADIO_Is_RX' (auto size = 18) calls a non-deterministic function: 'si446x_get_int_status'.
'RADIO_Is_TX' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'RADIO_Lock_Mutex' (auto size = 0) calls a non-deterministic function: 'OS_MUTEX_LOCK'.
'RADIO_Mode_Set' (auto size = 96) calls into a recursive loop, calls 'DBG_log'.
'RADIO_NoiseEstimateBoostOn_Set' (auto size = 80) calls into a recursive loop, calls 'PHY_Attribute_Set'.
'RADIO_NoiseEstimate_Set' (auto size = 80) calls into a recursive loop, calls 'PHY_Attribute_Set'.
'RADIO_Power_Level_Get' (auto size = 16) calls a non-deterministic function: 'si446x_get_property'.
'RADIO_Power_Level_Set' (auto size = 1) calls a non-deterministic function: 'si446x_set_property'.
'RADIO_PreambleDetected' (auto size = 1) calls a non-deterministic function: 'RadioEvent_PreambleDetect'.
'RADIO_RX_Watchdog' (auto size = 136) calls into a recursive loop, calls 'DBG_log'.
'RADIO_RX_WatchdogService' (auto size = 1) is finite, requires 41 bytes total stack in calling '_int_disable' (external).
'RADIO_RxChannelGet' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'RADIO_RxDetectionConfig' (auto size = 9) calls a non-deterministic function: 'si446x_set_property'.
'RADIO_RxFramingConfig' (auto size = 9) is finite, requires 9 bytes total stack in calling 'no function'.
'RADIO_RxModeConfig' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'RADIO_Set_RxStart' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'RADIO_Set_SyncTime' (auto size = 20) is finite, requires 20 bytes total stack in calling 'no function'.
'RADIO_Status_Get' (auto size = 56) calls a non-deterministic function: 'si446x_get_int_status'.
'RADIO_SyncDetected' (auto size = 44) calls into a recursive loop, calls 'DBG_log'.
'RADIO_TCXO_Get' (auto size = 32) is finite, requires 168 bytes total stack in calling 'TIME_UTIL_GetTimeInQSecFracFormat'.
'RADIO_TCXO_Set' (auto size = 20) is finite, requires 156 bytes total stack in calling 'TIME_UTIL_GetTimeInQSecFracFormat'.
'RADIO_TX_Watchdog' (auto size = 17) calls into a recursive loop, calls 'DBG_log'.
'RADIO_Temperature_Get' (auto size = 24) calls a non-deterministic function: 'ADC_Get_uP_Temperature'.
'RADIO_Transmit_Buffer_Get' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'RADIO_TxMode_Get' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'RADIO_UnBufferRSSI' (auto size = 3) is finite, requires 3 bytes total stack in calling 'no function'.
'RADIO_UnLock_Mutex' (auto size = 0) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'RADIO_Update_Freq' (auto size = 0) is finite, requires 40 bytes total stack in calling '_nvic_int_disable' (external).
'RADIO_Update_Freq_Watchdog' (auto size = 4) is finite, requires 52 bytes total stack in calling 'getCoreClock'.
'RADIO_Update_Noise_Floor' (auto size = 180) calls into a recursive loop, calls 'DBG_log'.
'RG_CF_MsgHandler' (auto size = 24) calls into a recursive loop, calls 'APP_MSG_updateRegistrationTimeout'.
'RG_MD_BuildMetadataPacket' (auto size = 209) calls into a recursive loop, calls 'DBG_log'.
'RG_MD_MsgHandler' (auto size = 28) calls into a recursive loop, calls 'HEEP_MSG_Tx'.
'RNG_GetRandom_32bit' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'RNG_GetRandom_Array' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'RNG_init' (auto size = 4) is finite, requires 84 bytes total stack in calling 'OS_MUTEX_Create'.
'RSDecode' (auto size = 12) is finite, requires 31 bytes total stack in calling 'GFMult'.
'RSEncode' (auto size = 24) is finite, requires 40 bytes total stack in calling 'EncodeSymbol'.
'RSGamma' (auto size = 5) is finite, requires 5 bytes total stack in calling 'no function'.
'RSRepair' (auto size = 13) is finite, requires 67 bytes total stack in calling 'Berlekamp_Massey'.
'RS_Decode' (auto size = 36) is finite, requires 980 bytes total stack in calling 'eras_dec_rs'.
'RS_Encode' (auto size = 28) is finite, requires 68 bytes total stack in calling 'encode_rs'.
'RS_GetCode' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'RS_GetKK' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'RS_GetMM' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'RS_GetParityLength' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'RTC_GetDateTime' (auto size = 32) is finite, requires 72 bytes total stack in calling '_time_to_date' (external).
'RTC_GetTimeAtRes' (auto size = 20) is finite, requires 20 bytes total stack in calling 'no function'.
'RTC_GetTimeInSecMicroSec' (auto size = 28) is finite, requires 28 bytes total stack in calling 'no function'.
'RTC_SetDateTime' (auto size = 32) is finite, requires 72 bytes total stack in calling '_time_from_date' (external).
'RTC_Valid' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'RTI_init' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'RTI_run' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'Radio0_IRQ_ISR' (auto size = 24) calls a non-deterministic function: 'OS_EVNT_SET'.
'RadioEvent_CTSLineLow' (auto size = 1) calls into a recursive loop, calls 'DBG_log'.
'RadioEvent_Int' (auto size = 1) calls into a recursive loop, calls 'processRadioInt'.
'RadioEvent_PreambleDetect' (auto size = 1) calls a non-deterministic function: 'PHY_CounterInc'.
'RadioEvent_RadioWatchdog' (auto size = 1) calls a non-deterministic function: 'PHY_CounterInc'.
'RadioEvent_RssiJump' (auto size = 1) calls a non-deterministic function: 'PHY_CounterInc'.
'RadioEvent_RxAbort' (auto size = 1) calls a non-deterministic function: 'PHY_CounterInc'.
'RadioEvent_RxData' (auto size = 17) calls into a recursive loop, calls 'DBG_log'.
'RadioEvent_Set' (auto size = 5) calls a non-deterministic function: 'OS_EVNT_SET'.
'RadioEvent_SyncDetect' (auto size = 4) calls a non-deterministic function: 'writeCache'.
'RadioEvent_TxAbort' (auto size = 1) calls a non-deterministic function: 'PHY_CounterInc'.
'RadioEvent_TxDone' (auto size = 1) calls into a recursive loop, calls 'BM_Free'.
'RadioSDN' (auto size = 2) is finite, requires 2 bytes total stack in calling 'no function'.
'Radio_Calibrate' (auto size = 2) calls a non-deterministic function: 'si446x_ircal'.
'Radio_Disable_RSSI_Jump' (auto size = 1) calls a non-deterministic function: 'si446x_set_property'.
'Radio_Enable_RSSI_Jump' (auto size = 1) calls a non-deterministic function: 'si446x_set_property'.
'Radio_Get_CurrentRSSI' (auto size = 24) calls into a recursive loop, calls 'PHY_Attribute_Get'.
'Radio_RX_FIFO_Almost_Full' (auto size = 164) calls into a recursive loop, calls 'DBG_log'.
'Radio_RX_int_enable' (auto size = 1) calls a non-deterministic function: 'si446x_set_property'.
'Radio_TX_int_enable' (auto size = 1) calls a non-deterministic function: 'si446x_set_property'.
'Radio_int_disable' (auto size = 1) calls a non-deterministic function: 'si446x_set_property'.
'Radio_latch_RSSI' (auto size = 2) calls a non-deterministic function: 'si446x_set_property'.
'RandomBackoffDelay_Get' (auto size = 0) calls a non-deterministic function: 'aclara_randu'.
'ReadData' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'ReadingHeader_Set' (auto size = 20) is finite, requires 20 bytes total stack in calling 'no function'.
'ReadingQty_Inc' (auto size = 9) is finite, requires 9 bytes total stack in calling 'no function'.
'Ready' (auto size = 200) calls into a recursive loop, calls 'DBG_log'.
'ReadyRx' (auto size = 7) calls into a recursive loop, calls 'DBG_log'.
'ReadyTx' (auto size = 0) calls into a recursive loop, calls 'DBG_log'.
'ReassemblyTimeout_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'ReliabilityHighCount_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'ReliabilityLowCount_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'ReliabilityMediumCount_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'ReqBuffer_Alloc' (auto size = 16) calls into a recursive loop, calls 'BM_AllocStack'.
'ReqBuffer_Alloc' (auto size = 20) calls into a recursive loop, calls 'BM_AllocStack'.
'RequestBuffer_Get' (auto size = 8) calls into a recursive loop, calls 'BM_AllocStack'.
'RequestBuffer_Get' (auto size = 8) calls into a recursive loop, calls 'BM_AllocStack'.
'Reset_ReceiveStats' (auto size = 0) calls a non-deterministic function: 'writeCache'.
'RnCrc_Gen' (auto size = 3) is finite, requires 3 bytes total stack in calling 'no function'.
'RssiJumpThreshold_Set' (auto size = 1) calls a non-deterministic function: 'writeConfig'.
'RunSelfTest' (auto size = 37) calls into a recursive loop, calls 'EVL_LogEvent'.
'RxChannels_Set' (auto size = 12) is non-deterministic, calls through a function pointer.
'RxDetectionConfig_Set' (auto size = 9) is non-deterministic, calls through a function pointer.
'RxFramingConfig_Set' (auto size = 9) is non-deterministic, calls through a function pointer.
'RxMode_Set' (auto size = 9) calls into a recursive loop, calls 'RADIO_RxModeConfig'.
'SCLK_intClk' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'SD_FindSync' (auto size = 64) is finite, requires 236 bytes total stack in calling 'TIME_SYS_GetRealCpuFreq'.
'SD_PhaseSamplesListenerTask' (auto size = 5) calls into a recursive loop, calls 'RADIO_CaptureRSSI'.
'SD_PreambleDetectorTask' (auto size = 25) calls into a recursive loop, calls 'DBG_log'.
'SD_ReleaseFilteredSamplesSemaphore' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'SD_SyncPayloadDemodTask' (auto size = 5344) calls into a recursive loop, calls 'SyncAndPayloadDemodulator'.
'SD_Unblock_Sync_Payload_Task' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'SEC_GetSecPartHandle' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'SEC_init' (auto size = 28) calls into a recursive loop, calls 'ecc108e_InitKeys'.
'SELF_GetTestFileHandle' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'SELF_OR_PM_Handler' (auto size = 24) calls a non-deterministic function: 'SELF_UpdateTestResults'.
'SELF_UpdateTestResults' (auto size = 4) calls a non-deterministic function: 'FIO_fflush'.
'SELF_getEventHandle' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'SELF_init' (auto size = 12) calls a non-deterministic function: 'FIO_fread'.
'SELF_setEventNotify' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'SELF_testNV' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'SELF_testRTC' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'SELF_testSecurity' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'SELF_testTask' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'SMTDCFG_OR_PM_Handler' (auto size = 20) calls into a recursive loop, calls 'SMTDCFG_setEngBuEnabled'.
'SMTDCFG_getEngBuEnabled' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'SMTDCFG_getEngBuTrafficClass' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'SMTDCFG_get_log' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'SMTDCFG_init' (auto size = 8) calls a non-deterministic function: 'FIO_fread'.
'SMTDCFG_setEngBuEnabled' (auto size = 8) calls into a recursive loop, calls 'SMTDCFG_write'.
'SMTDCFG_setEngBuTrafficClass' (auto size = 8) calls into a recursive loop, calls 'SMTDCFG_write'.
'SMTDCFG_set_log' (auto size = 8) calls into a recursive loop, calls 'SMTDCFG_write'.
'SMTDCFG_write' (auto size = 4) calls into a recursive loop, calls 'DBG_log'.
'SM_Attribute_Get' (auto size = 12) calls into a recursive loop, calls 'DBG_log'.
'SM_Attribute_Set' (auto size = 8) calls into a recursive loop, calls 'DBG_log'.
'SM_ConfigPrint' (auto size = 0) calls into a recursive loop, calls 'DBG_log'.
'SM_GetRequest' (auto size = 32) calls into a recursive loop, calls 'DBG_log'.
'SM_GetSetRequest_CB' (auto size = 4) calls a non-deterministic function: 'OS_SEM_POST'.
'SM_GetStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'SM_NwState_Task' (auto size = 24) calls into a recursive loop, calls 'BM_AllocStack'.
'SM_RefreshRequest' (auto size = 8) calls into a recursive loop, calls 'RequestBuffer_Get'.
'SM_RefreshStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'SM_RegisterEventIndicationHandler' (auto size = 4) calls a non-deterministic function: 'IndicationRegisterHandler'.
'SM_Request' (auto size = 4) calls a non-deterministic function: 'OS_MSGQ_POST'.
'SM_SendConfirm' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'SM_SetRequest' (auto size = 24) calls into a recursive loop, calls 'DBG_log'.
'SM_SetStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'SM_StartLayers' (auto size = 7) calls into a recursive loop, calls 'mac_StartStop'.
'SM_StartRequest' (auto size = 16) calls into a recursive loop, calls 'RequestBuffer_Get'.
'SM_StartStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'SM_Stats' (auto size = 1) calls into a recursive loop, calls 'DBG_log'.
'SM_StopRequest' (auto size = 12) calls into a recursive loop, calls 'RequestBuffer_Get'.
'SM_StopStatusMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'SM_Task' (auto size = 13) calls into a recursive loop, calls 'BM_Free'.
'SM_WaitForStackInitialized' (auto size = 16) calls into a recursive loop, calls 'SM_GetRequest'.
'SM_init' (auto size = 4) calls a non-deterministic function: 'MAC_RegisterCommStatusIndicationHandler'.
'SPI_ChkSharedPortCfg' (auto size = 8) is finite, requires 105 bytes total stack in calling 'SPI_OpenPort'.
'SPI_ClosePort' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'SPI_MutexLock' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_LOCK'.
'SPI_MutexUnlock' (auto size = 1) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'SPI_OpenPort' (auto size = 41) is finite, requires 89 bytes total stack in calling 'getBusClock'.
'SPI_ReadPort' (auto size = 20) calls a non-deterministic function: 'SPI_WriteReadPort'.
'SPI_RtosEnable' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'SPI_SetFastSlewRate' (auto size = 2) is finite, requires 2 bytes total stack in calling 'no function'.
'SPI_WritePort' (auto size = 20) calls a non-deterministic function: 'SPI_WriteReadPort'.
'SPI_WriteReadPort' (auto size = 34) calls a non-deterministic function: 'OS_SEM_PEND'.
'SPI_initPort' (auto size = 8) is finite, requires 88 bytes total stack in calling 'OS_MUTEX_Create'.
'SPI_misoCfg' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'SPI_pwrMode' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'STK_MGR_ApplyFrequencies' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'STK_MGR_LogTimerExpired' (auto size = 8) calls a non-deterministic function: 'OS_MSGQ_POST'.
'STK_MGR_SendStats' (auto size = 8) calls into a recursive loop, calls 'BM_Free'.
'STK_MGR_SetLogTimer' (auto size = 40) calls into a recursive loop, calls 'DBG_log'.
'STK_MGR_Stats_CB' (auto size = 6) calls into a recursive loop, calls 'STK_MGR_SendStats'.
'STRT_CpuLoadPrint' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'STRT_StartupTask' (auto size = 64) calls into a recursive loop, calls 'DBG_log'.
'SYSBUSY_clearBusy' (auto size = 0) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'SYSBUSY_init' (auto size = 4) is finite, requires 84 bytes total stack in calling 'OS_MUTEX_Create'.
'SYSBUSY_isBusy' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'SYSBUSY_lockIfIdle' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'SYSBUSY_setBusy' (auto size = 0) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'SYSBUSY_unlock' (auto size = 0) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'ScaleClipFreq2phase' (auto size = 28) is finite, requires 28 bytes total stack in calling 'no function'.
'SearchForType' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'SendConfirm' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'SendConfirm' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'SendData' (auto size = 60) calls into a recursive loop, calls 'DBG_log'.
'Service_Unavailable' (auto size = 0) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'SetFreq' (auto size = 52) calls into a recursive loop, calls 'DBG_log'.
'Set_ActiveActivityTimeout' (auto size = 4) calls a non-deterministic function: 'OS_EVNT_SET'.
'Set_ModeMaxTransitionAttempts' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'Set_PassiveActivityTimeout' (auto size = 4) calls a non-deterministic function: 'OS_EVNT_SET'.
'Set_StatsCaptureTime' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'Set_StatsConfig' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'Set_StatsEnable' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'ShipMode' (auto size = 2) calls into a recursive loop, calls 'DBG_log'.
'Shutdown' (auto size = 0) calls into a recursive loop, calls 'Standby'.
'SleepRx' (auto size = 1) calls a non-deterministic function: 'si446x_change_state'.
'SoftDemodulator_Initialize' (auto size = 5) is finite, requires 85 bytes total stack in calling 'OS_MUTEX_Create'.
'Spi0DmaIsr' (auto size = 0) calls a non-deterministic function: 'SpiDmaIsr'.
'Spi1DmaIsr' (auto size = 0) calls a non-deterministic function: 'SpiDmaIsr'.
'Spi2DmaIsr' (auto size = 0) calls a non-deterministic function: 'SpiDmaIsr'.
'SpiDmaIsr' (auto size = 1) calls a non-deterministic function: 'OS_SEM_POST'.
'StTxCwTestCompletedTimerExpired' (auto size = 8) calls into a recursive loop, calls 'RADIO_Mode_Set'.
'Standby' (auto size = 0) calls into a recursive loop, calls 'StandbyRx'.
'StandbyRx' (auto size = 1) calls into a recursive loop, calls 'DBG_log'.
'StandbyTx' (auto size = 0) calls into a recursive loop, calls 'DBG_log'.
'StartRx' (auto size = 4) calls into a recursive loop, calls 'vRadio_StartRX'.
'SyncAndPayloadDemodulator' (auto size = 909) calls into a recursive loop, calls 'ProcessSRFNHeaderPBytes'.
'TEMPERATURE_OR_PM_Handler' (auto size = 92) calls into a recursive loop, calls 'PHY_GetRequest'.
'TEMPERATURE_getEpMaxTemperature' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TEMPERATURE_getEpMinTemperature' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TEMPERATURE_getEpTempHysteresis' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TEMPERATURE_getEpTempMinThreshold' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TEMPERATURE_getEpTemperatureStatus' (auto size = 5) calls a non-deterministic function: 'FIO_fwrite'.
'TEMPERATURE_getHighTempThreshold' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TEMPERATURE_init' (auto size = 5) calls a non-deterministic function: 'FIO_fread'.
'TEMPERATURE_setEpMaxTemperature' (auto size = 8) calls a non-deterministic function: 'FIO_fwrite'.
'TEMPERATURE_setEpMinTemperature' (auto size = 8) calls a non-deterministic function: 'FIO_fwrite'.
'TEMPERATURE_setEpTempHysteresis' (auto size = 8) calls a non-deterministic function: 'FIO_fwrite'.
'TEMPERATURE_setEpTempMinThreshold' (auto size = 8) calls a non-deterministic function: 'FIO_fwrite'.
'TEMPERATURE_setHighTempThreshold' (auto size = 8) calls a non-deterministic function: 'FIO_fwrite'.
'TIME_SYNC_AddTimeSyncPayload' (auto size = 5) calls a non-deterministic function: 'TIME_SYNC_TimePrecision_Get'.
'TIME_SYNC_Init' (auto size = 5) calls a non-deterministic function: 'TimeSync_ManageAlarm'.
'TIME_SYNC_LogPrecisionToPrecisionInMicroSec' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'TIME_SYNC_OR_PM_Handler' (auto size = 20) calls a non-deterministic function: 'TIME_SYNC_TimeSource_Set'.
'TIME_SYNC_Parameters_Print' (auto size = 60) calls into a recursive loop, calls 'DBG_log'.
'TIME_SYNC_PeriodicAlaramID_Get' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TIME_SYNC_TimeDefaultAccuracy_Get' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TIME_SYNC_TimeDefaultAccuracy_Set' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TIME_SYNC_TimeLastUpdatedPrecision_Get' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TIME_SYNC_TimeLastUpdatedPrecision_Set' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TIME_SYNC_TimePrecisionMicroSeconds_Get' (auto size = 16) calls a non-deterministic function: 'TIME_SYS_GetTimeLastUpdated'.
'TIME_SYNC_TimePrecision_Get' (auto size = 8) calls a non-deterministic function: 'TIME_SYNC_TimePrecisionMicroSeconds_Get'.
'TIME_SYNC_TimeQueryResponseMode_Get' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TIME_SYNC_TimeQueryResponseMode_Set' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TIME_SYNC_TimeSetMaxOffset_Get' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TIME_SYNC_TimeSetMaxOffset_Set' (auto size = 8) calls a non-deterministic function: 'TimeSync_ManageAlarm'.
'TIME_SYNC_TimeSetPeriod_Get' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TIME_SYNC_TimeSetPeriod_Set' (auto size = 8) calls a non-deterministic function: 'TimeSync_ManageAlarm'.
'TIME_SYNC_TimeSetStart_Get' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TIME_SYNC_TimeSetStart_Set' (auto size = 8) calls a non-deterministic function: 'TimeSync_ManageAlarm'.
'TIME_SYNC_TimeSource_Get' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TIME_SYNC_TimeSource_Set' (auto size = 8) calls a non-deterministic function: 'TimeSync_ManageAlarm'.
'TIME_SYNC_timeMaxClockDrift_Get' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'TIME_SYS_AddCalAlarm' (auto size = 16) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TIME_SYS_AddPerAlarm' (auto size = 16) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TIME_SYS_DeleteAlarm' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TIME_SYS_GetCalAlarm' (auto size = 16) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TIME_SYS_GetDateTimeLostCount' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TIME_SYS_GetInstallationDateTime' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TIME_SYS_GetPeriodicAlarm' (auto size = 16) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TIME_SYS_GetPupDateTime' (auto size = 8) is finite, requires 48 bytes total stack in calling '__get_PRIMASK' (external).
'TIME_SYS_GetRealCpuFreq' (auto size = 28) is finite, requires 164 bytes total stack in calling 'TIME_UTIL_GetTimeInQSecFracFormat'.
'TIME_SYS_GetSourceMsg' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'TIME_SYS_GetSysDateTime' (auto size = 12) is finite, requires 68 bytes total stack in calling 'TIME_SYS_IsTimeValid'.
'TIME_SYS_GetTimeAcceptanceDelay' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TIME_SYS_GetTimeLastUpdated' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TIME_SYS_GetTimeRequestMaxTimeout' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TIME_SYS_HandlerTask' (auto size = 112) calls into a recursive loop, calls 'DBG_log'.
'TIME_SYS_Init' (auto size = 21) calls a non-deterministic function: 'FIO_fread'.
'TIME_SYS_IsTimeValid' (auto size = 8) is finite, requires 48 bytes total stack in calling '__get_PRIMASK' (external).
'TIME_SYS_OR_PM_Handler' (auto size = 52) calls a non-deterministic function: 'TIME_SYS_SetTimeAcceptanceDelay'.
'TIME_SYS_SetDSTAlarm' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'TIME_SYS_SetDateTimeFromMAC' (auto size = 184) calls into a recursive loop, calls 'DBG_log'.
'TIME_SYS_SetDateTimeLostCount' (auto size = 2) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TIME_SYS_SetInstallationDateTime' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TIME_SYS_SetRealCpuFreq' (auto size = 16) is finite, requires 152 bytes total stack in calling 'TIME_UTIL_GetTimeInQSecFracFormat'.
'TIME_SYS_SetSysDateTime' (auto size = 52) calls a non-deterministic function: 'FIO_fwrite'.
'TIME_SYS_SetTimeAcceptanceDelay' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TIME_SYS_SetTimeFromRTC' (auto size = 40) calls a non-deterministic function: 'FIO_fwrite'.
'TIME_SYS_SetTimeRequestMaxTimeout' (auto size = 8) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TIME_SYS_SetTimeState' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'TIME_SYS_TimeState' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TIME_SYS_acceptanceTimeoutCallback' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'TIME_SYS_getTimeSigOffset' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'TIME_SYS_reqTimeoutCallback' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'TIME_SYS_setTimeSigOffset' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'TIME_SYS_vApplicationTickHook' (auto size = 8) is non-deterministic, calls through a function pointer.
'TIME_UTIL_ConvertCyccntToQSecFracFormat' (auto size = 16) is finite, requires 188 bytes total stack in calling 'TIME_SYS_GetRealCpuFreq'.
'TIME_UTIL_ConvertDateFormatToSysFormat' (auto size = 17) is finite, requires 37 bytes total stack in calling 'memset'.
'TIME_UTIL_ConvertMtrHighFormatToSysFormat' (auto size = 24) calls a non-deterministic function: 'DST_ConvertLocaltoUTC'.
'TIME_UTIL_ConvertNsecToQSecFracFormat' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'TIME_UTIL_ConvertSecondsToSysCombined' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'TIME_UTIL_ConvertSecondsToSysFormat' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'TIME_UTIL_ConvertSysCombinedToSeconds' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'TIME_UTIL_ConvertSysCombinedToSysFormat' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'TIME_UTIL_ConvertSysFormatToDateFormat' (auto size = 16) is finite, requires 29 bytes total stack in calling 'isLeapYear'.
'TIME_UTIL_ConvertSysFormatToMtrHighFormat' (auto size = 40) calls a non-deterministic function: 'DST_ConvertUTCtoLocal'.
'TIME_UTIL_ConvertSysFormatToSeconds' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'TIME_UTIL_ConvertSysFormatToSysCombined' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'TIME_UTIL_GetDaysInMonth' (auto size = 9) is finite, requires 22 bytes total stack in calling 'isLeapYear'.
'TIME_UTIL_GetTimeInDateFormat' (auto size = 32) is finite, requires 108 bytes total stack in calling 'TIME_SYS_GetSysDateTime'.
'TIME_UTIL_GetTimeInQSecFracFormat' (auto size = 52) is finite, requires 128 bytes total stack in calling 'TIME_SYS_GetSysDateTime'.
'TIME_UTIL_GetTimeInSecondsFormat' (auto size = 32) is finite, requires 108 bytes total stack in calling 'TIME_SYS_GetSysDateTime'.
'TIME_UTIL_GetTimeInSysCombined' (auto size = 24) is finite, requires 100 bytes total stack in calling 'TIME_SYS_GetSysDateTime'.
'TIME_UTIL_GetYear' (auto size = 9) is finite, requires 22 bytes total stack in calling 'isLeapYear'.
'TIME_UTIL_OR_PM_Handler' (auto size = 28) is finite, requires 144 bytes total stack in calling 'TIME_UTIL_GetTimeInSecondsFormat'.
'TIME_UTIL_PrintQSecFracFormat' (auto size = 24) calls into a recursive loop, calls 'DBG_log'.
'TIME_UTIL_SecondsToDateStr' (auto size = 46) is finite, requires 86 bytes total stack in calling 'sprintf' (external).
'TIME_UTIL_SetTimeFromDateFormat' (auto size = 24) calls a non-deterministic function: 'TIME_SYS_SetSysDateTime'.
'TIME_UTIL_SetTimeFromSeconds' (auto size = 38) calls a non-deterministic function: 'TIME_SYS_SetSysDateTime'.
'TMR_AddTimer' (auto size = 18) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TMR_DeleteTimer' (auto size = 14) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TMR_GetMillisecondCntr' (auto size = 4) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TMR_HandlerInit' (auto size = 4) is finite, requires 84 bytes total stack in calling 'OS_MUTEX_Create'.
'TMR_HandlerTask' (auto size = 12) is non-deterministic, calls through a function pointer.
'TMR_ReadTimer' (auto size = 10) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TMR_ResetTimer' (auto size = 18) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TMR_StartTimer' (auto size = 14) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TMR_StopTimer' (auto size = 14) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'TMR_vApplicationTickHook' (auto size = 8) is non-deterministic, calls through a function pointer.
'Temperature_Get' (auto size = 4) calls a non-deterministic function: 'RADIO_Temperature_Get'.
'ThermalControlEnable_Set' (auto size = 1) calls a non-deterministic function: 'writeConfig'.
'ThermalProtectionEnable_Set' (auto size = 1) calls a non-deterministic function: 'writeConfig'.
'TimeReq_Create' (auto size = 16) calls into a recursive loop, calls 'ReqBuffer_Alloc'.
'TimeReq_Done' (auto size = 6) calls into a recursive loop, calls 'DBG_log'.
'TimeSet_BlockingTimer_CB' (auto size = 8) calls a non-deterministic function: 'OS_MSGQ_POST'.
'TimeSet_BlockingTimer_Create' (auto size = 36) calls a non-deterministic function: 'TMR_AddTimer'.
'TimeSet_BlockingTimer_Start' (auto size = 0) calls a non-deterministic function: 'TMR_ResetTimer'.
'TimeSet_Create' (auto size = 20) calls into a recursive loop, calls 'ReqBuffer_Alloc'.
'TimeSync_ManageAlarm' (auto size = 24) calls a non-deterministic function: 'TIME_SYS_AddPerAlarm'.
'TransactionTimeout_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'TxCallback' (auto size = 6) calls a non-deterministic function: 'EVL_LGSimTxDoneSignal'.
'TxChannels_Set' (auto size = 4) calls a non-deterministic function: 'writeConfig'.
'TxChannels_init' (auto size = 94) calls into a recursive loop, calls 'DBG_log'.
'TxLinkDelayTimeInc' (auto size = 4) calls a non-deterministic function: 'FIO_fwrite'.
'TxOutputPowerMax_Set' (auto size = 4) calls a non-deterministic function: 'writeConfig'.
'TxOutputPowerMin_Set' (auto size = 4) calls a non-deterministic function: 'writeConfig'.
'UART_RX_flush' (auto size = 6) is finite, requires 70 bytes total stack in calling 'UART_read'.
'UART_SetEcho' (auto size = 12) is finite, requires 72 bytes total stack in calling 'UART_ioctl'.
'UART_close' (auto size = 4) is finite, requires 44 bytes total stack in calling '_io_fclose' (external).
'UART_fgets' (auto size = 12) is finite, requires 52 bytes total stack in calling '_io_fgets' (external).
'UART_flush' (auto size = 4) is finite, requires 44 bytes total stack in calling '_io_fflush' (external).
'UART_getHandle' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'UART_gotChar' (auto size = 5) is finite, requires 45 bytes total stack in calling '_io_ioctl' (external).
'UART_init' (auto size = 12) is finite, requires 52 bytes total stack in calling '_io_fopen' (external).
'UART_ioctl' (auto size = 12) is finite, requires 52 bytes total stack in calling '_io_ioctl' (external).
'UART_isTxEmpty' (auto size = 5) is finite, requires 45 bytes total stack in calling '_io_ioctl' (external).
'UART_open' (auto size = 9) is finite, requires 49 bytes total stack in calling '_io_fopen' (external).
'UART_read' (auto size = 16) is finite, requires 56 bytes total stack in calling '_io_read' (external).
'UART_reset' (auto size = 12) is finite, requires 52 bytes total stack in calling '_io_fclose' (external).
'UART_write' (auto size = 16) is finite, requires 76 bytes total stack in calling 'UART_ioctl'.
'UNPACK_Buffer' (auto size = 16) is finite, requires 31 bytes total stack in calling 'Byte_Swap'.
'UNPACK_BufferArray' (auto size = 16) is finite, requires 76 bytes total stack in calling 'UNPACK_BufferArrayNoInit'.
'UNPACK_BufferArrayNoInit' (auto size = 13) is finite, requires 52 bytes total stack in calling 'UNPACK_Buffer'.
'UNPACK_addr' (auto size = 20) is finite, requires 65 bytes total stack in calling 'UNPACK_bits2_uint8'.
'UNPACK_bits2_ucArray' (auto size = 14) is finite, requires 42 bytes total stack in calling 'copy_bits'.
'UNPACK_bits2_uint16' (auto size = 12) is finite, requires 39 bytes total stack in calling 'unpack_bits'.
'UNPACK_bits2_uint32' (auto size = 16) is finite, requires 43 bytes total stack in calling 'unpack_bits'.
'UNPACK_bits2_uint64' (auto size = 24) is finite, requires 51 bytes total stack in calling 'unpack_bits'.
'UNPACK_bits2_uint8' (auto size = 10) is finite, requires 37 bytes total stack in calling 'unpack_bits'.
'UNPACK_inc' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'UNPACK_init' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'UpdateMode' (auto size = 5) calls into a recursive loop, calls 'SM_StartLayers'.
'VBATREG_init' (auto size = 0) is finite, requires 20 bytes total stack in calling 'memset'.
'VDEV_init' (auto size = 13) calls into a recursive loop, calls 'virginDeviceSetup'.
'VDEV_isNVEmpty' (auto size = 20) calls into a recursive loop, calls 'BM_Free'.
'VDEV_wasVirgin' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'VER_Init' (auto size = 26) calls a non-deterministic function: 'FIO_fwrite'.
'VER_getComDeviceType' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'VER_getFirmwareVersion' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'VER_getFirmwareVersionDT' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'VER_getHardwareVersion' (auto size = 30) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'VER_setHardwareVersion' (auto size = 9) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'ValidateGenI' (auto size = 20) is finite, requires 31 bytes total stack in calling 'RnCrc_Gen'.
'ValidateGenII' (auto size = 64) is finite, requires 139 bytes total stack in calling 'RSRepair'.
'VerboseMode_Set' (auto size = 1) calls a non-deterministic function: 'writeConfig'.
'WDOG_Disable' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'WDOG_Init' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'WDOG_Kick' (auto size = 0) is finite, requires 40 bytes total stack in calling '_int_disable' (external).
'_LocaleC_isalpha' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'_LocaleC_iscntrl' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'_LocaleC_islower' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'_LocaleC_ispunct' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'_LocaleC_isspace' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'_LocaleC_isupper' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'_LocaleC_tolower' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'_LocaleC_toupper' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'__iar_Dcomp' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'__iar_FDcomp' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'abs' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'aclara_rand' (auto size = 32) calls a non-deterministic function: 'ADC_Get_SC_Voltage'.
'aclara_randf' (auto size = 16) calls a non-deterministic function: 'aclara_rand'.
'aclara_randu' (auto size = 16) calls a non-deterministic function: 'aclara_rand'.
'aclara_srand' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'adc_calibrate' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'addAllDailyShiftChannels' (auto size = 128) calls into a recursive loop, calls 'DBG_log'.
'addDailyAlarm' (auto size = 24) calls a non-deterministic function: 'TIME_SYS_AddPerAlarm'.
'addLogPrefixToString' (auto size = 20) is finite, requires 136 bytes total stack in calling 'TIME_UTIL_GetTimeInDateFormat'.
'addMeterLoadProfileChannels' (auto size = 228) calls into a recursive loop, calls 'DBG_log'.
'addPacketIdTrackingTimeout' (auto size = 108) calls into a recursive loop, calls 'DBG_log'.
'addRxAssemblyTimer' (auto size = 108) calls into a recursive loop, calls 'DBG_log'.
'add_rssiLinkReading' (auto size = 48) is finite, requires 98 bytes total stack in calling 'PACK_uint8_2bits'.
'add_statsReading' (auto size = 380) calls into a recursive loop, calls 'NWK_GetRequest'.
'atof' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'atoh' (auto size = 8) is finite, requires 48 bytes total stack in calling '_io_sscanf' (external).
'atoi' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'atol' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'atoll' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'b_sign' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'bnk_close' (auto size = 8) is non-deterministic, calls through a function pointer.
'bnk_erase' (auto size = 20) is non-deterministic, calls through a function pointer.
'bnk_flush' (auto size = 8) is non-deterministic, calls through a function pointer.
'bnk_init' (auto size = 12) is non-deterministic, calls through a function pointer.
'bnk_ioctl' (auto size = 16) is non-deterministic, calls through a function pointer.
'bnk_open' (auto size = 12) is non-deterministic, calls through a function pointer.
'bnk_read' (auto size = 24) is non-deterministic, calls through a function pointer.
'bnk_restore' (auto size = 16) is non-deterministic, calls through a function pointer.
'bnk_setPowerMode' (auto size = 12) is non-deterministic, calls through a function pointer.
'bnk_timeSlice' (auto size = 8) is non-deterministic, calls through a function pointer.
'bnk_write' (auto size = 48) is non-deterministic, calls through a function pointer.
'brick' (auto size = 0) is finite, requires 48 bytes total stack in calling 'WDOG_Kick'.
'btowc' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'bufAlloc' (auto size = 37) is recursive, loop contains call to 'DBG_log'.
'buildASN1Signature' (auto size = 18) is finite, requires 38 bytes total stack in calling 'memcpy'.
'buildCert' (auto size = 46) is finite, requires 346 bytes total stack in calling 'getCertSerialNumber'.
'buildCurrentUomTable' (auto size = 9) calls into a recursive loop, calls 'DBG_log'.
'buildDeviceCert' (auto size = 230) is finite, requires 584 bytes total stack in calling 'buildCert'.
'buildSignerCert' (auto size = 166) is finite, requires 520 bytes total stack in calling 'buildCert'.
'busyCheck' (auto size = 60) calls a non-deterministic function: 'SPI_ReadPort'.
'calcCRC' (auto size = 556) is non-deterministic, calls through a function pointer.
'calcFileCrc' (auto size = 40) is non-deterministic, calls through a function pointer.
'clearEventLogs' (auto size = 24) calls into a recursive loop, calls 'BM_Free'.
'close' (auto size = 8) is non-deterministic, calls through a function pointer.
'close' (auto size = 8) is finite, requires 24 bytes total stack in calling 'SPI_ClosePort'.
'close' (auto size = 8) is non-deterministic, calls through a function pointer.
'close' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'close' (auto size = 4) is non-deterministic, calls through a function pointer.
'cmpfunc' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'computeAvgAndStddev' (auto size = 36) is finite, requires 76 bytes total stack in calling 'pow' (external).
'computeCertLength' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'copyNvData' (auto size = 540) is non-deterministic, calls through a function pointer.
'copyPart2Part' (auto size = 36) is non-deterministic, calls through a function pointer.
'copy_bits' (auto size = 20) is finite, requires 20 bytes total stack in calling 'no function'.
'cos' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'cosf' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'cosh' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'coshf' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'coshl' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'cosl' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'createLedTimer' (auto size = 36) calls a non-deterministic function: 'TMR_AddTimer'.
'createPemFromExtractedKey' (auto size = 14) is finite, requires 34 bytes total stack in calling 'memcpy'.
'data_frame_encode' (auto size = 12) is finite, requires 62 bytes total stack in calling 'PACK_uint8_2bits'.
'decryptBuffer' (auto size = 332) is finite, requires 372 bytes total stack in calling 'wc_AesSetKey' (external).
'decryptData' (auto size = 432) calls into a recursive loop, calls 'DBG_log'.
'decryptPatch' (auto size = 111670413) calls into a recursive loop, calls 'DFWA_setDerivedKey'.
'delay_10us' (auto size = 33) is finite, requires 73 bytes total stack in calling '_time_get_ticks' (external).
'delay_ms' (auto size = 4) is finite, requires 85 bytes total stack in calling 'delay_10us'.
'deleteTimerNode' (auto size = 24) is finite, requires 24 bytes total stack in calling 'no function'.
'demandResetLogEvent' (auto size = 120) calls into a recursive loop, calls 'DEMAND_GetDmdValue'.
'dfwErrorLookUp' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'disableWrites' (auto size = 2) calls a non-deterministic function: 'SPI_MutexUnlock'.
'dlPcktWriteToNv' (auto size = 1260) is non-deterministic, calls through a function pointer.
'doMeterReadings' (auto size = 148) calls into a recursive loop, calls 'DBG_log'.
'doPatch' (auto size = 244) calls into a recursive loop, calls 'DBG_log'.
'dtlsUART_isr' (auto size = 22) is non-deterministic, calls through a function pointer.
'dvr_ioctl' (auto size = 20) is finite, requires 20 bytes total stack in calling 'no function'.
'dvr_ioctl' (auto size = 20) is finite, requires 29 bytes total stack in calling 'SPI_RtosEnable'.
'dvr_open' (auto size = 18) calls a non-deterministic function: 'dvr_shm_unlock'.
'dvr_open' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'dvr_read' (auto size = 24) calls a non-deterministic function: 'dvr_shm_unlock'.
'dvr_read' (auto size = 20) calls a non-deterministic function: 'dvr_shm_unlock'.
'dvr_shm_init' (auto size = 4) is finite, requires 84 bytes total stack in calling 'OS_MUTEX_Create'.
'dvr_shm_lock' (auto size = 0) calls a non-deterministic function: 'OS_MUTEX_LOCK'.
'dvr_shm_unlock' (auto size = 0) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'dvr_write' (auto size = 40) calls a non-deterministic function: 'dvr_shm_unlock'.
'dvr_write' (auto size = 48) calls a non-deterministic function: 'dvr_shm_unlock'.
'ecc108_close' (auto size = 0) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'ecc108_isOpen' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'ecc108_open' (auto size = 13) calls a non-deterministic function: 'ecc108c_wakeup'.
'ecc108c_calculate_crc' (auto size = 12) calls a non-deterministic function: 'CRC_ecc108_crc'.
'ecc108c_check_crc' (auto size = 7) calls a non-deterministic function: 'ecc108c_calculate_crc'.
'ecc108c_resync' (auto size = 9) calls a non-deterministic function: 'ecc108c_wakeup'.
'ecc108c_send_and_receive' (auto size = 32) calls a non-deterministic function: 'ecc108c_check_crc'.
'ecc108c_wakeup' (auto size = 8) calls a non-deterministic function: 'ecc108c_calculate_crc'.
'ecc108e_DeriveFWDecryptionKey' (auto size = 198) calls into a recursive loop, calls 'ecc108e_KeyAuthorization'.
'ecc108e_EncryptedKeyRead' (auto size = 94) calls into a recursive loop, calls 'GenDigTempKey'.
'ecc108e_EncryptedKeyWrite' (auto size = 122) calls into a recursive loop, calls 'BM_Free'.
'ecc108e_GetDeviceCert' (auto size = 65) calls into a recursive loop, calls 'BM_Free'.
'ecc108e_GetSerialNumber' (auto size = 43) calls a non-deterministic function: 'ecc108m_execute'.
'ecc108e_InitHostAuthKey' (auto size = 1) calls into a recursive loop, calls 'DBG_log'.
'ecc108e_InitKeys' (auto size = 57) calls into a recursive loop, calls 'keyIsBlank'.
'ecc108e_KeyAuthorization' (auto size = 294) calls into a recursive loop, calls 'NonceTempKey'.
'ecc108e_Random' (auto size = 41) calls a non-deterministic function: 'random'.
'ecc108e_ReadKey' (auto size = 18) calls into a recursive loop, calls 'BM_Free'.
'ecc108e_SecureRandom' (auto size = 98) calls into a recursive loop, calls 'GenDigTempKey'.
'ecc108e_SeedRandom' (auto size = 6) is finite, requires 6 bytes total stack in calling 'no function'.
'ecc108e_SelfTest' (auto size = 2) calls into a recursive loop, calls 'ecc108e_verifyDevicePKI'.
'ecc108e_Sign' (auto size = 14) calls into a recursive loop, calls 'ecc108e_SignMessage'.
'ecc108e_SignMessage' (auto size = 276) calls into a recursive loop, calls 'ecc108e_KeyAuthorization'.
'ecc108e_UpdateKeys' (auto size = 92) is non-deterministic, calls through a function pointer.
'ecc108e_Verify' (auto size = 54) calls into a recursive loop, calls 'BM_Free'.
'ecc108e_WriteKey' (auto size = 18) calls into a recursive loop, calls 'BM_Free'.
'ecc108e_bfc' (auto size = 130) calls a non-deterministic function: 'ecc108_close'.
'ecc108e_read_config_zone' (auto size = 51) calls a non-deterministic function: 'ecc108m_execute'.
'ecc108e_read_configuration' (auto size = 48) calls a non-deterministic function: 'ecc108m_execute'.
'ecc108e_read_key' (auto size = 55) calls a non-deterministic function: 'ecc108m_execute'.
'ecc108e_read_mac' (auto size = 50) calls a non-deterministic function: 'ecc108m_execute'.
'ecc108e_sleep' (auto size = 0) is finite, requires 96 bytes total stack in calling 'ecc108p_sleep'.
'ecc108e_verifyDevicePKI' (auto size = 93) calls into a recursive loop, calls 'BM_Free'.
'ecc108e_verify_config' (auto size = 129) calls a non-deterministic function: 'ecc108e_read_config_zone'.
'ecc108e_write_key' (auto size = 94) calls a non-deterministic function: 'ecc108m_execute'.
'ecc108m_check_parameters' (auto size = 44) is finite, requires 44 bytes total stack in calling 'no function'.
'ecc108m_execute' (auto size = 54) calls a non-deterministic function: 'ecc108c_send_and_receive'.
'ecc108p_flush' (auto size = 0) is finite, requires 40 bytes total stack in calling '_io_fflush' (external).
'ecc108p_i2c_send' (auto size = 8) is finite, requires 80 bytes total stack in calling 'i2c_send'.
'ecc108p_idle' (auto size = 0) is finite, requires 88 bytes total stack in calling 'ecc108p_i2c_send'.
'ecc108p_init' (auto size = 0) is finite, requires 8 bytes total stack in calling 'i2c_enable'.
'ecc108p_receive_response' (auto size = 8) is finite, requires 85 bytes total stack in calling 'i2c_receive_response'.
'ecc108p_reset_io' (auto size = 0) is finite, requires 88 bytes total stack in calling 'ecc108p_i2c_send'.
'ecc108p_resync' (auto size = 10) is finite, requires 106 bytes total stack in calling 'ecc108p_reset_io'.
'ecc108p_send_command' (auto size = 8) is finite, requires 96 bytes total stack in calling 'ecc108p_i2c_send'.
'ecc108p_send_slave_address' (auto size = 3) is finite, requires 53 bytes total stack in calling 'i2c_send_start'.
'ecc108p_set_device_id' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'ecc108p_sleep' (auto size = 0) is finite, requires 88 bytes total stack in calling 'ecc108p_i2c_send'.
'ecc108p_wakeup' (auto size = 0) is finite, requires 89 bytes total stack in calling 'i2c_wakeup'.
'enableWrites' (auto size = 2) calls a non-deterministic function: 'SPI_MutexUnlock'.
'encode_rs' (auto size = 32) is finite, requires 32 bytes total stack in calling 'no function'.
'encryptBuffer' (auto size = 332) is finite, requires 372 bytes total stack in calling 'wc_AesSetKey' (external).
'eng_res_BuildStatsPayload' (auto size = 20) calls into a recursive loop, calls 'BM_Free'.
'eng_res_Build_OB_LinkPayload' (auto size = 20) calls into a recursive loop, calls 'BM_Free'.
'eng_res_MsgHandler' (auto size = 56) calls into a recursive loop, calls 'BM_Free'.
'eras_dec_rs' (auto size = 936) is finite, requires 936 bytes total stack in calling 'no function'.
'erase' (auto size = 20) is non-deterministic, calls through a function pointer.
'erase' (auto size = 28) is non-deterministic, calls through a function pointer.
'erase' (auto size = 20) is non-deterministic, calls through a function pointer.
'erase' (auto size = 40) calls a non-deterministic function: 'dvr_shm_unlock'.
'erase' (auto size = 32) calls a non-deterministic function: 'dvr_shm_unlock'.
'erasePatchSpace' (auto size = 24) is non-deterministic, calls through a function pointer.
'evlAddAlarm' (auto size = 41) is finite, requires 84 bytes total stack in calling 'PACK_Buffer'.
'evlInitMsg' (auto size = 4) calls into a recursive loop, calls 'HEEP_initHeader'.
'exeFlashCmdSeq' (auto size = 8) is finite, requires 61 bytes total stack in calling 'exeFlashCmdSeqSameBank'.
'exeFlashCmdSeqSameBank' (auto size = 5) is finite, requires 45 bytes total stack in calling '__get_PRIMASK' (external).
'executeAlarm' (auto size = 60) calls into a recursive loop, calls 'BM_Alloc'.
'executeMacroCmds' (auto size = 552) is non-deterministic, calls through a function pointer.
'expt_frm_dump' (auto size = 216) is finite, requires 256 bytes total stack in calling '_io_get_handle' (external).
'findCurrentBank' (auto size = 25) is non-deterministic, calls through a function pointer.
'findFirstEntry' (auto size = 14) is finite, requires 14 bytes total stack in calling 'no function'.
'findLatestEntry' (auto size = 14) is finite, requires 14 bytes total stack in calling 'no function'.
'findSYNC' (auto size = 44) is finite, requires 44 bytes total stack in calling 'no function'.
'fir_filt_circ_buff' (auto size = 28) is finite, requires 28 bytes total stack in calling 'no function'.
'fir_filt_circ_buff_init' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'flashErase' (auto size = 12) is finite, requires 81 bytes total stack in calling 'exeFlashCmdSeq'.
'flashWrite' (auto size = 16) is finite, requires 85 bytes total stack in calling 'exeFlashCmdSeq'.
'flush' (auto size = 12) is non-deterministic, calls through a function pointer.
'flush' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'flush' (auto size = 9) is non-deterministic, calls through a function pointer.
'flush' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'flush' (auto size = 8) is non-deterministic, calls through a function pointer.
'flushPartitions_CB' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'generateMD5' (auto size = 12) is finite, requires 52 bytes total stack in calling 'wc_Md5Hash' (external).
'getBusClock' (auto size = 0) is finite, requires 40 bytes total stack in calling '_bsp_get_clock_configuration' (external).
'getCertSerialNumber' (auto size = 116) is finite, requires 292 bytes total stack in calling 'sha256'.
'getConfigParams' (auto size = 10) is finite, requires 10 bytes total stack in calling 'no function'.
'getCoreClock' (auto size = 0) is finite, requires 40 bytes total stack in calling '_bsp_get_clock_configuration' (external).
'getDSTDate' (auto size = 28) is finite, requires 73 bytes total stack in calling 'TIME_UTIL_ConvertDateFormatToSysFormat'.
'getDayOfWeek' (auto size = 9) is finite, requires 9 bytes total stack in calling 'no function'.
'getDemandReading' (auto size = 97) calls into a recursive loop, calls 'BM_Alloc'.
'getDeviceCert' (auto size = 4) is finite, requires 24 bytes total stack in calling 'memset'.
'getDeviceType' (auto size = 20) is finite, requires 60 bytes total stack in calling 'strncpy' (external).
'getElementData' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'getElementData' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'getFileName' (auto size = 2) is finite, requires 2 bytes total stack in calling 'no function'.
'getKeyData' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'getKeyID' (auto size = 73) is finite, requires 237 bytes total stack in calling 'sha1'.
'getMTLSstats' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'getMinSize' (auto size = 6) is finite, requires 6 bytes total stack in calling 'no function'.
'getMtlsLastSignedTimestamp' (auto size = 0) is finite, requires 22 bytes total stack in calling 'findLatestEntry'.
'getNextCalAlarmDate' (auto size = 24) is finite, requires 80 bytes total stack in calling 'TIME_SYS_IsTimeValid'.
'getPatchHeader' (auto size = 8) is non-deterministic, calls through a function pointer.
'getSignerCert' (auto size = 4) is finite, requires 24 bytes total stack in calling 'memset'.
'getSummationReading' (auto size = 102) calls into a recursive loop, calls 'DBG_log'.
'getSysTime' (auto size = 8) is finite, requires 48 bytes total stack in calling '__get_PRIMASK' (external).
'getThreeByteAddr' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'getUnusedAlarm' (auto size = 2) is finite, requires 2 bytes total stack in calling 'no function'.
'getUomPowerOfTen' (auto size = 6) is finite, requires 6 bytes total stack in calling 'no function'.
'getValuein_dWatts' (auto size = 24) is finite, requires 24 bytes total stack in calling 'no function'.
'gresample' (auto size = 40) is finite, requires 40 bytes total stack in calling 'no function'.
'gresample_px_sinc_table_init' (auto size = 4) is finite, requires 16 bytes total stack in calling 'sinf'.
'htonll' (auto size = 16) is finite, requires 56 bytes total stack in calling '__REV' (external).
'i2c_enable' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'i2c_receive_byte' (auto size = 12) is finite, requires 52 bytes total stack in calling '_io_ioctl' (external).
'i2c_receive_bytes' (auto size = 10) is finite, requires 50 bytes total stack in calling '_io_ioctl' (external).
'i2c_receive_response' (auto size = 21) is finite, requires 69 bytes total stack in calling 'i2c_send_stop'.
'i2c_send' (auto size = 16) is finite, requires 64 bytes total stack in calling 'ecc108p_flush'.
'i2c_send_bytes' (auto size = 10) is finite, requires 50 bytes total stack in calling '_io_write' (external).
'i2c_send_start' (auto size = 2) is finite, requires 42 bytes total stack in calling '_io_read' (external).
'i2c_send_stop' (auto size = 0) is finite, requires 40 bytes total stack in calling '_io_ioctl' (external).
'i2c_wakeup' (auto size = 0) is finite, requires 81 bytes total stack in calling 'delay_10us'.
'incCountLimit' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'incVar' (auto size = 5) is finite, requires 5 bytes total stack in calling 'no function'.
'incVarWithRollOver' (auto size = 5) is finite, requires 5 bytes total stack in calling 'no function'.
'init' (auto size = 8) is non-deterministic, calls through a function pointer.
'init' (auto size = 16) is non-deterministic, calls through a function pointer.
'init' (auto size = 8) is non-deterministic, calls through a function pointer.
'init' (auto size = 8) is finite, requires 104 bytes total stack in calling 'SPI_initPort'.
'init' (auto size = 12) is finite, requires 104 bytes total stack in calling 'dvr_shm_init'.
'initSimLG' (auto size = 4) calls a non-deterministic function: 'PWRCFG_get_SimulateLastGaspTraffic'.
'initiateSimLGTx' (auto size = 137) calls into a recursive loop, calls 'DBG_log'.
'insertTimerNode' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'int_handler' (auto size = 12) is non-deterministic, calls through a function pointer.
'ioctl' (auto size = 16) is non-deterministic, calls through a function pointer.
'ioctl' (auto size = 12) is non-deterministic, calls through a function pointer.
'ioctl' (auto size = 16) is non-deterministic, calls through a function pointer.
'ipHEContext_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'ipRoutingEntryExpirationThreshold_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'ipRoutingMaxPacketCount_Set' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'isDownloadTimeExpired' (auto size = 136) calls a non-deterministic function: 'DFWA_getFileVars'.
'isFirmwareVersionSupported' (auto size = 85) calls into a recursive loop, calls 'INTF_CIM_CMD_getMeterReading'.
'isLeapYear' (auto size = 5) is finite, requires 5 bytes total stack in calling 'no function'.
'isMyMac' (auto size = 5) is finite, requires 45 bytes total stack in calling 'memcmp' (external).
'isTimeForPeriodicAlarm' (auto size = 32) calls a non-deterministic function: 'DST_GetLocalOffset'.
'isTimerActive' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'isValidAnsiTableOID' (auto size = 9) is finite, requires 49 bytes total stack in calling 'INTF_CIM_CMD_getConfigMfr'.
'isValidEdModel' (auto size = 80) calls into a recursive loop, calls 'INTF_CIM_CMD_getMeterReading'.
'isValidPatchSize' (auto size = 10) calls into a recursive loop, calls 'DBG_log'.
'isalnum' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'isalpha' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'isblank' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'iscntrl' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'isdigit' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'isgraph' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'islower' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'isprint' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'ispunct' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'isr_brownOut' (auto size = 0) calls a non-deterministic function: 'OS_SEM_POST'.
'isr_busy' (auto size = 0) calls a non-deterministic function: 'OS_SEM_POST'.
'isr_tmr' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'isspace' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'isupper' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'isxdigit' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'keyIsBlank' (auto size = 26) calls into a recursive loop, calls 'BM_Free'.
'labs' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'ledVisual_CB' (auto size = 8) calls into a recursive loop, calls 'HMC_DISP_UpdateDisplayBuffer'.
'llabs' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'localErase' (auto size = 25) calls a non-deterministic function: 'SPI_MutexUnlock'.
'localRead' (auto size = 25) calls a non-deterministic function: 'SPI_MutexUnlock'.
'localWrite' (auto size = 36) calls a non-deterministic function: 'localWriteBytesToSPI'.
'localWriteBytesToSPI' (auto size = 48) calls a non-deterministic function: 'disableWrites'.
'log' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'log10' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'log10f' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'log10l' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'log2' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'log2f' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'log2l' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'logf' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'logl' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'mac_StartStop' (auto size = 24) calls into a recursive loop, calls 'BM_Free'.
'mac_confirm_cb' (auto size = 12) calls into a recursive loop, calls 'BM_AllocStack'.
'memchr' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'memcpy' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'memmove' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'memset' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'mergeSignature' (auto size = 20) is finite, requires 66 bytes total stack in calling 'buildASN1Signature'.
'meterDemandCfgToReadingType' (auto size = 10) is finite, requires 10 bytes total stack in calling 'no function'.
'meter_trouble_isr_busy' (auto size = 0) calls into a recursive loop, calls 'HMC_DIAGS_DoDiags'.
'mfgpBufferInit' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'mfgpCreateBuffer' (auto size = 8) calls into a recursive loop, calls 'BM_AllocStack'.
'mfgpGrowBuffer' (auto size = 12) calls into a recursive loop, calls 'BM_Free'.
'mfgpReadByte' (auto size = 12) calls into a recursive loop, calls 'BM_Alloc'.
'mfgpSlipAddCharacter' (auto size = 12) calls into a recursive loop, calls 'mfgpGrowBuffer'.
'mfgp_QuietModeTimeout_' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'mfgp_rfTestModeTimeout_' (auto size = 8) calls into a recursive loop, calls 'MFGP_EncryptBuffer'.
'mtls_CheckReplay' (auto size = 23) calls into a recursive loop, calls 'DBG_log'.
'mtls_UpdateReplayBuffer' (auto size = 17) is finite, requires 39 bytes total stack in calling 'findFirstEntry'.
'mtls_ValidateHeader' (auto size = 53) calls into a recursive loop, calls 'DBG_log'.
'mtls_VerifySignature' (auto size = 16) calls into a recursive loop, calls 'DBG_log'.
'myStrCat' (auto size = 32) is finite, requires 72 bytes total stack in calling 'strcpy' (external).
'nan' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'nanf' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'nanl' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'nextafter' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'nextafterf' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'nextafterl' (auto size = 32) is finite, requires 32 bytes total stack in calling 'no function'.
'noiseFloor_CB' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'normalizeDemand' (auto size = 20) is finite, requires 38 bytes total stack in calling 'getConfigParams'.
'ntohll' (auto size = 16) is finite, requires 56 bytes total stack in calling '__REV' (external).
'nwk_StartStop' (auto size = 24) calls into a recursive loop, calls 'BM_Free'.
'nwk_confirm_cb' (auto size = 12) calls into a recursive loop, calls 'BM_AllocStack'.
'obsoleteAlarmIndex' (auto size = 52) calls into a recursive loop, calls 'EventLogRead'.
'open' (auto size = 24) is finite, requires 24 bytes total stack in calling 'no function'.
'open' (auto size = 16) is non-deterministic, calls through a function pointer.
'open' (auto size = 12) is non-deterministic, calls through a function pointer.
'packDfwFileSectionStatusParmeters' (auto size = 41) is finite, requires 102 bytes total stack in calling 'packReading'.
'packMissingPackets' (auto size = 64) is finite, requires 125 bytes total stack in calling 'packReading'.
'packReading' (auto size = 10) is finite, requires 53 bytes total stack in calling 'PACK_Buffer'.
'pack_bits' (auto size = 20) is finite, requires 20 bytes total stack in calling 'no function'.
'parsePartialCert' (auto size = 8) is finite, requires 28 bytes total stack in calling 'memcpy'.
'phase2freq_wi_unwrap' (auto size = 20) is finite, requires 20 bytes total stack in calling 'no function'.
'phase2freq_wi_unwrap_init' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'phy_StartStop' (auto size = 18) calls into a recursive loop, calls 'BM_Free'.
'phy_confirm_cb' (auto size = 16) calls into a recursive loop, calls 'BM_AllocStack'.
'phy_confirm_cb' (auto size = 16) calls into a recursive loop, calls 'BM_AllocStack'.
'portA_int_handler' (auto size = 4) calls a non-deterministic function: 'int_handler'.
'portB_int_handler' (auto size = 4) calls a non-deterministic function: 'int_handler'.
'portC_int_handler' (auto size = 4) calls a non-deterministic function: 'int_handler'.
'portD_int_handler' (auto size = 4) calls a non-deterministic function: 'int_handler'.
'portE_int_handler' (auto size = 4) calls a non-deterministic function: 'int_handler'.
'powerOnStateTimerExpired' (auto size = 8) calls a non-deterministic function: 'OS_MSGQ_POST'.
'powerStable' (auto size = 8) is finite, requires 37 bytes total stack in calling 'LptmrStart'.
'preambleDetector' (auto size = 28) is finite, requires 5864 bytes total stack in calling 'processDerotatedSamples'.
'preambleDetector_init' (auto size = 0) is finite, requires 20 bytes total stack in calling 'memset'.
'preambleDetector_initialize' (auto size = 4) is finite, requires 32 bytes total stack in calling 'preambleDetector_init'.
'preamble_detect' (auto size = 50) is finite, requires 90 bytes total stack in calling 'fabsf' (external).
'preamble_detect_init' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'printCert' (auto size = 26) calls into a recursive loop, calls 'BM_Free'.
'printErr' (auto size = 0) calls into a recursive loop, calls 'DBG_log'.
'printHex' (auto size = 24) is finite, requires 64 bytes total stack in calling '_io_fopen' (external).
'printMeterQty' (auto size = 65) calls into a recursive loop, calls 'DBG_log'.
'print_header' (auto size = 152) calls into a recursive loop, calls 'DBG_log'.
'processDemandEntry' (auto size = 55) calls into a recursive loop, calls 'DBG_log'.
'processDerotatedSPDSamples' (auto size = 832) is finite, requires 872 bytes total stack in calling 'fabsf' (external).
'processDerotatedSamples' (auto size = 5788) is finite, requires 5828 bytes total stack in calling 'fabsf' (external).
'processOptoBuf' (auto size = 12) calls a non-deterministic function: 'OptoTimer_Init'.
'processRXRadioInt' (auto size = 40) calls into a recursive loop, calls 'DBG_log'.
'processRadioInt' (auto size = 27) calls into a recursive loop, calls 'DBG_log'.
'processSysTick' (auto size = 40) calls into a recursive loop, calls 'executeAlarm'.
'pwrMode' (auto size = 16) is non-deterministic, calls through a function pointer.
'pwrMode' (auto size = 12) is finite, requires 24 bytes total stack in calling 'SPI_pwrMode'.
'radio_comm_ClearCTS' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'radio_comm_GetResp' (auto size = 13) calls a non-deterministic function: 'RADIO_Event_Set'.
'radio_comm_PollCTS' (auto size = 29) calls a non-deterministic function: 'radio_comm_GetResp'.
'radio_comm_ReadData' (auto size = 9) calls a non-deterministic function: 'RADIO_UnLock_Mutex'.
'radio_comm_SendCmd' (auto size = 10) calls a non-deterministic function: 'RADIO_UnLock_Mutex'.
'radio_comm_SendCmdGetResp' (auto size = 22) calls a non-deterministic function: 'RADIO_UnLock_Mutex'.
'radio_comm_SendCmd_timed' (auto size = 14) calls a non-deterministic function: 'RADIO_UnLock_Mutex'.
'radio_comm_WriteData' (auto size = 9) calls a non-deterministic function: 'RADIO_UnLock_Mutex'.
'radio_hal_AssertShutdown' (auto size = 1) is finite, requires 11 bytes total stack in calling 'RadioSDN'.
'radio_hal_ClearNsel' (auto size = 1) is finite, requires 1 bytes total stack in calling 'no function'.
'radio_hal_DeassertShutdown' (auto size = 1) is finite, requires 11 bytes total stack in calling 'RadioSDN'.
'radio_hal_NirqLevel' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'radio_hal_RadioImmediateSDN' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'radio_hal_SetNsel' (auto size = 1) is finite, requires 17 bytes total stack in calling 'SPI_ClosePort'.
'radio_hal_SpiInit' (auto size = 1) is finite, requires 98 bytes total stack in calling 'SPI_OpenPort'.
'radio_hal_SpiReadByte' (auto size = 2) calls a non-deterministic function: 'SPI_ReadPort'.
'radio_hal_SpiReadData' (auto size = 8) calls a non-deterministic function: 'SPI_ReadPort'.
'radio_hal_SpiWriteByte' (auto size = 2) calls a non-deterministic function: 'SPI_WritePort'.
'radio_hal_SpiWriteData' (auto size = 8) calls a non-deterministic function: 'SPI_WritePort'.
'random' (auto size = 58) calls a non-deterministic function: 'ecc108m_execute'.
'read' (auto size = 24) is non-deterministic, calls through a function pointer.
'read' (auto size = 20) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'read' (auto size = 33) is non-deterministic, calls through a function pointer.
'readWriteBuffer' (auto size = 28) is non-deterministic, calls through a function pointer.
'register_gpio_file' (auto size = 16) is finite, requires 56 bytes total stack in calling 'lwgpio_int_get_vector' (external).
'remainder' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'remainderf' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'remainderl' (auto size = 32) is finite, requires 32 bytes total stack in calling 'no function'.
'resetSimLGCsmaParameters' (auto size = 6) calls into a recursive loop, calls 'MAC_SetRequest'.
'resetTmrCallBack_ISR' (auto size = 8) calls a non-deterministic function: 'OS_MSGQ_POST'.
'restore' (auto size = 16) is non-deterministic, calls through a function pointer.
'restore' (auto size = 16) is non-deterministic, calls through a function pointer.
'restore' (auto size = 16) is non-deterministic, calls through a function pointer.
'restore' (auto size = 16) is non-deterministic, calls through a function pointer.
'restore' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'scaleAverage' (auto size = 10) is finite, requires 10 bytes total stack in calling 'no function'.
'scaleStddev' (auto size = 8) is finite, requires 24 bytes total stack in calling 'log10'.
'searchCumDemands' (auto size = 21) is finite, requires 78 bytes total stack in calling 'searchUomLookupEntry'.
'searchDataBlock' (auto size = 25) is finite, requires 25 bytes total stack in calling 'no function'.
'searchDirectRead' (auto size = 60) calls into a recursive loop, calls 'INTF_CIM_CMD_ansiRead'.
'searchDirectReadPowerOfTen' (auto size = 52) is finite, requires 144 bytes total stack in calling 'HMC_MTRINFO_searchDirectRead'.
'searchHmcUom' (auto size = 56) calls into a recursive loop, calls 'getDemandReading'.
'searchHmcUomPowerOfTen' (auto size = 56) calls a non-deterministic function: 'HMC_MTRINFO_searchUom'.
'searchMaxDemands' (auto size = 21) is finite, requires 78 bytes total stack in calling 'searchUomLookupEntry'.
'searchOddballDirectRead' (auto size = 16) is non-deterministic, calls through a function pointer.
'searchSummations' (auto size = 21) is finite, requires 78 bytes total stack in calling 'searchUomLookupEntry'.
'searchUomLookupEntry' (auto size = 16) is finite, requires 49 bytes total stack in calling 'searchDataBlock'.
'setBusyTimer' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'setDfwToIdle' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'setFlashAddr' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'setFlashData' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'setPA' (auto size = 4) is finite, requires 44 bytes total stack in calling '_time_get_elapsed_ticks' (external).
'setPowerMode' (auto size = 12) is non-deterministic, calls through a function pointer.
'setPowerMode' (auto size = 12) is non-deterministic, calls through a function pointer.
'setPowerMode' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'setSchDmdReset' (auto size = 80) calls into a recursive loop, calls 'DBG_log'.
'setSimLGDurationAlarm' (auto size = 60) calls into a recursive loop, calls 'DBG_log'.
'setSimLGPowerOnStateTimer' (auto size = 40) calls into a recursive loop, calls 'DBG_log'.
'setSimLGStartAlarm' (auto size = 48) calls into a recursive loop, calls 'DBG_log'.
'setSysTime' (auto size = 8) is finite, requires 48 bytes total stack in calling '__get_PRIMASK' (external).
'setup_ADC0' (auto size = 24) is finite, requires 64 bytes total stack in calling '_bsp_get_adc_base_address' (external).
'sha1' (auto size = 116) is finite, requires 156 bytes total stack in calling 'wc_InitSha' (external).
'sha256' (auto size = 128) is finite, requires 168 bytes total stack in calling 'wc_InitSha256' (external).
'si446x_change_state' (auto size = 18) calls a non-deterministic function: 'radio_comm_SendCmd'.
'si446x_configuration_init' (auto size = 64) calls a non-deterministic function: 'si446x_get_int_status'.
'si446x_fifo_info' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_fifo_info_fast_read' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_fifo_info_fast_reset' (auto size = 18) calls a non-deterministic function: 'radio_comm_SendCmd'.
'si446x_frr_a_read' (auto size = 24) calls a non-deterministic function: 'radio_comm_ReadData'.
'si446x_frr_b_read' (auto size = 24) calls a non-deterministic function: 'radio_comm_ReadData'.
'si446x_frr_c_read' (auto size = 24) calls a non-deterministic function: 'radio_comm_ReadData'.
'si446x_frr_d_read' (auto size = 24) calls a non-deterministic function: 'radio_comm_ReadData'.
'si446x_func_info' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_get_adc_reading' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_get_chip_status' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_get_chip_status_fast_clear' (auto size = 17) calls a non-deterministic function: 'radio_comm_SendCmd'.
'si446x_get_chip_status_fast_clear_read' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_get_int_status' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_get_int_status_fast_clear' (auto size = 17) calls a non-deterministic function: 'radio_comm_SendCmd'.
'si446x_get_int_status_fast_clear_read' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_get_modem_status' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_get_modem_status_fast_clear' (auto size = 17) calls a non-deterministic function: 'radio_comm_SendCmd'.
'si446x_get_modem_status_fast_clear_read' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_get_packet_info' (auto size = 28) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_get_ph_status' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_get_ph_status_fast_clear' (auto size = 17) calls a non-deterministic function: 'radio_comm_SendCmd'.
'si446x_get_ph_status_fast_clear_read' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_get_property' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_gpio_pin_cfg' (auto size = 28) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_gpio_pin_cfg_fast' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_ircal' (auto size = 21) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_ircal_manual' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_nop' (auto size = 17) calls a non-deterministic function: 'radio_comm_SendCmd'.
'si446x_part_info' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_power_up' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmd'.
'si446x_read_rx_fifo' (auto size = 8) calls a non-deterministic function: 'radio_comm_ReadData'.
'si446x_request_device_state' (auto size = 24) calls a non-deterministic function: 'radio_comm_SendCmdGetResp'.
'si446x_reset' (auto size = 1) is finite, requires 53 bytes total stack in calling 'OS_TASK_Sleep'.
'si446x_rx_hop' (auto size = 23) calls a non-deterministic function: 'radio_comm_SendCmd'.
'si446x_set_property' (auto size = 25) calls a non-deterministic function: 'radio_comm_SendCmd'.
'si446x_start_rx' (auto size = 25) calls a non-deterministic function: 'radio_comm_SendCmd'.
'si446x_start_rx_fast' (auto size = 17) calls a non-deterministic function: 'radio_comm_SendCmd'.
'si446x_start_tx' (auto size = 28) calls a non-deterministic function: 'radio_comm_SendCmd_timed'.
'si446x_start_tx_fast' (auto size = 17) calls a non-deterministic function: 'radio_comm_SendCmd'.
'si446x_tx_hop' (auto size = 25) calls a non-deterministic function: 'radio_comm_SendCmd'.
'si446x_write_tx_fifo' (auto size = 8) calls a non-deterministic function: 'radio_comm_WriteData'.
'sin' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'sinf' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'sinh' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'sinhf' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'sinhl' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'sinl' (auto size = 16) is finite, requires 16 bytes total stack in calling 'no function'.
'size' (auto size = 24) is finite, requires 24 bytes total stack in calling 'no function'.
'sleepDeep' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'sleepIdle' (auto size = 0) is finite, requires 0 bytes total stack in calling 'no function'.
'stack_Check' (auto size = 32) is finite, requires 112 bytes total stack in calling 'myStrCat'.
'stack_check_init' (auto size = 20) is finite, requires 60 bytes total stack in calling '_io_printf' (external).
'startDmdResetLockOutTmr' (auto size = 32) calls into a recursive loop, calls 'DBG_log'.
'startOneShotTimerAlarm' (auto size = 64) calls into a recursive loop, calls 'DBG_log'.
'startTimer' (auto size = 4) calls a non-deterministic function: 'TMR_ResetTimer'.
'stats_add' (auto size = 20) is finite, requires 136 bytes total stack in calling 'TIME_UTIL_GetTimeInSecondsFormat'.
'stats_dump' (auto size = 4) calls into a recursive loop, calls 'PHY_RssiHistory_Print'.
'stats_find' (auto size = 12) is finite, requires 52 bytes total stack in calling 'memcmp' (external).
'stats_print' (auto size = 40) calls into a recursive loop, calls 'DBG_log'.
'stats_update' (auto size = 24) calls a non-deterministic function: 'FIO_fwrite'.
'strchr' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'strerror' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'strpbrk' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'strrchr' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'strstr' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'strtod' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'strtof' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'strtol' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'strtold' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'strtoll' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'strtoul' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'strtoull' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'task_exception_handler' (auto size = 12) is finite, requires 276 bytes total stack in calling 'expt_frm_dump'.
'tickSystemClock' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'timeSlice' (auto size = 8) is non-deterministic, calls through a function pointer.
'timeSlice' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'timeSlice' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'timeSlice' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'timerDiversityTimerExpired' (auto size = 8) calls a non-deterministic function: 'OS_MSGQ_POST'.
'tolower' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'toupper' (auto size = 4) is finite, requires 4 bytes total stack in calling 'no function'.
'u16_counter_inc' (auto size = 6) is finite, requires 6 bytes total stack in calling 'no function'.
'u16_counter_inc' (auto size = 6) is finite, requires 6 bytes total stack in calling 'no function'.
'u16_counter_inc' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'u16_to_network' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'u32_counter_inc' (auto size = 6) is finite, requires 6 bytes total stack in calling 'no function'.
'u32_counter_inc' (auto size = 6) is finite, requires 6 bytes total stack in calling 'no function'.
'u32_counter_inc' (auto size = 10) is finite, requires 10 bytes total stack in calling 'no function'.
'u32_to_network' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'u8_to_network' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'unpack_bits' (auto size = 19) is finite, requires 19 bytes total stack in calling 'no function'.
'unscaleAverage' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'unscaleStddev' (auto size = 1) is finite, requires 41 bytes total stack in calling 'pow' (external).
'updateBootloader' (auto size = 560) calls into a recursive loop, calls 'verifyCrc'.
'updateTCXO' (auto size = 32) calls a non-deterministic function: 'si446x_set_property'.
'utoa' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'vRadio_Init' (auto size = 53) calls into a recursive loop, calls 'DBG_log'.
'vRadio_PowerUp' (auto size = 0) calls into a recursive loop, calls 'DBG_log'.
'vRadio_StartRX' (auto size = 38) calls into a recursive loop, calls 'DBG_log'.
'validateMD5' (auto size = 32) is finite, requires 72 bytes total stack in calling 'wc_Md5Hash' (external).
'validatePatchHeader' (auto size = 204) calls into a recursive loop, calls 'DBG_log'.
'validatePhyPayload' (auto size = 349) calls into a recursive loop, calls 'DBG_log'.
'validateSrfnHeader' (auto size = 106) calls into a recursive loop, calls 'DBG_log'.
'verifyCrc' (auto size = 24) calls into a recursive loop, calls 'DBG_log'.
'verifyFixFileChecksum' (auto size = 18) is non-deterministic, calls through a function pointer.
'verifySignature' (auto size = 901) calls into a recursive loop, calls 'DBG_log'.
'virginDeviceSetup' (auto size = 4) calls into a recursive loop, calls 'VDEV_isNVEmpty'.
'virtualTemperature_Init' (auto size = 0) is finite, requires 20 bytes total stack in calling 'memset'.
'wait_us' (auto size = 33) is finite, requires 73 bytes total stack in calling '_time_get_elapsed_ticks' (external).
'wcschr' (auto size = 6) is finite, requires 6 bytes total stack in calling 'no function'.
'wcspbrk' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'wcsrchr' (auto size = 6) is finite, requires 6 bytes total stack in calling 'no function'.
'wcsstr' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'wcstod' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'wcstof' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'wcstold' (auto size = 8) is finite, requires 8 bytes total stack in calling 'no function'.
'wcstoll' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'wcstoul' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'wcstoull' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'wctob' (auto size = 2) is finite, requires 2 bytes total stack in calling 'no function'.
'wmemchr' (auto size = 12) is finite, requires 12 bytes total stack in calling 'no function'.
'write' (auto size = 28) is non-deterministic, calls through a function pointer.
'write' (auto size = 22) calls a non-deterministic function: 'OS_MUTEX_UNLOCK'.
'write' (auto size = 33) is non-deterministic, calls through a function pointer.
'writeCache' (auto size = 0) calls a non-deterministic function: 'FIO_fwrite'.
'writeConfig' (auto size = 0) calls a non-deterministic function: 'FIO_fwrite'.
